[{"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\index.js":"1","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\reportWebVitals.js":"2","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\App.js":"3","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\store.js":"4","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Header\\Header.jsx":"5","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\PracticeContainer.jsx":"6","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\RequestContainer.jsx":"7","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\TicTacToe\\TikTakToeContainer.jsx":"8","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDiListContainer.jsx":"9","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\toDoListReducer.js":"10","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\testTwoReducer.js":"11","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\testReducer.js":"12","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\staffReducer.js":"13","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\usersReducer.js":"14","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\requestReducer.js":"15","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDoList.jsx":"16","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Staff\\Staff.jsx":"17","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Test\\Test.jsx":"18","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\TestTwo\\TestTwo.jsx":"19","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\Menu\\Menu.jsx":"20","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\Home\\Home.jsx":"21","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\Users\\Users.jsx":"22","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\common\\Loader.jsx":"23","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\TicTacToe\\TicTac\\TicTacToe.jsx":"24","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\api\\api.jsx":"25","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\fieldLevelValidation\\validation.js":"26","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\task\\Task.jsx":"27","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Staff\\Collaborator\\Collaborator.jsx":"28","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\TestTwo\\QuestionTwo\\QuestionTwo.jsx":"29","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\TicTacToe\\TicTacToe_Counter\\Counter.jsx":"30","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Test\\Question\\Question.jsx":"31","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\ModalWindow\\ModalWindow.jsx":"32","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\Home\\BlockInfo\\BlockInfo.jsx":"33","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\Users\\UserCard\\UserCard.jsx":"34","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\ModalWindow2\\ModalWindow2.jsx":"35"},{"size":792,"mtime":1610278891777,"results":"36","hashOfConfig":"37"},{"size":375,"mtime":1607157020068,"results":"38","hashOfConfig":"37"},{"size":978,"mtime":1613296390277,"results":"39","hashOfConfig":"37"},{"size":784,"mtime":1613900287504,"results":"40","hashOfConfig":"37"},{"size":1449,"mtime":1613296390277,"results":"41","hashOfConfig":"37"},{"size":1374,"mtime":1612004699719,"results":"42","hashOfConfig":"37"},{"size":1719,"mtime":1613913749541,"results":"43","hashOfConfig":"37"},{"size":173,"mtime":1612004699812,"results":"44","hashOfConfig":"37"},{"size":894,"mtime":1610278885924,"results":"45","hashOfConfig":"37"},{"size":3262,"mtime":1610278874932,"results":"46","hashOfConfig":"37"},{"size":5429,"mtime":1612004699799,"results":"47","hashOfConfig":"37"},{"size":1491,"mtime":1612004699799,"results":"48","hashOfConfig":"37"},{"size":1065,"mtime":1613296390312,"results":"49","hashOfConfig":"37"},{"size":1247,"mtime":1613913710771,"results":"50","hashOfConfig":"37"},{"size":2375,"mtime":1613900287503,"results":"51","hashOfConfig":"37"},{"size":3615,"mtime":1612597161424,"results":"52","hashOfConfig":"37"},{"size":1506,"mtime":1612004699745,"results":"53","hashOfConfig":"37"},{"size":1089,"mtime":1612004699750,"results":"54","hashOfConfig":"37"},{"size":2533,"mtime":1612004699752,"results":"55","hashOfConfig":"37"},{"size":1028,"mtime":1613900287539,"results":"56","hashOfConfig":"37"},{"size":3033,"mtime":1613900287509,"results":"57","hashOfConfig":"37"},{"size":1243,"mtime":1613913975171,"results":"58","hashOfConfig":"37"},{"size":478,"mtime":1613900287587,"results":"59","hashOfConfig":"37"},{"size":11980,"mtime":1613296390349,"results":"60","hashOfConfig":"37"},{"size":889,"mtime":1614070904096,"results":"61","hashOfConfig":"37"},{"size":532,"mtime":1609941762429,"results":"62","hashOfConfig":"37"},{"size":3331,"mtime":1609941830998,"results":"63","hashOfConfig":"37"},{"size":2423,"mtime":1613296390295,"results":"64","hashOfConfig":"37"},{"size":1941,"mtime":1612004699751,"results":"65","hashOfConfig":"37"},{"size":773,"mtime":1612597161424,"results":"66","hashOfConfig":"37"},{"size":2251,"mtime":1612004699749,"results":"67","hashOfConfig":"37"},{"size":3261,"mtime":1613900287575,"results":"68","hashOfConfig":"37"},{"size":2173,"mtime":1613900287507,"results":"69","hashOfConfig":"37"},{"size":3779,"mtime":1613913820712,"results":"70","hashOfConfig":"37"},{"size":2948,"mtime":1613914036118,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1okj19x",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"74"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"74"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"74"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\index.js",[],["162","163"],"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\reportWebVitals.js",[],"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\App.js",[],"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\store.js",[],"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Header\\Header.jsx",[],"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\PracticeContainer.jsx",[],"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\RequestContainer.jsx",["164"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { useEffect } from 'react/cjs/react.development'\r\nimport { deletePostTC, editPostTC, getPostsTC } from '../Redux/requestReducer'\r\nimport styles from './RequestContainer.module.css'\r\nimport Home from './Home/Home'\r\nimport Menu from './Menu/Menu'\r\nimport Loader from '../common/Loader'\r\nimport Users from './Users/Users'\r\nimport { getUsersTC, editUsersTC } from '../Redux/usersReducer'\r\n\r\nconst RequestContainer = (props) => {\r\n    useEffect(() => {\r\n        props.getPosts();\r\n        props.getUsers();\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styles.requestContainer}>\r\n            { props.loadingProcess && <div className={styles.loaderContainer}>\r\n                <Loader />\r\n            </div>}\r\n            <Menu />\r\n            <Route path='/request_axios/home'><Home postsList={props.postsList} deletPost={props.deletPost}\r\n                editPost={props.editPost} /></Route>\r\n            <Route path='/request_axios/users'>\r\n                <Users users={props.users} editUsers={props.editUsers}/>\r\n            </Route>\r\n            <Route path='/*'><Redirect to={'/request_axios/home'} /></Route>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsList: state.request.postsList,\r\n        loadingProcess: state.request.loadingProcess,\r\n        users: state.users.usersList\r\n    }\r\n}\r\nlet mapDispatchToProps = {\r\n    getPosts: getPostsTC,\r\n    deletPost: deletePostTC,\r\n    editPost: editPostTC,\r\n    getUsers: getUsersTC,\r\n    editUsers: editUsersTC\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestContainer)","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\TicTacToe\\TikTakToeContainer.jsx",[],"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDiListContainer.jsx",[],"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\toDoListReducer.js",["165","166"],"const ADD_NEW_TASK = 'ADD_NEW_TASK';\r\nconst STAGE_OF_DONE = 'STAGE_OF_DONE';\r\nconst EDIT_TEXT_TASK = 'EDIT_TEXT_TASK';\r\nconst DELETE_TASK = 'DELETE_TASK';\r\n\r\nexport const addTaskAC = (task) => ({ type: ADD_NEW_TASK, task });\r\nexport const stageOfDoneAC = (idTask) => ({ type: STAGE_OF_DONE, idTask });\r\nexport const editTextTaskAC = (idTask, textTask) => ({ type: EDIT_TEXT_TASK, idTask, textTask })\r\nexport const deleteTaskAC = (idTask) => ({ type: DELETE_TASK, idTask });\r\n\r\nlet localBaseTask = JSON.parse(localStorage.getItem('taskList')) || []\r\n\r\nlet initialState = {\r\n    taskList: [...localBaseTask]\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    let date = new Date();\r\n\r\n    let getDate = (date.getDate() < 10) ? '0' + date.getDate(): date.getDate();\r\n    let getMonth = (date.getMonth() < 10) ? '0' + (date.getMonth() + 1): date.getMonth() + 1;\r\n    let createDate = `${getDate}.${getMonth}.${date.getFullYear()}`\r\n\r\n    let getHours = (date.getHours() < 10) ? '0' + date.getHours(): date.getHours();\r\n    let getMinutes = (date.getMinutes() < 10) ? '0' + date.getMinutes(): date.getMinutes();\r\n    let createTime = `${getHours}:${getMinutes}`;\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_TASK:\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...state.taskList]\r\n            }\r\n            const idTask = `f${(~~(Math.random() * 1e8)).toString(16)}`;\r\n            stateCopy.taskList.unshift({ id: idTask, text: action.task, done: false, createDateTask: {date: createDate, time: createTime}});\r\n\r\n            localStorage.setItem('taskList', JSON.stringify(stateCopy.taskList))\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n        case STAGE_OF_DONE:\r\n            let arr = state.taskList.map((item) => {\r\n                if (item.id == action.idTask) {\r\n                    item.done = !item.done\r\n                }\r\n                return item\r\n            })\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arr]\r\n            }\r\n            localStorage.setItem('taskList', JSON.stringify(arr))\r\n            return stateCopy;\r\n        case EDIT_TEXT_TASK:\r\n\r\n            let arrEditText = state.taskList.map((item) => {\r\n                if (item.id == action.idTask) {\r\n                    item.text = action.textTask;\r\n                    item.createDateTask.time = `ред. ${createTime}`;\r\n                    item.createDateTask.date = createDate;\r\n                }\r\n                return item\r\n            })\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arrEditText]\r\n            }\r\n            localStorage.setItem('taskList', JSON.stringify(arrEditText))\r\n            return stateCopy;\r\n        case DELETE_TASK:\r\n            let arrfilter = state.taskList.filter((item) => {\r\n                return (item.id !== action.idTask) ? true : false\r\n            });\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arrfilter]\r\n            }\r\n\r\n            localStorage.setItem('taskList', JSON.stringify(arrfilter))\r\n\r\n            return stateCopy;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\testTwoReducer.js",["167","168","169"],"const SELECTED_ANSWER = 'SELECTED_ANSWER'\r\n\r\nexport const selectedAnswerACTWO = (questionId, answerId) => ({ type: SELECTED_ANSWER, questionId, answerId })\r\n\r\nlet initialState = {\r\n    questions: \r\n    [{id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Чем меньше воды, тем больше глубина. Что это?',\r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Литература', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Впадина', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Вулкан', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Знания', correct: false }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Накормишь – живет, напоишь – умрет. О чем речь?', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Память', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Жажда', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Огонь', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Муж', correct: false }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Вам дали, вам принадлежит. Вы не продавали, а пользуются все.', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Умения', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Машина', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Щедрость', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Имя', correct: true }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Чего боятся люди, которые страдают алекторофобией?', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Cобак', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Кур', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Бороды', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Чеснок', correct: false }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Какого газа в атмосфере Земли больше всего?', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Кислород', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Угл. газ', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Азот', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Водород', correct: false }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Назовите столицу Европейского Союза?', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Вена', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Брюсель', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Кельн', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Париж', correct: false }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Как далеко находится Земля от Солнца?', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: '149 000 000 км', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: '14 900 км', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: '257 800 000 км', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: '190 000 000 км', correct: false }], answerUser: ''}],\r\n    answersGiven: 0,\r\n    correctAnswers: 0,\r\n}\r\n\r\nconst testReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type) {\r\n        case SELECTED_ANSWER:\r\n            let arr = state.questions.map(item => {\r\n                if (item.id == action.questionId) {\r\n                    item.answer.map(answerItem =>{\r\n                        if (answerItem.id == action.answerId) {\r\n                            item.answerUser = answerItem.possible\r\n                            state.answersGiven++;\r\n                            if (answerItem.correct) state.correctAnswers++\r\n                        }\r\n                    })\r\n                    return item    \r\n                }\r\n                return item \r\n            })\r\n            console.log(state.correctAnswers)\r\n            stateCopy = {\r\n                ...state,\r\n                questions: [...arr],\r\n            }\r\n            return stateCopy\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default testReducer","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\testReducer.js",["170","171"],"const CHECKING_ANSWER = 'CHECKING_ANSWER'\r\n\r\nexport const ChekingAnswerAC = (id, answer) => ({ type: CHECKING_ANSWER, id, answer })\r\n\r\nlet initialState = {\r\n    questions: [{ id: 1, question: 'Чем меньше воды, тем больше глубина. Что это?', answer: 'литература', answerUser: '' },\r\n    { id: 2, question: 'Накормишь – живет, напоишь – умрет. О чем речь?', answer: 'огонь', answerUser: '' },\r\n    { id: 3, question: 'Вам дали, вам принадлежит. Вы не продавали, а пользуются все знакомые.', answer: 'имя', answerUser: '' }],\r\n    answersGiven: false\r\n}\r\n\r\nconst testReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type) {\r\n        case CHECKING_ANSWER:\r\n            let testAnswersGiven;\r\n            let arr = state.questions.map(item => {\r\n                if (action.id == item.id) {\r\n                    item.answerUser = action.answer\r\n                }\r\n                item.answerUser == '' ? testAnswersGiven = false : testAnswersGiven = true;\r\n                return item\r\n            })\r\n            console.log(arr)\r\n            stateCopy = {\r\n                ...state,\r\n                questions: [...state.questions],\r\n                answersGiven: testAnswersGiven\r\n            }\r\n            return stateCopy\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default testReducer","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\staffReducer.js",["172","173","174","175","176"],"const EDIT_VALUE = 'EDIT_VALUE';\r\n\r\n\r\nexport const editValueAC = (id, value, trigger) => ({ type: EDIT_VALUE, id, value, trigger });\r\n\r\n\r\nlet initialState = {\r\n    staffList: [{ id: '1', name: 'Андрей', daysWorked: 2, rate: 1000 },\r\n    { id: '2', name: 'Кирилл', daysWorked: 3, rate: 1100 }]\r\n}\r\n\r\nconst staffReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case EDIT_VALUE:\r\n            let arr = state.staffList.map(item => {\r\n                if (action.trigger == 'DAYS') {\r\n                    if (item.id == action.id) item.daysWorked = action.value\r\n                }\r\n                if (action.trigger == 'RATE') {\r\n                    if (item.id == action.id) item.rate = action.value\r\n                }\r\n                return item\r\n            })\r\n            stateCopy = {\r\n                ...state,\r\n                staffList: [...state.staffList],\r\n            }\r\n            return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default staffReducer","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\usersReducer.js",[],"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\requestReducer.js",["177","178","179"],"import { compose } from \"redux\";\r\nimport { apiDeletPost, apiEditPost, apiGetPosts } from \"../../api/api\";\r\n\r\nconst GET_POSTS = 'GET_POSTS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst EDIT_POST = 'EDIT_POST';\r\nconst LOADING = 'LOADING';\r\n\r\nexport const getPostsAC = (posts) => ({ type: GET_POSTS, posts });\r\nexport const deletePostAC = (postId) => ({ type: DELETE_POST, postId });\r\nexport const editPostAC = (postId, postTittle, postBody) => ({ type: EDIT_POST, postId, postTittle, postBody });\r\nexport const loadingAC = () => ({ type: LOADING })\r\n\r\nlet initialState = {\r\n  postsList: [],\r\n  loadingProcess: false,\r\n}\r\n\r\nconst requestReducer = (state = initialState, action) => {\r\n  let stateCopy;\r\n  switch (action.type) {\r\n    case GET_POSTS:\r\n      stateCopy = {\r\n        ...state,\r\n        postsList: action.posts\r\n      }\r\n      return stateCopy;\r\n    case DELETE_POST:\r\n      let arrDeleteItem = state.postsList.filter(item => {\r\n        if (item.id !== action.postId) return item\r\n      })\r\n      stateCopy = {\r\n        ...state,\r\n        postsList: arrDeleteItem,\r\n      }\r\n      return stateCopy;\r\n    case EDIT_POST:\r\n      let arrEdit = state.postsList.map(item => {\r\n        if (item.id == action.postId) {\r\n          item.title = action.postTittle\r\n          item.body = action.postBody\r\n        }\r\n        return item\r\n      })\r\n      stateCopy = {\r\n        ...state,\r\n        postsList: arrEdit,\r\n      }\r\n      return stateCopy;\r\n    case LOADING:\r\n      stateCopy = {\r\n        ...state,\r\n        loadingProcess: !state.loadingProcess\r\n      }\r\n      return stateCopy\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getPostsTC = () => {\r\n  return (\r\n    async (dispatch) => {\r\n      let response = await apiGetPosts();\r\n      dispatch(getPostsAC(response));\r\n    }\r\n  )\r\n}\r\nexport const deletePostTC = (idPost) => {\r\n  return (\r\n    async (dispatch) => {\r\n      dispatch(loadingAC())\r\n      await apiDeletPost(idPost); // Delete to server posts\r\n      dispatch(deletePostAC(idPost));\r\n      dispatch(loadingAC())\r\n    }\r\n  )\r\n}\r\nexport const editPostTC = (idPost, postTittle, postBody) => {\r\n  return (\r\n    async (dispatch) => {\r\n      dispatch(loadingAC())\r\n      await apiEditPost(idPost, postTittle, postBody);\r\n      dispatch(editPostAC(idPost, postTittle, postBody))\r\n      dispatch(loadingAC())\r\n    }\r\n  )\r\n}\r\n\r\nexport default requestReducer","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDoList.jsx",["180","181","182","183","184","185"],"import React, { useState } from 'react'\r\nimport styles from './ToDoList.module.css'\r\nimport Task from './task/Task'\r\nimport { Field } from 'redux-form'\r\nimport { required } from '../fieldLevelValidation/validation';\r\n\r\nexport const renderField = ({ input, type, meta: { submitFailed, error, warning },} ) => {\r\n    return (\r\n        <div className={styles.inputForm_container}>\r\n            <div>\r\n                <textarea {...input} type={type} className={styles.inputForm} placeholder='Напишите новую задачу' />\r\n            </div>\r\n            <div className={styles.inputForm_error}>\r\n                {submitFailed && ((error && <span >{error}</span>) ||\r\n                    (warning && <span className={styles.inputForm_error}>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ToDoList = (props) => {\r\n    const [filterMode, setFilterMode] = useState(1);\r\n    const [inProp, setInProp] = useState(true);\r\n\r\n    let changeFilter = (filterNumber) => {\r\n        setFilterMode(filterNumber);\r\n        setInProp(!inProp);\r\n    }\r\n\r\n    let undoneTask = props.taskList.filter(item => !item.done)\r\n    let doneTask = props.taskList.filter(item => item.done)\r\n    let allTask = undoneTask.concat(doneTask)\r\n    let resultAllTask = allTask.map((item) => {\r\n        return <Task key={item.id} text={item.text} done={item.done} edit={item.edit}\r\n            stageOfDone={props.stageOfDone} id={item.id}\r\n            deleteTask={props.deleteTask} editTextTask={props.editTextTask} \r\n            date={item.createDateTask.date} time={item.createDateTask.time} />\r\n    })\r\n\r\n    let resultDoneTask = resultAllTask.filter((item) => item.props.done);\r\n    let resultUnDoneTask = resultAllTask.filter((item) => !item.props.done);\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.wrapper}>\r\n                <h3 className={styles.tittle}>Лист задач:</h3>\r\n                <div className={styles.filter}>\r\n                    <p className={filterMode == 1 ? styles.filter_active : ''} onClick={() => { changeFilter(1) }}>Все задачи</p>\r\n                    <p className={filterMode == 2 ? styles.filter_active : ''} onClick={() => { changeFilter(2) }} >Активные задачи</p>\r\n                    <p className={filterMode == 3 ? styles.filter_active : ''} onClick={() => { changeFilter(3) }}>Выполненные задачи</p>\r\n                </div>\r\n                <div className={styles.todolist}>\r\n                    <div className={styles.info}>\r\n                        <p className={styles.info_undone}>Активные задачи: <span>{undoneTask.length}</span> </p>\r\n                        <p className={styles.info_done}>Выполненные задачи: <span>{doneTask.length}</span> </p>\r\n                    </div>\r\n                    <form onSubmit={props.handleSubmit} className={styles.formControl}>\r\n                        <Field className={styles.input} name='newTask'\r\n                            component={renderField} validate={[required]} />\r\n                        <button className={styles.addTask}>Добавить</button>\r\n                    </form>\r\n                            <div className={styles.hhh}>\r\n                                {filterMode == 1 ? resultAllTask : ''}\r\n                                {filterMode == 2 ? resultUnDoneTask : ''}\r\n                                {filterMode == 3 ? resultDoneTask : ''}\r\n                            </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ToDoList","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Staff\\Staff.jsx",["186","187","188","189"],"import { faCheckCircle, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react'\r\nimport Collaborator from './Collaborator/Collaborator';\r\nimport styles from './Staff.module.css'\r\n\r\n\r\nconst Staff = ({staffList, ...props}) => {\r\n    let allSalary = 0;\r\n    let staffListArr = staffList.map((item) => {\r\n        allSalary += item.daysWorked * item.rate\r\n        return <Collaborator key={item.id} id={item.id} name={item.name} daysWorked={item.daysWorked} rate={item.rate} editValue={props.editValue}/>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h3>Задание № 1 (Посчет ЗП работников)</h3>\r\n            <div className={styles.contaiter}>\r\n                <table >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Имя</th>\r\n                            <th>Кол-во Дней</th>\r\n                            <th>Ставка</th>\r\n                            <th>Зарплата</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {staffListArr}\r\n                        <tr>\r\n                            <th>Общая зп</th>\r\n                            <td colSpan='3'>{allSalary}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Staff","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Test\\Test.jsx",[],"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\TestTwo\\TestTwo.jsx",["190"],"import React, { useState } from 'react'\r\nimport Slider from 'react-slick';\r\nimport QuestionTwo from './QuestionTwo/QuestionTwo';\r\nimport styles from './TestTwo.module.css'\r\n\r\nconst TestTwo = ({ test, answersGivenTwo, selectedAnswer, correctAnswers }) => {\r\n    const [testDone, setTestDone] = useState(false)\r\n\r\n    const customeSlider = React.createRef();\r\n    const [sliderSettings, setSliderSettings] = useState({\r\n        infinite: false,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        arrows: false,\r\n    })\r\n\r\n    const gotoNext = () => {\r\n        customeSlider.current.slickNext()\r\n    }\r\n\r\n    const gotoPrev = () => {\r\n        customeSlider.current.slickPrev()\r\n    }\r\n\r\n    let questions = test.map(item => {\r\n        return <QuestionTwo key={item.id} id={item.id} question={item.question}\r\n            answer={item.answer} answerUser={item.answerUser} selectedAnswer={selectedAnswer}\r\n            testDone={testDone} gotoNext={gotoNext} />\r\n    })\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.container}>\r\n                <h3>Задание № 3 (Тест)</h3>\r\n                {!testDone ?\r\n                    <div>\r\n                        <Slider {...sliderSettings} ref={customeSlider}>\r\n                            {questions}\r\n                        </Slider>\r\n                        <div className={styles.navigation_container}>\r\n                            <button className={styles.buttonNavigation} onClick={() => gotoPrev()}>Предыдущий <br/> вопрос</button>\r\n                            <button className={styles.buttonNavigation} onClick={() => gotoNext()}>Следующий <br/> вопрос</button>\r\n                        </div>\r\n                        <div className={styles.button_container}>\r\n                            <button onClick={() => { setTestDone(!testDone) }} disabled={answersGivenTwo !== test.length}\r\n                                className={styles.button}> Сдать тест</button>\r\n                        </div>\r\n                    </div> :\r\n                    <div>\r\n                        <div className={styles.doneContainer}>\r\n                            {questions}\r\n                        </div>\r\n                        <p className={styles.doneInfo}>Колличество Ваших правильных ответов - <span>{correctAnswers}</span></p>\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestTwo","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\Menu\\Menu.jsx",[],"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\Home\\Home.jsx",["191","192","193","194","195"],"import React from 'react'\r\nimport { useTransition, animated } from 'react-spring'\r\nimport { useState } from 'react/cjs/react.development'\r\nimport Loader from '../../common/Loader'\r\nimport ModalWindow from '../ModalWindow/ModalWindow'\r\nimport BlockInfo from './BlockInfo/BlockInfo'\r\nimport styles from './Home.module.css'\r\n\r\nconst Home = ({ postsList, deletPost, editPost }) => {\r\n\r\n    let [cardSizeBig, setCardSizeBig] = useState(false)\r\n    let [amountPosts, setAmountPosts] = useState(3)\r\n    let [viewPost, setViewPost] = useState({\r\n        title: '',\r\n        body: '',\r\n        postId: null,\r\n        trigger: '',\r\n        messages: '',\r\n        show: false\r\n    })\r\n\r\n    const onShowMore = () => {\r\n        setAmountPosts(amountPosts + (cardSizeBig ? 4 : 3))\r\n    }\r\n    const onViewPost = (title, body, postId, trigger, messages) => {\r\n\r\n        setViewPost({\r\n            ...viewPost,\r\n            title,\r\n            body,\r\n            postId,\r\n            trigger,\r\n            messages,\r\n            show: true\r\n        })\r\n    }\r\n    const onCloseViewPost = () => {\r\n        setViewPost({\r\n            ...viewPost,\r\n            show: false\r\n        })\r\n    }\r\n    const onBigCard = () => {\r\n        setCardSizeBig(true)\r\n    }\r\n    const onSmallCard = () => {\r\n        setCardSizeBig(false)\r\n    }\r\n    const transitions = useTransition(postsList, item => item.id, {\r\n        from: { transform: 'translate3d(0,-40px,0)' },\r\n        enter: { width: '300px' },\r\n        leave: { width: '1300px' },\r\n    })\r\n\r\n    let a = transitions.map(({ item, props, key }) => {\r\n        if (item.id <= amountPosts + cardSizeBig && 1) return <animated.div >\r\n            <BlockInfo key={key} style={props} id={item.id} postBody={item.body}\r\n                postTitle={item.title} onViewPost={onViewPost} cardSizeBig={cardSizeBig} />\r\n        </animated.div>\r\n    })\r\n    const onePost = postsList.map(item => {\r\n        if (item.id <= amountPosts) return <BlockInfo key={item.id} id={item.id} postBody={item.body} postTitle={item.title} />\r\n    })\r\n\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.main_navigationSizeCards + ' ' + styles.hide_navigationResize}>\r\n                <button className={cardSizeBig && styles.main_buttonActive} onClick={onBigCard}>Make big cards</button>\r\n                <button className={!cardSizeBig && styles.main_buttonActive} onClick={onSmallCard}>Make small cards</button>\r\n            </div>\r\n            <div className={styles.main_container + ' ' + (cardSizeBig && styles.main_containerBigCard)}>\r\n                {a}\r\n            </div>\r\n            <div className={a[a.length - 1] == undefined ? styles.main_showMoreContainer : styles.hide}>\r\n                <button className={styles.main_showMore} onClick={onShowMore}>Show more</button>\r\n            </div>\r\n            {viewPost.show && <ModalWindow viewPost={viewPost} onCloseViewPost={onCloseViewPost} deletPost={deletPost} editPost={editPost} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\Users\\Users.jsx",["196","197","198"],"import React from 'react'\r\nimport { useState } from 'react/cjs/react.development'\r\nimport UserCard from './UserCard/UserCard'\r\nimport styles from './Users.module.css'\r\nimport ModalWindow2 from '../ModalWindow2/ModalWindow2'\r\n\r\nconst Users = ({ users, editUsers }) => {\r\n    let [visibleUsers, setVisibleUsers] = useState(3)\r\n\r\n    let userList = users.map((item, index) => {\r\n\r\n\r\n        if (index < visibleUsers) return <UserCard key={item.id} id={item.id} name={item.name} userName={item.username}\r\n            phone={item.phone} website={item.website} email={item.email}\r\n            address={item.address} company={item.company} editUsers={editUsers}/>\r\n    })\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.wrapperUserList}>\r\n                <div className={styles.userList}>\r\n                    {userList}\r\n                </div>\r\n                <div className={styles.buttonMoreUsers__wrapper}>\r\n                    { userList[userList.length-1] == undefined && \r\n                    <button className={styles.buttonMoreUsers} onClick={() => {setVisibleUsers(visibleUsers + 3)}}>More</button>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\common\\Loader.jsx",[],"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\TicTacToe\\TicTac\\TicTacToe.jsx",["199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"import React, { useEffect, useState } from 'react'\r\nimport styles from './TicTacToe.module.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChild, faDesktop, faSmileBeam, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { Transition } from 'react-spring/renderprops'\r\nimport Counter from '../TicTacToe_Counter/Counter'\r\n\r\nlet times = <FontAwesomeIcon className={styles.times} icon={faTimes} />\r\nlet circle = <div className={styles.circle}></div>\r\nlet child = <FontAwesomeIcon className={styles.child} icon={faChild} />\r\nlet desktop = <FontAwesomeIcon className={styles.desktop} icon={faDesktop} />\r\nlet smille = <FontAwesomeIcon className={styles.smille} icon={faSmileBeam} />\r\n\r\nlet winningCombination = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [1, 4, 7], [2, 5, 8], [3, 6, 9], [1, 5, 9], [3, 5, 7]]\r\n\r\nconst TikTakToe = () => {\r\n    let stateArr = [{ id: 1, times: false, circle: false },\r\n    { id: 2, times: false, circle: false },\r\n    { id: 3, times: false, circle: false },\r\n    { id: 4, times: false, circle: false },\r\n    { id: 5, times: false, circle: false },\r\n    { id: 6, times: false, circle: false },\r\n    { id: 7, times: false, circle: false },\r\n    { id: 8, times: false, circle: false },\r\n    { id: 9, times: false, circle: false }]\r\n\r\n    let countValue = { times: 0, circle: 0, draw: 0 }\r\n\r\n    let [state, setState] = useState(stateArr);\r\n    let [priorityCircle, setPriorityCircle] = useState(false);\r\n    let [combinationX, setCombinationX] = useState([]);\r\n    let [combinationO, setCombinationO] = useState([]);\r\n    let [winnerIndicator, setWinnerIndicator] = useState(false);\r\n    let [winnerIndicatorTwo, setWinnerIndicatorTwo] = useState(false);\r\n    let [drawIndicator, setDrawIndicator] = useState(false);\r\n    let [winnerID, setWinnerID] = useState(null);\r\n    let [winnerForm, setWinnerForm] = useState('');\r\n    let [count, setCount] = useState(countValue);\r\n    let [opponentChoosingDisplay, setOpponentChoosingDisplay] = useState(true)\r\n    let [opponentDesktop, setOpponentDesktop] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (combinationX.length >= 3) victoryCheck()\r\n    }, [combinationX])\r\n\r\n    useEffect(() => {\r\n        if (combinationO.length >= 3) victoryCheck()\r\n    }, [combinationO])\r\n\r\n    const courseBot = () => {\r\n        if (priorityCircle) {\r\n            let whileValue = true;\r\n            while (whileValue) {\r\n                console.log('1')\r\n                let randomId = Math.floor(1 + Math.random() * (9 + 1 - 1)) + \"\"\r\n                state.map(item => {\r\n                    if (randomId == item.id && item.times == false && item.circle == false) {\r\n                        item.circle = true\r\n                        setCombinationO([...combinationO, item.id])\r\n                        setPriorityCircle(false)\r\n                        whileValue = false;\r\n                        return\r\n                    }\r\n                    if (combinationO.length + combinationX.length == 8) whileValue = false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    let clearFild = () => {\r\n        setTimeout(() => {\r\n            setWinnerIndicatorTwo(true)\r\n            setTimeout(() => {\r\n                setState(stateArr);\r\n                setWinnerIndicator(false);\r\n                setWinnerIndicatorTwo(false)\r\n                setCombinationX([]);\r\n                setCombinationO([]);\r\n                setWinnerID(null);\r\n                setDrawIndicator(false)\r\n                setPriorityCircle(false);\r\n                setWinnerForm('')\r\n            }, 3000);\r\n        }, 3000);\r\n    }\r\n    const victoryCheck = () => {\r\n        let finish = false\r\n\r\n        winningCombination.forEach((itemWinArr, index) => {\r\n            let winnerX = 0\r\n            let winnerO = 0\r\n            itemWinArr.forEach(itemWin => {\r\n                if (combinationX.includes(itemWin)) winnerX++\r\n                if (combinationO.includes(itemWin)) winnerO++\r\n            })\r\n            if (winnerX == 3 || winnerO == 3) {\r\n                setWinnerIndicator(true)\r\n                setWinnerID(index)\r\n                clearFild()\r\n                setWinnerForm(priorityCircle ? 'times' : 'circle')\r\n                priorityCircle ? setCount({ ...count, times: count.times + 1 }) :\r\n                    setCount({ ...count, circle: count.circle + 1 })\r\n                finish = true\r\n            }\r\n            winnerX = 0;\r\n            winnerO = 0;\r\n        })\r\n        if ((combinationO.length + combinationX.length) == 9 && !finish) {\r\n            clearFild()\r\n            setWinnerIndicator(true)\r\n            setDrawIndicator(true)\r\n            setCount({ ...count, draw: count.draw + 1 })\r\n        }\r\n    }\r\n\r\n    let onClickZone = (e) => {\r\n        if (winnerIndicator) return\r\n        state.map(item => {\r\n            if (e.target.id == item.id && item.times == false && item.circle == false) {\r\n                if (priorityCircle) {\r\n                    item.circle = true\r\n                    setCombinationO([...combinationO, item.id])\r\n                    setPriorityCircle(false)\r\n                } else {\r\n                    item.times = true\r\n                    setCombinationX([...combinationX, item.id])\r\n                    setPriorityCircle(true)\r\n                }\r\n            }\r\n            return item\r\n        })\r\n    }\r\n    let onClickZoneVSDesktop = (e) => {\r\n        if (winnerIndicator) return\r\n        if (priorityCircle) {\r\n            courseBot()\r\n        } else {\r\n            state.map(item => {\r\n                if (e.target.id == item.id && item.times == false && item.circle == false) {\r\n                    item.times = true\r\n                    setCombinationX([...combinationX, item.id])\r\n                    setPriorityCircle(true)\r\n                }\r\n                return item\r\n            })\r\n        }\r\n    }\r\n\r\n    const onOpponentChoosing = (e) => {\r\n        if (e.currentTarget.dataset.opponent == 'desktop') setOpponentDesktop(true)\r\n        setOpponentChoosingDisplay(false)\r\n    }\r\n\r\n    let renderState = state.map(item => {\r\n        return (\r\n            <div className={styles.zone + \" \" + (winnerIndicator && styles.zoneWiner)} id={item.id}\r\n                key={item.id} onClick={opponentDesktop ? onClickZoneVSDesktop : onClickZone}>\r\n                {item.times && times}\r\n                {item.circle && circle}\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            <div className={styles.container}>\r\n                <div className={styles.priorityInfo_wrapper}>\r\n                    <div className={styles.priorityInfo}>\r\n                        {!winnerIndicator ?\r\n                            !opponentChoosingDisplay ? <div className={styles.priorityInfo_unWinner}>\r\n                                <div className={styles.priorityInfo_title}>Ход:</div>\r\n                                <div className={styles.priorityInfo_icon}>{priorityCircle ? circle : times}</div>\r\n                            </div> : <div className={styles.priorityInfo_titleVS}> ? vs ?</div>\r\n                            : smille}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.tikTakToe_wrapper}>\r\n                    <p className={styles.tikTakToe_tittleOpponent}>{!opponentChoosingDisplay && (opponentDesktop ? <span>{child} vs {desktop}</span> : <span>{child} vs {child}</span>)} </p>\r\n                    <Transition\r\n                        items={!winnerIndicatorTwo}\r\n                        from={{ position: 'absolute', opacity: 0 }}\r\n                        enter={{ opacity: 1 }}\r\n                        leave={{ opacity: 0 }}>\r\n                        {toggle =>\r\n                            toggle\r\n                                ? props => <div style={props} className={styles.tikTakToe}>\r\n                                    {renderState}\r\n                                    <div className={styles.allLineWrapper + \" \" + (winnerID == null && styles.allLineHide)}>\r\n                                        <div className={styles.winLineHorizontal_wrapper}>\r\n                                            <div className={styles.lineHorizontal + \" \" + (winnerID == 0 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                            <div className={styles.lineHorizontal + \" \" + (winnerID == 1 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                            <div className={styles.lineHorizontal + \" \" + (winnerID == 2 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                        </div>\r\n                                        <div className={styles.winLineVertical_wrapper}>\r\n                                            <div className={styles.lineVertical + \" \" + (winnerID == 3 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                            <div className={styles.lineVertical + \" \" + (winnerID == 4 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                            <div className={styles.lineVertical + \" \" + (winnerID == 5 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                        </div>\r\n                                        <div className={styles.winLineDiagonal_wrapper}>\r\n                                            <div className={styles.lineDiagonal_left + \" \" + (winnerID == 6 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                            <div className={styles.lineDiagonal_right + \" \" + (winnerID == 7 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                : props => <div style={props} className={styles.winner_container}>\r\n                                    {!drawIndicator ?\r\n                                        <div>\r\n                                            <div className={styles.winner_icon}>{(winnerForm == 'times' && times) || (winnerForm == 'circle' && circle)}</div>\r\n                                            <p className={(winnerForm == 'times' && styles.winner_textTimes) || (winnerForm == 'circle' && styles.winner_textCircle)}>{winnerForm !== '' && \"ПОБЕДИТЕЛЬ!\"}</p>\r\n                                        </div> :\r\n                                        <div>\r\n                                            <div className={styles.draw_icon} >\r\n                                                {times} {circle}\r\n                                            </div>\r\n                                            <p className={styles.draw_text}>НИЧЬЯ!</p>\r\n                                        </div>\r\n                                    }\r\n                                </div>}\r\n                    </Transition>\r\n                </div>\r\n            </div>\r\n            <Counter times={times} circle={circle} count={count} />\r\n            {opponentChoosingDisplay && <div className={styles.choosingOpponent_wrapper}>\r\n                <div className={styles.choosingOpponent_container}>\r\n                    <p className={styles.choosingOpponent_info}>Выберете оппонента :</p>\r\n                    <div className={styles.choosingOpponent}>\r\n                        <button className={styles.choosingOpponent_buttonChild} onClick={onOpponentChoosing} data-opponent={'child'}>{child} vs {child}</button>\r\n                        <button className={styles.choosingOpponent_buttonDesktop} onClick={onOpponentChoosing} data-opponent={'desktop'}>{child} vs {desktop}</button>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TikTakToe","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\api\\api.jsx",[],"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\fieldLevelValidation\\validation.js",["230","231","232","233"],"import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nexport const required = value => (value || typeof value === 'number' ? undefined : 'Поле не может быть пустым')\r\n\r\nconst maxLength = max => value =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n  \r\nconst maxLength15 = maxLength(15)\r\n\r\nexport const minLength = min => value =>\r\n  value && value.length < min ? `Must be ${min} characters or more` : undefined\r\n\r\nexport const minLength2 = minLength(2)","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\task\\Task.jsx",[],"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Staff\\Collaborator\\Collaborator.jsx",["234","235","236","237","238","239","240","241","242"],"import { faCheckCircle, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react'\r\nimport styles from './Collaborator.module.css'\r\n\r\n\r\nconst Collaborator = (props) => {\r\n    let [editModeDays, setEditModeDays] = useState(false);\r\n    let [editModeRate, setEditModeRate] = useState(false);\r\n\r\n    const onEditDays = () => {\r\n        setEditModeDays(!editModeDays)\r\n    }\r\n    const onEditRate = () => {\r\n        setEditModeRate(!editModeRate)\r\n    }\r\n    const onEditDaysKeyDown = (e) => {\r\n        if (e.code == 'Enter' || e.code == 'NumpadEnter') setEditModeDays(!editModeDays)\r\n    }\r\n    const onEditRateKeyDown = (e) => {\r\n        if (e.code == 'Enter' || e.code == 'NumpadEnter') setEditModeRate(!editModeRate)\r\n    }\r\n    const onChangeRate = (targetValue, trigger) => {\r\n        let value = targetValue.replace(/\\D/g, '')\r\n        if (value.length == 2 && value[0] == 0) value = value.substring(1)\r\n        if (value == '') value = 0;\r\n        if (trigger == 'RATE') props.editValue(props.id, value, trigger)\r\n        if (trigger == 'DAYS') props.editValue(props.id, value, trigger)\r\n    }\r\n    return (\r\n        <tr key={props.id}>\r\n            <td>{props.name}</td>\r\n            <td className={styles.days}>{!editModeDays ?\r\n                <div>{props.daysWorked} <FontAwesomeIcon icon={faPencilAlt} className={styles.edit} onClick={onEditDays} /></div> :\r\n                <div><input type='text' min='0' value={props.daysWorked} className={styles.days_input} autoFocus={true} onChange={(e) => { onChangeRate(e.target.value, 'DAYS') }} onKeyDown={onEditDaysKeyDown} />\r\n                    <FontAwesomeIcon icon={faCheckCircle} className={styles.edit} onClick={onEditDays} /></div>}</td>\r\n            <td className={styles.rate}>{!editModeRate ?\r\n                <div>{props.rate}<FontAwesomeIcon icon={faPencilAlt} className={styles.edit} onClick={onEditRate} /></div> :\r\n                <div><input type='text' min='0' value={props.rate} autoFocus={true} className={styles.rate_input} onChange={(e) => { onChangeRate(e.target.value, 'RATE') }} onKeyDown={onEditRateKeyDown} />\r\n                    <FontAwesomeIcon icon={faCheckCircle} className={styles.edit} onClick={onEditRate} /></div>}</td>\r\n            <td>{props.daysWorked * props.rate}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Collaborator","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\TestTwo\\QuestionTwo\\QuestionTwo.jsx",["243","244","245","246","247","248"],"import React, { useState } from 'react'\r\nimport styles from './QuestionTwo.module.css'\r\n\r\nconst QuestionTwo = ({ id, question, answer, answerUser, testDone, selectedAnswer, gotoNext }) => {\r\n\r\n    const onSelectedAnswer = (id, itemId) => {\r\n        selectedAnswer(id, itemId);\r\n        gotoNext();\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.question}>\r\n                {question}\r\n            </div>\r\n\r\n            <div className={styles.navigation}>\r\n                <div className={styles.answerOptions}>\r\n                    {!testDone ? answer.map(item => {\r\n                        return <button className={styles.possibleAnswer + \" \" + ((answerUser == item.possible) ? styles.possibleAnswerOk : '')}\r\n                            onClick={() => { onSelectedAnswer(id, item.id) }} disabled={answerUser}>{item.possible}</button>\r\n                    }) : answer.map(item => {\r\n                        console.log(item.possible == answerUser, item.correct)\r\n                        return <button\r\n                            className={styles.possibleAnswer + \" \" + (item.correct && styles.done_correct) + \" \" +\r\n                                (item.possible == answerUser && item.correct && styles.done_correct) + \" \" + (item.possible == answerUser && !item.correct && styles.done_unCorrect)}\r\n                            disabled={true}>\r\n                            {item.possible}\r\n                            {item.correct && <p className={styles.done_info} >Верный ответ</p>}\r\n                            {(item.possible == answerUser && !item.correct && <p className={styles.done_info} >Вы ответили</p>)}\r\n                        </button>\r\n                    })}\r\n                </div>\r\n                {!testDone ? answerUser ? 'Ответ принят' : null : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionTwo","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\TicTacToe\\TicTacToe_Counter\\Counter.jsx",[],"D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Test\\Question\\Question.jsx",["249","250","251","252","253"],"import React, { useState } from 'react'\r\nimport styles from './Question.module.css'\r\n\r\nconst Question = ({ id, question, answer, answerUser, chekingAnswer, testDone }) => {\r\n\r\n    const [answerValue, setAnswerValue] = useState('');\r\n    const [error, setError] = useState(false)\r\n\r\n    const onAnswer = (e) => {\r\n        if (/^\\s+$/.test(e.target.value) || e.target.value == '') {\r\n            setError(true)\r\n        } else {\r\n            setAnswerValue(e.target.value.toLowerCase().trim())\r\n            setError(false)\r\n        }\r\n    }\r\n\r\n    const onChekingAnswer = () => {\r\n        if (/^\\s+$/.test(answerValue) || answerValue == '') {\r\n            setError(true)\r\n        } else {\r\n            chekingAnswer(id, answerValue)\r\n            setError(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.question}>\r\n                {question}\r\n            </div>\r\n\r\n            <div className={styles.navigation}>\r\n                {testDone ?\r\n                    <div>\r\n                        <p>{answer == answerUser ?\r\n                            <p className={styles.correctAnswer}>Ваш ответ: <span>{answerUser}</span> - правильно! </p> :\r\n                            <p className={styles.unCorrectAnswer}>Ваш ответ: <span>{answerUser}</span> - не верно! Верный ответ: <span>{answer}</span> </p>}</p>\r\n                    </div> :\r\n                    <div className={styles.dataInput}>\r\n                        <input type=\"text\" name=\"\" id=\"\" className={styles.answer} onChange={onAnswer} disabled={answerUser == '' ? false : true} />\r\n                        <div className={`${styles.error} ${error ? styles.showError : ''}`}> Это поле не может быть пустым </div>\r\n                        {answerUser == '' ?\r\n                            <button onClick={onChekingAnswer} className={styles.button} disabled={error ? true : false}>Ответить</button> :\r\n                            <span className={styles.recd}>Ответ принят</span>}\r\n                    </div>}\r\n                <div className={styles.border}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\ModalWindow\\ModalWindow.jsx",["254","255","256","257"],"import { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React from 'react'\r\nimport { useEffect, useState } from 'react/cjs/react.development'\r\nimport styles from './ModalWindow.module.css'\r\n\r\nconst ModalWindow = ({ viewPost, onCloseViewPost, deletPost, editPost }) => {\r\n    let [newDataPost, setNewDataPost] = useState({\r\n        postTitle: viewPost.title,\r\n        postBody: viewPost.body\r\n    })\r\n\r\n    const deletePost = <FontAwesomeIcon icon={faTimes} className={styles.iconDelete} onClick={onCloseViewPost} />\r\n    const onDeletePost = () => {\r\n        deletPost(viewPost.postId);\r\n        onCloseViewPost();\r\n    }\r\n    const onChangeDataPostTittle= (e) => {\r\n        setNewDataPost({\r\n            postTitle: e.target.value,\r\n            postBody: newDataPost.postBody\r\n        })\r\n    }\r\n    const onChangeDataPostBody = (e) => {\r\n        setNewDataPost({\r\n            postTitle: newDataPost.postTitle,\r\n            postBody: e.target.value\r\n        })\r\n    }\r\n    const onEditPost = () => {\r\n        editPost(viewPost.postId, newDataPost.postTitle, newDataPost.postBody);\r\n        onCloseViewPost();\r\n    }\r\n    return (\r\n        <div className={viewPost.show ? styles.viewModal : styles.hide}>\r\n            <div className={styles.viewModal_wrapper}>\r\n                {viewPost.trigger == 'VIEW' && <div>\r\n                    {deletePost}\r\n                    <h3>{viewPost.title}</h3>\r\n                    <p>{viewPost.body}</p>\r\n                </div>}\r\n                {viewPost.trigger == 'DELETE' &&\r\n                    <div>\r\n                        <h3>{viewPost.messages}</h3>\r\n                        <div>\r\n                            <h3>{viewPost.title}</h3>\r\n                            <p>{viewPost.body}</p>\r\n                        </div>\r\n                        <div className={styles.viewModal_navigation}>\r\n                            <button className={styles.viewModal_button} onClick={onDeletePost}>Yes</button>\r\n                            <button className={styles.viewModal_button} onClick={onCloseViewPost}>No</button>\r\n                        </div>\r\n                    </div>}\r\n                {viewPost.trigger == 'EDIT' &&\r\n                    <div>\r\n                        <h3>{viewPost.messages}</h3>\r\n                        <div className={styles.editContainer}>\r\n                            <p>Tittle:</p>\r\n                            <textarea className={styles.editTittleTextarea} onChange={(e) => {onChangeDataPostTittle(e)}} value={newDataPost.postTitle}></textarea>\r\n                            <p>Body:</p>\r\n                            <textarea className={styles.editBodyTextarea} onChange={(e) => {onChangeDataPostBody(e)}} value={newDataPost.postBody}></textarea>\r\n                        </div>\r\n                        <div className={styles.viewModal_navigation}>\r\n                            <button className={styles.viewModal_button} onClick={onEditPost}>Edit</button>\r\n                            <button className={styles.viewModal_button} onClick={onCloseViewPost}>Cancel</button>\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalWindow","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\Home\\BlockInfo\\BlockInfo.jsx",["258","259","260","261"],"import { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, { useState } from 'react'\r\nimport styles from './BlockInfo.module.css'\r\n\r\nconst BlockInfo = ({ id, postBody, postTitle, onViewPost, cardSizeBig }) => {\r\n    let [backgroundColor, setBackgroundColor] = useState(0)\r\n\r\n    const onSetBackgroundColor = () => {\r\n        setBackgroundColor(backgroundColor = backgroundColor + 1)\r\n        if (backgroundColor == 4) setBackgroundColor(0)\r\n    }\r\n\r\n    const editPost = <FontAwesomeIcon icon={faEdit} className={styles.iconEdit}\r\n        onClick={() => onViewPost(postTitle, postBody, id, 'EDIT', 'Editing a post')} />\r\n    const deletePost = <FontAwesomeIcon icon={faTrash} className={styles.iconDelete}\r\n        onClick={() => onViewPost(postTitle, postBody, id, 'DELETE', 'Are you sure you want to delete this post?')} />\r\n\r\n    return (\r\n        <div className={styles.blockInfo\r\n            + ' ' + (backgroundColor == 1 && styles.backgroundRed)\r\n            + ' ' + (backgroundColor == 2 && styles.backgroundGreen)\r\n            + ' ' + (backgroundColor == 3 && styles.backgroundBlue)\r\n            + ' ' + (cardSizeBig && styles.blockInfoBigCard)}>\r\n            <div className={styles.blockInfo_container}>\r\n                <div className={styles.blockInfo_wrapper}>\r\n                    <div className={styles.blockInfo_tittleWrapper}>\r\n                        <h3 className={styles.blockInfo_tittle}>{postTitle}</h3>\r\n                        <div className={styles.blockInfo_tittleChangeIcon}>\r\n                            {editPost}\r\n                            {deletePost}\r\n                        </div>\r\n                    </div>\r\n                    <p className={styles.blockInfo_info}>{postBody}</p>\r\n                </div>\r\n                <div className={styles.blockInfo_navigation}>\r\n                    <button onClick={() => onViewPost(postTitle, postBody, id, 'VIEW')}>More...</button>\r\n                    <button onClick={onSetBackgroundColor}>Colors</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlockInfo","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\Users\\UserCard\\UserCard.jsx",["262"],"import React, { useState } from 'react'\r\nimport styles from './UserCard.module.css'\r\nimport avatarNone from '../../../../img/users/userNoneAvatar.png'\r\nimport companyLogo from '../../../../img/users/logo-business.png'\r\nimport addressLogo from '../../../../img/users/addressLogo.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faUserEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport ModalWindow2 from '../../ModalWindow2/ModalWindow2'\r\n\r\n\r\nconst UserCard = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    const editInfo = <FontAwesomeIcon icon={faUserEdit} className={styles.iconEdit} />\r\n    const onEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.card}>\r\n                    <div className={styles.topInfo}>\r\n                        <div className={styles.avatar}>\r\n                            <img src={avatarNone} alt=\"\" />\r\n                        </div>\r\n                        <div className={styles.topInfo_main}>\r\n                            <h3 className={styles.userName}>{props.userName}</h3>\r\n                            <p className={styles.name}>{props.name}</p>\r\n                            <p className={styles.email}><span>Email: </span> {props.email}</p>\r\n                            <p className={styles.phone}><span>Phone: </span> {props.phone}</p>\r\n                            <p className={styles.website}> <span>Site: </span> {props.website}</p>\r\n                        </div>\r\n                        <div className={styles.editInfo}>\r\n                            <button onClick={onEditMode}> {editInfo} </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.dividingStrip}></div>\r\n                    <div className={styles.bottomInfo}>\r\n                        <div className={styles.company}>\r\n                            <div className={styles.leftLogo}>\r\n                                <img src={companyLogo} alt=\"\" />\r\n                                <div className={styles.leftLogo__dividingStrip}></div>\r\n                            </div>\r\n                            <div>\r\n                                <p className={styles.company__item}>{props.company.bs}</p>\r\n                                <p className={styles.company__item}>{props.company.catchPhrase}</p>\r\n                                <p className={styles.company__item}>{props.company.name}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.address}>\r\n                            <div className={styles.leftLogo}>\r\n                                <img src={addressLogo} alt=\"\" />\r\n                                <div className={styles.leftLogo__dividingStrip}></div>\r\n                            </div>\r\n                            <div>\r\n                                <p className={styles.address__item}>{props.address.street}</p>\r\n                                <p className={styles.address__item}>{props.address.suite}</p>\r\n                                <p className={styles.address__item}>{props.address.city}</p>\r\n                                <p className={styles.address__item}>{props.address.zipcode}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {editMode && <ModalWindow2 name={props.name} userName={props.userName} email={props.email}\r\n                                        phone={props.phone} site={props.website} editUsers={props.editUsers}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard","D:\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Request\\ModalWindow2\\ModalWindow2.jsx",[],{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","severity":1,"message":"268","line":17,"column":8,"nodeType":"269","endLine":17,"endColumn":10,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":43,"column":29,"nodeType":"273","messageId":"274","endLine":43,"endColumn":31},{"ruleId":"271","severity":1,"message":"272","line":57,"column":29,"nodeType":"273","messageId":"274","endLine":57,"endColumn":31},{"ruleId":"271","severity":1,"message":"272","line":51,"column":29,"nodeType":"273","messageId":"274","endLine":51,"endColumn":31},{"ruleId":"275","severity":1,"message":"276","line":52,"column":48,"nodeType":"277","messageId":"278","endLine":52,"endColumn":50},{"ruleId":"271","severity":1,"message":"272","line":53,"column":43,"nodeType":"273","messageId":"274","endLine":53,"endColumn":45},{"ruleId":"271","severity":1,"message":"272","line":18,"column":31,"nodeType":"273","messageId":"274","endLine":18,"endColumn":33},{"ruleId":"271","severity":1,"message":"272","line":21,"column":33,"nodeType":"273","messageId":"274","endLine":21,"endColumn":35},{"ruleId":"279","severity":1,"message":"280","line":17,"column":17,"nodeType":"281","messageId":"282","endLine":17,"endColumn":20},{"ruleId":"271","severity":1,"message":"272","line":18,"column":36,"nodeType":"273","messageId":"274","endLine":18,"endColumn":38},{"ruleId":"271","severity":1,"message":"272","line":19,"column":33,"nodeType":"273","messageId":"274","endLine":19,"endColumn":35},{"ruleId":"271","severity":1,"message":"272","line":21,"column":36,"nodeType":"273","messageId":"274","endLine":21,"endColumn":38},{"ruleId":"271","severity":1,"message":"272","line":22,"column":33,"nodeType":"273","messageId":"274","endLine":22,"endColumn":35},{"ruleId":"279","severity":1,"message":"283","line":1,"column":10,"nodeType":"281","messageId":"282","endLine":1,"endColumn":17},{"ruleId":"275","severity":1,"message":"284","line":29,"column":55,"nodeType":"277","messageId":"285","endLine":29,"endColumn":57},{"ruleId":"271","severity":1,"message":"272","line":39,"column":21,"nodeType":"273","messageId":"274","endLine":39,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":47,"column":46,"nodeType":"273","messageId":"274","endLine":47,"endColumn":48},{"ruleId":"271","severity":1,"message":"272","line":48,"column":46,"nodeType":"273","messageId":"274","endLine":48,"endColumn":48},{"ruleId":"271","severity":1,"message":"272","line":49,"column":46,"nodeType":"273","messageId":"274","endLine":49,"endColumn":48},{"ruleId":"271","severity":1,"message":"272","line":62,"column":45,"nodeType":"273","messageId":"274","endLine":62,"endColumn":47},{"ruleId":"271","severity":1,"message":"272","line":63,"column":45,"nodeType":"273","messageId":"274","endLine":63,"endColumn":47},{"ruleId":"271","severity":1,"message":"272","line":64,"column":45,"nodeType":"273","messageId":"274","endLine":64,"endColumn":47},{"ruleId":"279","severity":1,"message":"286","line":1,"column":10,"nodeType":"281","messageId":"282","endLine":1,"endColumn":23},{"ruleId":"279","severity":1,"message":"287","line":1,"column":25,"nodeType":"281","messageId":"282","endLine":1,"endColumn":36},{"ruleId":"279","severity":1,"message":"288","line":2,"column":10,"nodeType":"281","messageId":"282","endLine":2,"endColumn":25},{"ruleId":"279","severity":1,"message":"289","line":3,"column":17,"nodeType":"281","messageId":"282","endLine":3,"endColumn":25},{"ruleId":"279","severity":1,"message":"290","line":10,"column":28,"nodeType":"281","messageId":"282","endLine":10,"endColumn":45},{"ruleId":"279","severity":1,"message":"291","line":4,"column":8,"nodeType":"281","messageId":"282","endLine":4,"endColumn":14},{"ruleId":"275","severity":1,"message":"292","line":55,"column":52,"nodeType":"277","messageId":"285","endLine":55,"endColumn":54},{"ruleId":"279","severity":1,"message":"293","line":61,"column":11,"nodeType":"281","messageId":"282","endLine":61,"endColumn":18},{"ruleId":"275","severity":1,"message":"292","line":61,"column":40,"nodeType":"277","messageId":"285","endLine":61,"endColumn":42},{"ruleId":"271","severity":1,"message":"272","line":74,"column":45,"nodeType":"273","messageId":"274","endLine":74,"endColumn":47},{"ruleId":"279","severity":1,"message":"294","line":5,"column":8,"nodeType":"281","messageId":"282","endLine":5,"endColumn":20},{"ruleId":"275","severity":1,"message":"292","line":10,"column":44,"nodeType":"277","messageId":"285","endLine":10,"endColumn":46},{"ruleId":"271","severity":1,"message":"272","line":24,"column":51,"nodeType":"273","messageId":"274","endLine":24,"endColumn":53},{"ruleId":"267","severity":1,"message":"295","line":44,"column":8,"nodeType":"269","endLine":44,"endColumn":22,"suggestions":"296"},{"ruleId":"267","severity":1,"message":"295","line":48,"column":8,"nodeType":"269","endLine":48,"endColumn":22,"suggestions":"297"},{"ruleId":"298","severity":1,"message":"299","line":56,"column":27,"nodeType":"277","messageId":"300","endLine":65,"endColumn":18},{"ruleId":"275","severity":1,"message":"292","line":56,"column":32,"nodeType":"277","messageId":"285","endLine":56,"endColumn":34},{"ruleId":"271","severity":1,"message":"272","line":57,"column":34,"nodeType":"273","messageId":"274","endLine":57,"endColumn":36},{"ruleId":"271","severity":1,"message":"272","line":57,"column":59,"nodeType":"273","messageId":"274","endLine":57,"endColumn":61},{"ruleId":"271","severity":1,"message":"272","line":57,"column":83,"nodeType":"273","messageId":"274","endLine":57,"endColumn":85},{"ruleId":"275","severity":1,"message":"276","line":62,"column":25,"nodeType":"301","messageId":"302","endLine":62,"endColumn":31},{"ruleId":"271","severity":1,"message":"272","line":64,"column":67,"nodeType":"273","messageId":"274","endLine":64,"endColumn":69},{"ruleId":"271","severity":1,"message":"272","line":96,"column":25,"nodeType":"273","messageId":"274","endLine":96,"endColumn":27},{"ruleId":"271","severity":1,"message":"272","line":96,"column":41,"nodeType":"273","messageId":"274","endLine":96,"endColumn":43},{"ruleId":"271","severity":1,"message":"272","line":108,"column":57,"nodeType":"273","messageId":"274","endLine":108,"endColumn":59},{"ruleId":"271","severity":1,"message":"272","line":119,"column":29,"nodeType":"273","messageId":"274","endLine":119,"endColumn":31},{"ruleId":"271","severity":1,"message":"272","line":119,"column":54,"nodeType":"273","messageId":"274","endLine":119,"endColumn":56},{"ruleId":"271","severity":1,"message":"272","line":119,"column":78,"nodeType":"273","messageId":"274","endLine":119,"endColumn":80},{"ruleId":"271","severity":1,"message":"272","line":139,"column":33,"nodeType":"273","messageId":"274","endLine":139,"endColumn":35},{"ruleId":"271","severity":1,"message":"272","line":139,"column":58,"nodeType":"273","messageId":"274","endLine":139,"endColumn":60},{"ruleId":"271","severity":1,"message":"272","line":139,"column":82,"nodeType":"273","messageId":"274","endLine":139,"endColumn":84},{"ruleId":"271","severity":1,"message":"272","line":150,"column":46,"nodeType":"273","messageId":"274","endLine":150,"endColumn":48},{"ruleId":"271","severity":1,"message":"272","line":189,"column":101,"nodeType":"273","messageId":"274","endLine":189,"endColumn":103},{"ruleId":"271","severity":1,"message":"272","line":190,"column":101,"nodeType":"273","messageId":"274","endLine":190,"endColumn":103},{"ruleId":"271","severity":1,"message":"272","line":191,"column":101,"nodeType":"273","messageId":"274","endLine":191,"endColumn":103},{"ruleId":"271","severity":1,"message":"272","line":194,"column":99,"nodeType":"273","messageId":"274","endLine":194,"endColumn":101},{"ruleId":"271","severity":1,"message":"272","line":195,"column":99,"nodeType":"273","messageId":"274","endLine":195,"endColumn":101},{"ruleId":"271","severity":1,"message":"272","line":196,"column":99,"nodeType":"273","messageId":"274","endLine":196,"endColumn":101},{"ruleId":"271","severity":1,"message":"272","line":199,"column":104,"nodeType":"273","messageId":"274","endLine":199,"endColumn":106},{"ruleId":"271","severity":1,"message":"272","line":200,"column":105,"nodeType":"273","messageId":"274","endLine":200,"endColumn":107},{"ruleId":"271","severity":1,"message":"272","line":207,"column":94,"nodeType":"273","messageId":"274","endLine":207,"endColumn":96},{"ruleId":"271","severity":1,"message":"272","line":207,"column":130,"nodeType":"273","messageId":"274","endLine":207,"endColumn":132},{"ruleId":"271","severity":1,"message":"272","line":208,"column":71,"nodeType":"273","messageId":"274","endLine":208,"endColumn":73},{"ruleId":"271","severity":1,"message":"272","line":208,"column":125,"nodeType":"273","messageId":"274","endLine":208,"endColumn":127},{"ruleId":"279","severity":1,"message":"303","line":1,"column":8,"nodeType":"281","messageId":"282","endLine":1,"endColumn":13},{"ruleId":"279","severity":1,"message":"304","line":2,"column":10,"nodeType":"281","messageId":"282","endLine":2,"endColumn":15},{"ruleId":"279","severity":1,"message":"305","line":2,"column":17,"nodeType":"281","messageId":"282","endLine":2,"endColumn":26},{"ruleId":"279","severity":1,"message":"306","line":9,"column":7,"nodeType":"281","messageId":"282","endLine":9,"endColumn":18},{"ruleId":"271","severity":1,"message":"272","line":18,"column":20,"nodeType":"273","messageId":"274","endLine":18,"endColumn":22},{"ruleId":"271","severity":1,"message":"272","line":18,"column":41,"nodeType":"273","messageId":"274","endLine":18,"endColumn":43},{"ruleId":"271","severity":1,"message":"272","line":21,"column":20,"nodeType":"273","messageId":"274","endLine":21,"endColumn":22},{"ruleId":"271","severity":1,"message":"272","line":21,"column":41,"nodeType":"273","messageId":"274","endLine":21,"endColumn":43},{"ruleId":"271","severity":1,"message":"272","line":25,"column":26,"nodeType":"273","messageId":"274","endLine":25,"endColumn":28},{"ruleId":"271","severity":1,"message":"272","line":25,"column":43,"nodeType":"273","messageId":"274","endLine":25,"endColumn":45},{"ruleId":"271","severity":1,"message":"272","line":26,"column":19,"nodeType":"273","messageId":"274","endLine":26,"endColumn":21},{"ruleId":"271","severity":1,"message":"272","line":27,"column":21,"nodeType":"273","messageId":"274","endLine":27,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":28,"column":21,"nodeType":"273","messageId":"274","endLine":28,"endColumn":23},{"ruleId":"279","severity":1,"message":"289","line":1,"column":17,"nodeType":"281","messageId":"282","endLine":1,"endColumn":25},{"ruleId":"271","severity":1,"message":"272","line":20,"column":94,"nodeType":"273","messageId":"274","endLine":20,"endColumn":96},{"ruleId":"271","severity":1,"message":"272","line":23,"column":51,"nodeType":"273","messageId":"274","endLine":23,"endColumn":53},{"ruleId":"271","severity":1,"message":"272","line":26,"column":48,"nodeType":"273","messageId":"274","endLine":26,"endColumn":50},{"ruleId":"271","severity":1,"message":"272","line":26,"column":125,"nodeType":"273","messageId":"274","endLine":26,"endColumn":127},{"ruleId":"271","severity":1,"message":"272","line":30,"column":45,"nodeType":"273","messageId":"274","endLine":30,"endColumn":47},{"ruleId":"271","severity":1,"message":"272","line":10,"column":60,"nodeType":"273","messageId":"274","endLine":10,"endColumn":62},{"ruleId":"271","severity":1,"message":"272","line":19,"column":54,"nodeType":"273","messageId":"274","endLine":19,"endColumn":56},{"ruleId":"271","severity":1,"message":"272","line":36,"column":36,"nodeType":"273","messageId":"274","endLine":36,"endColumn":38},{"ruleId":"271","severity":1,"message":"272","line":41,"column":125,"nodeType":"273","messageId":"274","endLine":41,"endColumn":127},{"ruleId":"271","severity":1,"message":"272","line":43,"column":37,"nodeType":"273","messageId":"274","endLine":43,"endColumn":39},{"ruleId":"279","severity":1,"message":"307","line":4,"column":10,"nodeType":"281","messageId":"282","endLine":4,"endColumn":19},{"ruleId":"271","severity":1,"message":"272","line":37,"column":35,"nodeType":"273","messageId":"274","endLine":37,"endColumn":37},{"ruleId":"271","severity":1,"message":"272","line":42,"column":35,"nodeType":"273","messageId":"274","endLine":42,"endColumn":37},{"ruleId":"271","severity":1,"message":"272","line":54,"column":35,"nodeType":"273","messageId":"274","endLine":54,"endColumn":37},{"ruleId":"271","severity":1,"message":"272","line":11,"column":29,"nodeType":"273","messageId":"274","endLine":11,"endColumn":31},{"ruleId":"271","severity":1,"message":"272","line":21,"column":38,"nodeType":"273","messageId":"274","endLine":21,"endColumn":40},{"ruleId":"271","severity":1,"message":"272","line":22,"column":38,"nodeType":"273","messageId":"274","endLine":22,"endColumn":40},{"ruleId":"271","severity":1,"message":"272","line":23,"column":38,"nodeType":"273","messageId":"274","endLine":23,"endColumn":40},{"ruleId":"279","severity":1,"message":"308","line":7,"column":10,"nodeType":"281","messageId":"282","endLine":7,"endColumn":16},"no-native-reassign",["309"],"no-negated-in-lhs",["310"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["311"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'arr' is assigned a value but never used.","Identifier","unusedVar","'compose' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'faCheckCircle' is defined but never used.","'faPencilAlt' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'useState' is defined but never used.","'setSliderSettings' is assigned a value but never used.","'Loader' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","'onePost' is assigned a value but never used.","'ModalWindow2' is defined but never used.","React Hook useEffect has a missing dependency: 'victoryCheck'. Either include it or remove the dependency array.",["312"],["313"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'whileValue', 'whileValue'.","unsafeRefs","ReturnStatement","expectedReturnValue","'React' is defined but never used.","'Field' is defined but never used.","'reduxForm' is defined but never used.","'maxLength15' is assigned a value but never used.","'useEffect' is defined but never used.","'faEdit' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},"Update the dependencies array to be: [props]",{"range":"320","text":"321"},"Update the dependencies array to be: [combinationX, victoryCheck]",{"range":"322","text":"323"},"Update the dependencies array to be: [combinationO, victoryCheck]",{"range":"324","text":"325"},[635,637],"[props]",[2161,2175],"[combinationX, victoryCheck]",[2264,2278],"[combinationO, victoryCheck]"]
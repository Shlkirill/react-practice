[{"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\index.js":"1","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\App.js":"2","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\reportWebVitals.js":"3","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Header\\Header.jsx":"4","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDoList.jsx":"5","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\task\\Task.jsx":"6","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redax\\store.js":"7","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDiListContainer.jsx":"8"},{"size":656,"mtime":1607501714955,"results":"9","hashOfConfig":"10"},{"size":357,"mtime":1608026958672,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1607330653219,"results":"12","hashOfConfig":"10"},{"size":234,"mtime":1607350094799,"results":"13","hashOfConfig":"10"},{"size":1007,"mtime":1608026958683,"results":"14","hashOfConfig":"10"},{"size":1032,"mtime":1608026958688,"results":"15","hashOfConfig":"10"},{"size":2026,"mtime":1608026958680,"results":"16","hashOfConfig":"10"},{"size":832,"mtime":1607684807214,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1y3b5hp",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\index.js",[],["36","37"],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\App.js",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\reportWebVitals.js",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDoList.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\task\\Task.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redax\\store.js",["38","39"],"import { combineReducers, createStore } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nconst ADD_NEW_TASK = 'ADD_NEW_TASK';\r\nconst STAGE_OF_DONE = 'STAGE_OF_DONE';\r\nconst DELETE_TASK = 'DELETE_TASK';\r\n\r\nexport const addTaskAC = (task) => ({ type: ADD_NEW_TASK, task });\r\nexport const stageOfDoneAC = (idTask) => ({ type: STAGE_OF_DONE, idTask });\r\nexport const deleteTaskAC = (idTask) => ({ type: DELETE_TASK, idTask });\r\n\r\nlet initialState = {\r\n    taskList: [\r\n        { id: 1, text: 'Купить хлеба', done: false },\r\n        { id: 2, text: 'Сделать бутерброт', done: true }\r\n    ]\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_TASK:\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...state.taskList]\r\n            }\r\n            let idTask = stateCopy.taskList.length + 1;\r\n            stateCopy.taskList.push({ id: idTask, text: action.task, done: false });\r\n            console.log(stateCopy.taskList)\r\n            return stateCopy;\r\n        case STAGE_OF_DONE:\r\n            let arr = state.taskList.map((item) => {\r\n                if (item.id == action.idTask) {\r\n                    item.done = !item.done\r\n                }\r\n                return item\r\n            })\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arr]\r\n            }\r\n            return stateCopy;\r\n        case DELETE_TASK:\r\n            let arrfilter = state.taskList.filter((item) => {\r\n                return (item.id !== action.idTask) ? true : false\r\n            });\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arrfilter]\r\n            }\r\n            return stateCopy;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer);\r\n\r\n\r\nexport default appReducer","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDiListContainer.jsx",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":39,"column":17,"nodeType":"46","messageId":"47","endLine":39,"endColumn":20},{"ruleId":"48","severity":1,"message":"49","line":40,"column":29,"nodeType":"50","messageId":"51","endLine":40,"endColumn":31},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'arr' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]
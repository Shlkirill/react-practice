[{"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\index.js":"1","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\reportWebVitals.js":"2","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\App.js":"3","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\store.js":"4","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\staffReducer.js":"5","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\toDoListReducer.js":"6","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Header\\Header.jsx":"7","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDiListContainer.jsx":"8","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\PracticeContainer.jsx":"9","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDoList.jsx":"10","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Staff\\Staff.jsx":"11","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\fieldLevelValidation\\validation.js":"12","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\task\\Task.jsx":"13","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Staff\\Collaborator\\Collaborator.jsx":"14","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Test\\Test.jsx":"15","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\testReducer.js":"16","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Test\\Question\\Question.jsx":"17","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\TestTwo\\TestTwo.jsx":"18","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\TestTwo\\QuestionTwo\\QuestionTwo.jsx":"19","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\testTwoReducer.js":"20"},{"size":792,"mtime":1610347274195,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1607330653219,"results":"23","hashOfConfig":"22"},{"size":696,"mtime":1610347274135,"results":"24","hashOfConfig":"22"},{"size":541,"mtime":1610528504703,"results":"25","hashOfConfig":"22"},{"size":1095,"mtime":1610434624632,"results":"26","hashOfConfig":"22"},{"size":3262,"mtime":1610347274155,"results":"27","hashOfConfig":"22"},{"size":632,"mtime":1610347274135,"results":"28","hashOfConfig":"22"},{"size":894,"mtime":1610347274165,"results":"29","hashOfConfig":"22"},{"size":1260,"mtime":1610529993475,"results":"30","hashOfConfig":"22"},{"size":4334,"mtime":1610347274175,"results":"31","hashOfConfig":"22"},{"size":1506,"mtime":1610374532585,"results":"32","hashOfConfig":"22"},{"size":532,"mtime":1610347274165,"results":"33","hashOfConfig":"22"},{"size":3331,"mtime":1610347274175,"results":"34","hashOfConfig":"22"},{"size":2199,"mtime":1610435923182,"results":"35","hashOfConfig":"22"},{"size":1089,"mtime":1610460736142,"results":"36","hashOfConfig":"22"},{"size":1491,"mtime":1610530104868,"results":"37","hashOfConfig":"22"},{"size":2251,"mtime":1610533060249,"results":"38","hashOfConfig":"22"},{"size":2507,"mtime":1610631360655,"results":"39","hashOfConfig":"22"},{"size":1272,"mtime":1610612783495,"results":"40","hashOfConfig":"22"},{"size":2539,"mtime":1610546299151,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1y3b5hp",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\index.js",[],["93","94"],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\reportWebVitals.js",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\App.js",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\store.js",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\staffReducer.js",["95","96","97","98"],"const EDIT_VALUE = 'EDIT_VALUE';\r\n\r\n\r\nexport const editValueAC = (id, value, trigger) => ({ type: EDIT_VALUE, id, value, trigger });\r\n\r\n\r\nlet initialState = {\r\n    staffList: [{ id: '1', name: 'Андрей', daysWorked: 2, rate: 1000 },\r\n    { id: '2', name: 'Кирилл', daysWorked: 3, rate: 1100 }]\r\n}\r\n\r\nconst staffReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case EDIT_VALUE:\r\n            let arr = state.staffList.map(item => {\r\n                if (action.trigger == 'DAYS') {\r\n                    if (item.id == action.id) item.daysWorked = action.value\r\n                }\r\n                if (action.trigger == 'RATE') {\r\n                    if (item.id == action.id) item.rate = action.value\r\n                }\r\n                return item\r\n            })\r\n            console.log(arr)\r\n            stateCopy = {\r\n                ...state,\r\n                staffList: [...state.staffList],\r\n            }\r\n            return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default staffReducer","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\toDoListReducer.js",["99","100"],"const ADD_NEW_TASK = 'ADD_NEW_TASK';\r\nconst STAGE_OF_DONE = 'STAGE_OF_DONE';\r\nconst EDIT_TEXT_TASK = 'EDIT_TEXT_TASK';\r\nconst DELETE_TASK = 'DELETE_TASK';\r\n\r\nexport const addTaskAC = (task) => ({ type: ADD_NEW_TASK, task });\r\nexport const stageOfDoneAC = (idTask) => ({ type: STAGE_OF_DONE, idTask });\r\nexport const editTextTaskAC = (idTask, textTask) => ({ type: EDIT_TEXT_TASK, idTask, textTask })\r\nexport const deleteTaskAC = (idTask) => ({ type: DELETE_TASK, idTask });\r\n\r\nlet localBaseTask = JSON.parse(localStorage.getItem('taskList')) || []\r\n\r\nlet initialState = {\r\n    taskList: [...localBaseTask]\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    let date = new Date();\r\n\r\n    let getDate = (date.getDate() < 10) ? '0' + date.getDate(): date.getDate();\r\n    let getMonth = (date.getMonth() < 10) ? '0' + (date.getMonth() + 1): date.getMonth() + 1;\r\n    let createDate = `${getDate}.${getMonth}.${date.getFullYear()}`\r\n\r\n    let getHours = (date.getHours() < 10) ? '0' + date.getHours(): date.getHours();\r\n    let getMinutes = (date.getMinutes() < 10) ? '0' + date.getMinutes(): date.getMinutes();\r\n    let createTime = `${getHours}:${getMinutes}`;\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_TASK:\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...state.taskList]\r\n            }\r\n            const idTask = `f${(~~(Math.random() * 1e8)).toString(16)}`;\r\n            stateCopy.taskList.unshift({ id: idTask, text: action.task, done: false, createDateTask: {date: createDate, time: createTime}});\r\n\r\n            localStorage.setItem('taskList', JSON.stringify(stateCopy.taskList))\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n        case STAGE_OF_DONE:\r\n            let arr = state.taskList.map((item) => {\r\n                if (item.id == action.idTask) {\r\n                    item.done = !item.done\r\n                }\r\n                return item\r\n            })\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arr]\r\n            }\r\n            localStorage.setItem('taskList', JSON.stringify(arr))\r\n            return stateCopy;\r\n        case EDIT_TEXT_TASK:\r\n\r\n            let arrEditText = state.taskList.map((item) => {\r\n                if (item.id == action.idTask) {\r\n                    item.text = action.textTask;\r\n                    item.createDateTask.time = `ред. ${createTime}`;\r\n                    item.createDateTask.date = createDate;\r\n                }\r\n                return item\r\n            })\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arrEditText]\r\n            }\r\n            localStorage.setItem('taskList', JSON.stringify(arrEditText))\r\n            return stateCopy;\r\n        case DELETE_TASK:\r\n            let arrfilter = state.taskList.filter((item) => {\r\n                return (item.id !== action.idTask) ? true : false\r\n            });\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arrfilter]\r\n            }\r\n\r\n            localStorage.setItem('taskList', JSON.stringify(arrfilter))\r\n\r\n            return stateCopy;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDiListContainer.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\PracticeContainer.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDoList.jsx",["101","102","103","104","105","106"],"import React, { useState } from 'react'\r\nimport styles from './ToDoList.module.css'\r\nimport Task from './task/Task'\r\nimport { Field } from 'redux-form'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { required } from '../fieldLevelValidation/validation';\r\n\r\nexport const renderField = ({ input, type, meta: { submitFailed, error, warning },} ) => {\r\n    return (\r\n        <div className={styles.inputForm_container}>\r\n            <div>\r\n                <textarea {...input} type={type} className={styles.inputForm} placeholder='Напишите новую задачу' />\r\n            </div>\r\n            <div className={styles.inputForm_error}>\r\n                {submitFailed && ((error && <span >{error}</span>) ||\r\n                    (warning && <span className={styles.inputForm_error}>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ToDoList = (props) => {\r\n    const [filterMode, setFilterMode] = useState(1);\r\n    const [inProp, setInProp] = useState(true);\r\n\r\n    let changeFilter = (filterNumber) => {\r\n        setFilterMode(filterNumber);\r\n        setInProp(!inProp);\r\n    }\r\n\r\n    let undoneTask = props.taskList.filter(item => !item.done)\r\n    let doneTask = props.taskList.filter(item => item.done)\r\n    let allTask = undoneTask.concat(doneTask)\r\n    let resultAllTask = allTask.map((item) => {\r\n        return <Task key={item.id} text={item.text} done={item.done} edit={item.edit}\r\n            stageOfDone={props.stageOfDone} id={item.id}\r\n            deleteTask={props.deleteTask} editTextTask={props.editTextTask} \r\n            date={item.createDateTask.date} time={item.createDateTask.time} />\r\n    })\r\n\r\n    let resultDoneTask = resultAllTask.filter((item) => item.props.done);\r\n    let resultUnDoneTask = resultAllTask.filter((item) => !item.props.done);\r\n    console.log(props)\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.wrapper}>\r\n                <h3 className={styles.tittle}>Лист задач:</h3>\r\n                <div className={styles.filter}>\r\n                    <p className={filterMode == 1 ? styles.filter_active : ''} onClick={() => { changeFilter(1) }}>Все задачи</p>\r\n                    <p className={filterMode == 2 ? styles.filter_active : ''} onClick={() => { changeFilter(2) }} >Активные задачи</p>\r\n                    <p className={filterMode == 3 ? styles.filter_active : ''} onClick={() => { changeFilter(3) }}>Выполненные задачи</p>\r\n                </div>\r\n                <div className={styles.todolist}>\r\n                    <div className={styles.info}>\r\n                        <p className={styles.info_undone}>Активные задачи: <span>{undoneTask.length}</span> </p>\r\n                        <p className={styles.info_done}>Выполненные задачи: <span>{doneTask.length}</span> </p>\r\n                    </div>\r\n                    <form onSubmit={props.handleSubmit} className={styles.formControl}>\r\n                        <Field className={styles.input} name='newTask'\r\n                            component={renderField} validate={[required]} />\r\n                        <button className={styles.addTask}>Добавить</button>\r\n                    </form>\r\n                    <TransitionGroup in={inProp} timeout={500} classNames={{\r\n                        appearActive: styles.myAppearActive,\r\n                        appearDone: styles.myAppearDone,\r\n                        enterActive: styles.myEnterActive,\r\n                        enterDone: styles.myEnterDone,\r\n                        exit: styles.myExit,\r\n                        exitActive: styles.myExitActive,\r\n                        exitDone: styles.myExitDone\r\n                    }} >\r\n                        <CSSTransition>\r\n                            <div className={styles.hhh}>\r\n                                {filterMode == 1 ? resultAllTask : ''}\r\n                                {filterMode == 2 ? resultUnDoneTask : ''}\r\n                                {filterMode == 3 ? resultDoneTask : ''}\r\n                            </div>\r\n                        </CSSTransition>\r\n                    </TransitionGroup >\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ToDoList","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Staff\\Staff.jsx",["107","108","109","110"],"import { faCheckCircle, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react'\r\nimport Collaborator from './Collaborator/Collaborator';\r\nimport styles from './Staff.module.css'\r\n\r\n\r\nconst Staff = ({staffList, ...props}) => {\r\n    let allSalary = 0;\r\n    let staffListArr = staffList.map((item) => {\r\n        allSalary += item.daysWorked * item.rate\r\n        return <Collaborator key={item.id} id={item.id} name={item.name} daysWorked={item.daysWorked} rate={item.rate} editValue={props.editValue}/>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h3>Задание № 1 (Посчет ЗП работников)</h3>\r\n            <div className={styles.contaiter}>\r\n                <table >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Имя</th>\r\n                            <th>Кол-во Дней</th>\r\n                            <th>Ставка</th>\r\n                            <th>Зарплата</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {staffListArr}\r\n                        <tr>\r\n                            <th>Общая зп</th>\r\n                            <td colSpan='3'>{allSalary}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Staff","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\fieldLevelValidation\\validation.js",["111","112","113","114"],"import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nexport const required = value => (value || typeof value === 'number' ? undefined : 'Поле не может быть пустым')\r\n\r\nconst maxLength = max => value =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n  \r\nconst maxLength15 = maxLength(15)\r\n\r\nexport const minLength = min => value =>\r\n  value && value.length < min ? `Must be ${min} characters or more` : undefined\r\n\r\nexport const minLength2 = minLength(2)","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\task\\Task.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Staff\\Collaborator\\Collaborator.jsx",["115","116","117","118"],"import { faCheckCircle, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react'\r\nimport styles from './Collaborator.module.css'\r\n\r\n\r\nconst Collaborator = (props) => {\r\n    let [editModeDays, setEditModeDays] = useState(false);\r\n    let [editModeRate, setEditModeRate] = useState(false);\r\n\r\n    const onEditDays = () => {\r\n        setEditModeDays(!editModeDays)\r\n    }\r\n    const onEditRate = () => {\r\n        setEditModeRate(!editModeRate)\r\n    }\r\n    const onEditDaysKeyDown = (e) => {\r\n        if (e.code == 'Enter' || e.code == 'NumpadEnter') setEditModeDays(!editModeDays)\r\n    }\r\n    const onEditRateKeyDown = (e) => {\r\n        if (e.code == 'Enter' || e.code == 'NumpadEnter') setEditModeRate(!editModeRate)\r\n    }\r\n    const onChangeRate = (e) => {\r\n        props.editValue(props.id, +e.target.value || '', 'RATE')\r\n    }\r\n    const onChangeDays = (e) => {\r\n        props.editValue(props.id, +e.target.value || '', 'DAYS')\r\n    }\r\n    return (\r\n        <tr key={props.id}>\r\n            <td>{props.name}</td>\r\n            <td className={styles.days}>{!editModeDays ?\r\n                <div>{props.daysWorked} <FontAwesomeIcon icon={faPencilAlt} className={styles.edit} onClick={onEditDays} /></div> :\r\n                <div><input type='number' min='0' value={props.daysWorked} className={styles.days_input} autoFocus={true} onChange={onChangeDays} onKeyDown={onEditDaysKeyDown} />\r\n                    <FontAwesomeIcon icon={faCheckCircle} className={styles.edit} onClick={onEditDays} /></div>}</td>\r\n            <td className={styles.rate}>{!editModeRate ?\r\n                <div>{props.rate}<FontAwesomeIcon icon={faPencilAlt} className={styles.edit} onClick={onEditRate} /></div> :\r\n                <div><input type='number' min='0' value={props.rate} autoFocus={true} className={styles.rate_input} onChange={onChangeRate} onKeyDown={onEditRateKeyDown} />\r\n                    <FontAwesomeIcon icon={faCheckCircle} className={styles.edit} onClick={onEditRate} /></div>}</td>\r\n            <td>{props.daysWorked * props.rate}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Collaborator","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Test\\Test.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\testReducer.js",["119","120"],"const CHECKING_ANSWER = 'CHECKING_ANSWER'\r\n\r\nexport const ChekingAnswerAC = (id, answer) => ({ type: CHECKING_ANSWER, id, answer })\r\n\r\nlet initialState = {\r\n    questions: [{ id: 1, question: 'Чем меньше воды, тем больше глубина. Что это?', answer: 'литература', answerUser: '' },\r\n    { id: 2, question: 'Накормишь – живет, напоишь – умрет. О чем речь?', answer: 'огонь', answerUser: '' },\r\n    { id: 3, question: 'Вам дали, вам принадлежит. Вы не продавали, а пользуются все знакомые.', answer: 'имя', answerUser: '' }],\r\n    answersGiven: false\r\n}\r\n\r\nconst testReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type) {\r\n        case CHECKING_ANSWER:\r\n            let testAnswersGiven;\r\n            let arr = state.questions.map(item => {\r\n                if (action.id == item.id) {\r\n                    item.answerUser = action.answer\r\n                }\r\n                item.answerUser == '' ? testAnswersGiven = false : testAnswersGiven = true;\r\n                return item\r\n            })\r\n            console.log(arr)\r\n            stateCopy = {\r\n                ...state,\r\n                questions: [...state.questions],\r\n                answersGiven: testAnswersGiven\r\n            }\r\n            return stateCopy\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default testReducer","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Test\\Question\\Question.jsx",["121","122","123","124","125"],"import React, { useState } from 'react'\r\nimport styles from './Question.module.css'\r\n\r\nconst Question = ({ id, question, answer, answerUser, chekingAnswer, testDone }) => {\r\n\r\n    const [answerValue, setAnswerValue] = useState('');\r\n    const [error, setError] = useState(false)\r\n\r\n    const onAnswer = (e) => {\r\n        if (/^\\s+$/.test(e.target.value) || e.target.value == '') {\r\n            setError(true)\r\n        } else {\r\n            setAnswerValue(e.target.value.toLowerCase().trim())\r\n            setError(false)\r\n        }\r\n    }\r\n\r\n    const onChekingAnswer = () => {\r\n        if (/^\\s+$/.test(answerValue) || answerValue == '') {\r\n            setError(true)\r\n        } else {\r\n            chekingAnswer(id, answerValue)\r\n            setError(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.question}>\r\n                {question}\r\n            </div>\r\n\r\n            <div className={styles.navigation}>\r\n                {testDone ?\r\n                    <div>\r\n                        <p>{answer == answerUser ?\r\n                            <p className={styles.correctAnswer}>Ваш ответ: <span>{answerUser}</span> - правильно! </p> :\r\n                            <p className={styles.unCorrectAnswer}>Ваш ответ: <span>{answerUser}</span> - не верно! Верный ответ: <span>{answer}</span> </p>}</p>\r\n                    </div> :\r\n                    <div className={styles.dataInput}>\r\n                        <input type=\"text\" name=\"\" id=\"\" className={styles.answer} onChange={onAnswer} disabled={answerUser == '' ? false : true} />\r\n                        <div className={`${styles.error} ${error ? styles.showError : ''}`}> Это поле не может быть пустым </div>\r\n                        {answerUser == '' ?\r\n                            <button onClick={onChekingAnswer} className={styles.button} disabled={error ? true : false}>Ответить</button> :\r\n                            <span className={styles.recd}>Ответ принят</span>}\r\n                    </div>}\r\n                <div className={styles.border}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\TestTwo\\TestTwo.jsx",["126"],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\TestTwo\\QuestionTwo\\QuestionTwo.jsx",["127","128","129"],"import React, { useState } from 'react'\r\nimport styles from './QuestionTwo.module.css'\r\n\r\nconst QuestionTwo = ({ id, question, answer, answerUser, testDone }, ...props) => {\r\n    console.log(answer)\r\n\r\n    const [answerValue, setAnswerValue] = useState('');\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.question}>\r\n                {question}\r\n            </div>\r\n\r\n            <div className={styles.navigation}>\r\n                {testDone ?\r\n                    <div>\r\n                        <p>{answer == answerUser ?\r\n                            <p className={styles.correctAnswer}>Ваш ответ: <span>{answerUser}</span> - правильно! </p> :\r\n                            <p className={styles.unCorrectAnswer}>Ваш ответ: <span>{answerUser}</span> - не верно! Верный ответ: <span>{answer}</span> </p>}</p>\r\n                    </div> :\r\n                    <div className={styles.answerOptions}>\r\n                        {answer.map(item => {\r\n                            return <button className={styles.possibleAnswer}>{item.possible}</button>\r\n                        })}\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionTwo","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\testTwoReducer.js",["130","131"],"const CHECKING_ANSWER = 'CHECKING_ANSWER'\r\n\r\nexport const ChekingAnswerACTWO = (id, answer) => ({ type: CHECKING_ANSWER, id, answer })\r\n\r\nlet initialState = {\r\n    questions: \r\n    [{id: 124, question: 'Чем меньше воды, тем больше глубина. Что это?',\r\n        answer: [{ id: 1, possible: 'Литература', сorrect: true },\r\n        { id: 2, possible: 'Впадина', сorrect: false },\r\n        { id: 3, possible: 'Вулкан', сorrect: false },\r\n        { id: 4, possible: 'Знания', сorrect: false }]},\r\n    { id: 345, question: 'Накормишь – живет, напоишь – умрет. О чем речь?', \r\n        answer: [{ id: 1, possible: 'Память', сorrect: false },\r\n        { id: 2, possible: 'Жажда', сorrect: false },\r\n        { id: 3, possible: 'Огонь', сorrect: true },\r\n        { id: 4, possible: 'Муж', сorrect: false }]},\r\n    { id: 7, question: 'Вам дали, вам принадлежит. Вы не продавали, а пользуются все знакомые.', \r\n        answer: [{ id: 1, possible: 'Умения', сorrect: false },\r\n        { id: 2, possible: 'Машина', сorrect: false },\r\n        { id: 3, possible: 'Щедрость', сorrect: false },\r\n        { id: 4, possible: 'Имя', сorrect: true }]},\r\n    { id: 8, question: 'Чего боятся люди, которые страдают алекторофобией?', \r\n        answer: [{ id: 1, possible: 'собак', сorrect: false },\r\n        { id: 2, possible: 'Кур', сorrect: true },\r\n        { id: 3, possible: 'Бороды', сorrect: false },\r\n        { id: 4, possible: 'Чеснок', сorrect: false }]}],\r\n    answersGiven: false\r\n}\r\n\r\nconst testReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type) {\r\n        case CHECKING_ANSWER:\r\n            let testAnswersGiven;\r\n            let arr = state.questions.map(item => {\r\n                if (action.id == item.id) {\r\n                    item.answerUser = action.answer\r\n                }\r\n                item.answerUser == '' ? testAnswersGiven = false : testAnswersGiven = true;\r\n                return item\r\n            })\r\n            console.log(arr)\r\n            stateCopy = {\r\n                ...state,\r\n                questions: [...state.questions],\r\n                answersGiven: testAnswersGiven\r\n            }\r\n            return stateCopy\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default testReducer",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":18,"column":36,"nodeType":"138","messageId":"139","endLine":18,"endColumn":38},{"ruleId":"136","severity":1,"message":"137","line":19,"column":33,"nodeType":"138","messageId":"139","endLine":19,"endColumn":35},{"ruleId":"136","severity":1,"message":"137","line":21,"column":36,"nodeType":"138","messageId":"139","endLine":21,"endColumn":38},{"ruleId":"136","severity":1,"message":"137","line":22,"column":33,"nodeType":"138","messageId":"139","endLine":22,"endColumn":35},{"ruleId":"136","severity":1,"message":"137","line":43,"column":29,"nodeType":"138","messageId":"139","endLine":43,"endColumn":31},{"ruleId":"136","severity":1,"message":"137","line":57,"column":29,"nodeType":"138","messageId":"139","endLine":57,"endColumn":31},{"ruleId":"136","severity":1,"message":"137","line":49,"column":46,"nodeType":"138","messageId":"139","endLine":49,"endColumn":48},{"ruleId":"136","severity":1,"message":"137","line":50,"column":46,"nodeType":"138","messageId":"139","endLine":50,"endColumn":48},{"ruleId":"136","severity":1,"message":"137","line":51,"column":46,"nodeType":"138","messageId":"139","endLine":51,"endColumn":48},{"ruleId":"136","severity":1,"message":"137","line":74,"column":45,"nodeType":"138","messageId":"139","endLine":74,"endColumn":47},{"ruleId":"136","severity":1,"message":"137","line":75,"column":45,"nodeType":"138","messageId":"139","endLine":75,"endColumn":47},{"ruleId":"136","severity":1,"message":"137","line":76,"column":45,"nodeType":"138","messageId":"139","endLine":76,"endColumn":47},{"ruleId":"140","severity":1,"message":"141","line":1,"column":10,"nodeType":"142","messageId":"143","endLine":1,"endColumn":23},{"ruleId":"140","severity":1,"message":"144","line":1,"column":25,"nodeType":"142","messageId":"143","endLine":1,"endColumn":36},{"ruleId":"140","severity":1,"message":"145","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":25},{"ruleId":"140","severity":1,"message":"146","line":3,"column":17,"nodeType":"142","messageId":"143","endLine":3,"endColumn":25},{"ruleId":"140","severity":1,"message":"147","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":13},{"ruleId":"140","severity":1,"message":"148","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":15},{"ruleId":"140","severity":1,"message":"149","line":2,"column":17,"nodeType":"142","messageId":"143","endLine":2,"endColumn":26},{"ruleId":"140","severity":1,"message":"150","line":9,"column":7,"nodeType":"142","messageId":"143","endLine":9,"endColumn":18},{"ruleId":"136","severity":1,"message":"137","line":18,"column":20,"nodeType":"138","messageId":"139","endLine":18,"endColumn":22},{"ruleId":"136","severity":1,"message":"137","line":18,"column":41,"nodeType":"138","messageId":"139","endLine":18,"endColumn":43},{"ruleId":"136","severity":1,"message":"137","line":21,"column":20,"nodeType":"138","messageId":"139","endLine":21,"endColumn":22},{"ruleId":"136","severity":1,"message":"137","line":21,"column":41,"nodeType":"138","messageId":"139","endLine":21,"endColumn":43},{"ruleId":"136","severity":1,"message":"137","line":18,"column":31,"nodeType":"138","messageId":"139","endLine":18,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":21,"column":33,"nodeType":"138","messageId":"139","endLine":21,"endColumn":35},{"ruleId":"136","severity":1,"message":"137","line":10,"column":60,"nodeType":"138","messageId":"139","endLine":10,"endColumn":62},{"ruleId":"136","severity":1,"message":"137","line":19,"column":54,"nodeType":"138","messageId":"139","endLine":19,"endColumn":56},{"ruleId":"136","severity":1,"message":"137","line":36,"column":36,"nodeType":"138","messageId":"139","endLine":36,"endColumn":38},{"ruleId":"136","severity":1,"message":"137","line":41,"column":125,"nodeType":"138","messageId":"139","endLine":41,"endColumn":127},{"ruleId":"136","severity":1,"message":"137","line":43,"column":37,"nodeType":"138","messageId":"139","endLine":43,"endColumn":39},{"ruleId":"140","severity":1,"message":"151","line":43,"column":26,"nodeType":"142","messageId":"143","endLine":43,"endColumn":43},{"ruleId":"140","severity":1,"message":"152","line":7,"column":12,"nodeType":"142","messageId":"143","endLine":7,"endColumn":23},{"ruleId":"140","severity":1,"message":"153","line":7,"column":25,"nodeType":"142","messageId":"143","endLine":7,"endColumn":39},{"ruleId":"136","severity":1,"message":"137","line":18,"column":36,"nodeType":"138","messageId":"139","endLine":18,"endColumn":38},{"ruleId":"136","severity":1,"message":"137","line":36,"column":31,"nodeType":"138","messageId":"139","endLine":36,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":39,"column":33,"nodeType":"138","messageId":"139","endLine":39,"endColumn":35},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'faCheckCircle' is defined but never used.","Identifier","unusedVar","'faPencilAlt' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'useState' is defined but never used.","'React' is defined but never used.","'Field' is defined but never used.","'reduxForm' is defined but never used.","'maxLength15' is assigned a value but never used.","'setSliderSettings' is assigned a value but never used.","'answerValue' is assigned a value but never used.","'setAnswerValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
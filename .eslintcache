[{"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\index.js":"1","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\reportWebVitals.js":"2","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\App.js":"3","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\store.js":"4","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\staffReducer.js":"5","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\testReducer.js":"6","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\photosReducer.js":"7","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\toDoListReducer.js":"8","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\testTwoReducer.js":"9","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Practice\\PracticeContainer.jsx":"10","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\TicTacToe\\TikTakToeContainer.jsx":"11","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\toDoList\\ToDiListContainer.jsx":"12","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\requestReducer.js":"13","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\usersReducer.js":"14","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Header\\Header.jsx":"15","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\RequestContainer.jsx":"16","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\api\\api.jsx":"17","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Practice\\Staff\\Staff.jsx":"18","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Practice\\Test\\Test.jsx":"19","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\toDoList\\ToDoList.jsx":"20","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\api\\fakeApi.jsx":"21","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Practice\\TestTwo\\TestTwo.jsx":"22","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Photos\\Photos.jsx":"23","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Users\\Users.jsx":"24","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Menu\\Menu.jsx":"25","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\common\\Loader.jsx":"26","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Photos\\PhotoGallery\\PhotoGallery.jsx":"27","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Posts\\Posts.jsx":"28","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\TicTacToe\\TicTac\\TicTacToe.jsx":"29","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\fieldLevelValidation\\validation.js":"30","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Practice\\TestTwo\\QuestionTwo\\QuestionTwo.jsx":"31","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Practice\\Staff\\Collaborator\\Collaborator.jsx":"32","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Practice\\Test\\Question\\Question.jsx":"33","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\toDoList\\task\\Task.jsx":"34","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Users\\UserCard\\UserCard.jsx":"35","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Photos\\AllPhotosAlbums\\AllPhotosAlbums.jsx":"36","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\TicTacToe\\TicTacToe_Counter\\Counter.jsx":"37","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Posts\\Post\\Post.jsx":"38","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Photos\\PhotoGallery\\BigPhoto\\BigPhoto.jsx":"39","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Users\\UsersModalWindow\\UsersModalWindow.jsx":"40","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Posts\\PostsModalWindow\\PostsModalWindow.jsx":"41","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Posts\\PostsModalWindow\\EditPostModal.jsx":"42","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Posts\\PostsModalWindow\\AddPostModal.jsx":"43","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Users\\UsersModalWindow\\EditUserModal.jsx":"44","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\common\\forms\\formsControl.jsx":"45","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Photos\\PhotoGallery\\BigPhoto\\ModalWindowPhoto.jsx":"46"},{"size":792,"mtime":1610347274195,"results":"47","hashOfConfig":"48"},{"size":375,"mtime":1607330653219,"results":"49","hashOfConfig":"48"},{"size":1097,"mtime":1615464298355,"results":"50","hashOfConfig":"48"},{"size":881,"mtime":1615296932305,"results":"51","hashOfConfig":"48"},{"size":1065,"mtime":1612955192553,"results":"52","hashOfConfig":"48"},{"size":1491,"mtime":1610530104868,"results":"53","hashOfConfig":"48"},{"size":1942,"mtime":1615992709925,"results":"54","hashOfConfig":"48"},{"size":3262,"mtime":1610347274155,"results":"55","hashOfConfig":"48"},{"size":5429,"mtime":1611213442111,"results":"56","hashOfConfig":"48"},{"size":1374,"mtime":1611212057936,"results":"57","hashOfConfig":"48"},{"size":173,"mtime":1611216352877,"results":"58","hashOfConfig":"48"},{"size":894,"mtime":1610347274165,"results":"59","hashOfConfig":"48"},{"size":3384,"mtime":1615275753970,"results":"60","hashOfConfig":"48"},{"size":1716,"mtime":1615275753974,"results":"61","hashOfConfig":"48"},{"size":1457,"mtime":1615464330304,"results":"62","hashOfConfig":"48"},{"size":2980,"mtime":1615982371432,"results":"63","hashOfConfig":"48"},{"size":2770,"mtime":1615988788736,"results":"64","hashOfConfig":"48"},{"size":1506,"mtime":1610374532585,"results":"65","hashOfConfig":"48"},{"size":1089,"mtime":1610460736142,"results":"66","hashOfConfig":"48"},{"size":3615,"mtime":1612186075627,"results":"67","hashOfConfig":"48"},{"size":286,"mtime":1614766265567,"results":"68","hashOfConfig":"48"},{"size":2533,"mtime":1612958953108,"results":"69","hashOfConfig":"48"},{"size":1102,"mtime":1614668579061,"results":"70","hashOfConfig":"48"},{"size":1186,"mtime":1615291081960,"results":"71","hashOfConfig":"48"},{"size":1030,"mtime":1615464323793,"results":"72","hashOfConfig":"48"},{"size":560,"mtime":1615275754037,"results":"73","hashOfConfig":"48"},{"size":1465,"mtime":1615992132468,"results":"74","hashOfConfig":"48"},{"size":3060,"mtime":1615464710179,"results":"75","hashOfConfig":"48"},{"size":11980,"mtime":1613046197417,"results":"76","hashOfConfig":"48"},{"size":916,"mtime":1615449420291,"results":"77","hashOfConfig":"48"},{"size":1941,"mtime":1611211969902,"results":"78","hashOfConfig":"48"},{"size":2423,"mtime":1612957140554,"results":"79","hashOfConfig":"48"},{"size":2251,"mtime":1610533060249,"results":"80","hashOfConfig":"48"},{"size":3331,"mtime":1610347274175,"results":"81","hashOfConfig":"48"},{"size":3873,"mtime":1615290946775,"results":"82","hashOfConfig":"48"},{"size":1105,"mtime":1615899438428,"results":"83","hashOfConfig":"48"},{"size":773,"mtime":1612354443890,"results":"84","hashOfConfig":"48"},{"size":2501,"mtime":1615275754027,"results":"85","hashOfConfig":"48"},{"size":2951,"mtime":1615992044503,"results":"86","hashOfConfig":"48"},{"size":1198,"mtime":1615446594826,"results":"87","hashOfConfig":"48"},{"size":2583,"mtime":1615904088628,"results":"88","hashOfConfig":"48"},{"size":1187,"mtime":1615447290807,"results":"89","hashOfConfig":"48"},{"size":1184,"mtime":1615447480608,"results":"90","hashOfConfig":"48"},{"size":2250,"mtime":1615456737305,"results":"91","hashOfConfig":"48"},{"size":1164,"mtime":1615457242149,"results":"92","hashOfConfig":"48"},{"size":1856,"mtime":1615992070975,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"12tfwyy",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"96"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"96"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"96"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\index.js",[],["210","211"],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\reportWebVitals.js",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\App.js",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\store.js",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\staffReducer.js",["212","213","214","215","216"],"const EDIT_VALUE = 'EDIT_VALUE';\r\n\r\n\r\nexport const editValueAC = (id, value, trigger) => ({ type: EDIT_VALUE, id, value, trigger });\r\n\r\n\r\nlet initialState = {\r\n    staffList: [{ id: '1', name: 'Андрей', daysWorked: 2, rate: 1000 },\r\n    { id: '2', name: 'Кирилл', daysWorked: 3, rate: 1100 }]\r\n}\r\n\r\nconst staffReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case EDIT_VALUE:\r\n            let arr = state.staffList.map(item => {\r\n                if (action.trigger == 'DAYS') {\r\n                    if (item.id == action.id) item.daysWorked = action.value\r\n                }\r\n                if (action.trigger == 'RATE') {\r\n                    if (item.id == action.id) item.rate = action.value\r\n                }\r\n                return item\r\n            })\r\n            stateCopy = {\r\n                ...state,\r\n                staffList: [...state.staffList],\r\n            }\r\n            return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default staffReducer","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\testReducer.js",["217","218"],"const CHECKING_ANSWER = 'CHECKING_ANSWER'\r\n\r\nexport const ChekingAnswerAC = (id, answer) => ({ type: CHECKING_ANSWER, id, answer })\r\n\r\nlet initialState = {\r\n    questions: [{ id: 1, question: 'Чем меньше воды, тем больше глубина. Что это?', answer: 'литература', answerUser: '' },\r\n    { id: 2, question: 'Накормишь – живет, напоишь – умрет. О чем речь?', answer: 'огонь', answerUser: '' },\r\n    { id: 3, question: 'Вам дали, вам принадлежит. Вы не продавали, а пользуются все знакомые.', answer: 'имя', answerUser: '' }],\r\n    answersGiven: false\r\n}\r\n\r\nconst testReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type) {\r\n        case CHECKING_ANSWER:\r\n            let testAnswersGiven;\r\n            let arr = state.questions.map(item => {\r\n                if (action.id == item.id) {\r\n                    item.answerUser = action.answer\r\n                }\r\n                item.answerUser == '' ? testAnswersGiven = false : testAnswersGiven = true;\r\n                return item\r\n            })\r\n            console.log(arr)\r\n            stateCopy = {\r\n                ...state,\r\n                questions: [...state.questions],\r\n                answersGiven: testAnswersGiven\r\n            }\r\n            return stateCopy\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default testReducer","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\photosReducer.js",["219","220","221","222","223","224"],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\toDoListReducer.js",["225","226"],"const ADD_NEW_TASK = 'ADD_NEW_TASK';\r\nconst STAGE_OF_DONE = 'STAGE_OF_DONE';\r\nconst EDIT_TEXT_TASK = 'EDIT_TEXT_TASK';\r\nconst DELETE_TASK = 'DELETE_TASK';\r\n\r\nexport const addTaskAC = (task) => ({ type: ADD_NEW_TASK, task });\r\nexport const stageOfDoneAC = (idTask) => ({ type: STAGE_OF_DONE, idTask });\r\nexport const editTextTaskAC = (idTask, textTask) => ({ type: EDIT_TEXT_TASK, idTask, textTask })\r\nexport const deleteTaskAC = (idTask) => ({ type: DELETE_TASK, idTask });\r\n\r\nlet localBaseTask = JSON.parse(localStorage.getItem('taskList')) || []\r\n\r\nlet initialState = {\r\n    taskList: [...localBaseTask]\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    let date = new Date();\r\n\r\n    let getDate = (date.getDate() < 10) ? '0' + date.getDate(): date.getDate();\r\n    let getMonth = (date.getMonth() < 10) ? '0' + (date.getMonth() + 1): date.getMonth() + 1;\r\n    let createDate = `${getDate}.${getMonth}.${date.getFullYear()}`\r\n\r\n    let getHours = (date.getHours() < 10) ? '0' + date.getHours(): date.getHours();\r\n    let getMinutes = (date.getMinutes() < 10) ? '0' + date.getMinutes(): date.getMinutes();\r\n    let createTime = `${getHours}:${getMinutes}`;\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_TASK:\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...state.taskList]\r\n            }\r\n            const idTask = `f${(~~(Math.random() * 1e8)).toString(16)}`;\r\n            stateCopy.taskList.unshift({ id: idTask, text: action.task, done: false, createDateTask: {date: createDate, time: createTime}});\r\n\r\n            localStorage.setItem('taskList', JSON.stringify(stateCopy.taskList))\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n        case STAGE_OF_DONE:\r\n            let arr = state.taskList.map((item) => {\r\n                if (item.id == action.idTask) {\r\n                    item.done = !item.done\r\n                }\r\n                return item\r\n            })\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arr]\r\n            }\r\n            localStorage.setItem('taskList', JSON.stringify(arr))\r\n            return stateCopy;\r\n        case EDIT_TEXT_TASK:\r\n\r\n            let arrEditText = state.taskList.map((item) => {\r\n                if (item.id == action.idTask) {\r\n                    item.text = action.textTask;\r\n                    item.createDateTask.time = `ред. ${createTime}`;\r\n                    item.createDateTask.date = createDate;\r\n                }\r\n                return item\r\n            })\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arrEditText]\r\n            }\r\n            localStorage.setItem('taskList', JSON.stringify(arrEditText))\r\n            return stateCopy;\r\n        case DELETE_TASK:\r\n            let arrfilter = state.taskList.filter((item) => {\r\n                return (item.id !== action.idTask) ? true : false\r\n            });\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arrfilter]\r\n            }\r\n\r\n            localStorage.setItem('taskList', JSON.stringify(arrfilter))\r\n\r\n            return stateCopy;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\testTwoReducer.js",["227","228","229"],"const SELECTED_ANSWER = 'SELECTED_ANSWER'\r\n\r\nexport const selectedAnswerACTWO = (questionId, answerId) => ({ type: SELECTED_ANSWER, questionId, answerId })\r\n\r\nlet initialState = {\r\n    questions: \r\n    [{id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Чем меньше воды, тем больше глубина. Что это?',\r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Литература', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Впадина', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Вулкан', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Знания', correct: false }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Накормишь – живет, напоишь – умрет. О чем речь?', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Память', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Жажда', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Огонь', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Муж', correct: false }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Вам дали, вам принадлежит. Вы не продавали, а пользуются все.', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Умения', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Машина', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Щедрость', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Имя', correct: true }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Чего боятся люди, которые страдают алекторофобией?', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Cобак', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Кур', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Бороды', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Чеснок', correct: false }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Какого газа в атмосфере Земли больше всего?', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Кислород', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Угл. газ', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Азот', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Водород', correct: false }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Назовите столицу Европейского Союза?', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Вена', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Брюсель', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Кельн', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Париж', correct: false }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Как далеко находится Земля от Солнца?', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: '149 000 000 км', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: '14 900 км', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: '257 800 000 км', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: '190 000 000 км', correct: false }], answerUser: ''}],\r\n    answersGiven: 0,\r\n    correctAnswers: 0,\r\n}\r\n\r\nconst testReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type) {\r\n        case SELECTED_ANSWER:\r\n            let arr = state.questions.map(item => {\r\n                if (item.id == action.questionId) {\r\n                    item.answer.map(answerItem =>{\r\n                        if (answerItem.id == action.answerId) {\r\n                            item.answerUser = answerItem.possible\r\n                            state.answersGiven++;\r\n                            if (answerItem.correct) state.correctAnswers++\r\n                        }\r\n                    })\r\n                    return item    \r\n                }\r\n                return item \r\n            })\r\n            console.log(state.correctAnswers)\r\n            stateCopy = {\r\n                ...state,\r\n                questions: [...arr],\r\n            }\r\n            return stateCopy\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default testReducer","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Practice\\PracticeContainer.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\TicTacToe\\TikTakToeContainer.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\toDoList\\ToDiListContainer.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\requestReducer.js",["230","231","232","233"],"import { act } from \"react-dom/test-utils\";\r\nimport { apiAddPost, apiDeletPost, apiEditPost, apiGetPosts } from \"../../api/api\";\r\nimport { compose } from \"redux\";\r\n\r\nconst GET_POSTS = 'GET_POSTS';\r\nconst ADD_POST = 'ADD_POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst EDIT_POST = 'EDIT_POST';\r\nconst LOADING = 'LOADING';\r\n\r\nexport const getPostsAC = (posts) => ({ type: GET_POSTS, posts });\r\nexport const addPostAC = (newPost) => ({ type: ADD_POST, newPost })\r\nexport const deletePostAC = (postId) => ({ type: DELETE_POST, postId });\r\nexport const editPostAC = (postId, postTittle, postBody) => ({ type: EDIT_POST, postId, postTittle, postBody });\r\nexport const loadingAC = () => ({ type: LOADING })\r\n\r\nlet initialState = {\r\n  postsList: [],\r\n  loadingProcess: false,\r\n}\r\n\r\nconst requestReducer = (state = initialState, action) => {\r\n  let stateCopy;\r\n  switch (action.type) {\r\n    case GET_POSTS:\r\n      const splitArrayDate= (dateObj) => {\r\n\r\n        let dateArray = (dateObj.datePublisher.date.split('.'))\r\n        let dateString = (dateArray[2] + '-' + dateArray[1] + '-' + dateArray[0])\r\n        return dateString + 'T' + dateObj.datePublisher.time\r\n      }\r\n      \r\n      action.posts.sort((a, b) => {\r\n        return new Date(splitArrayDate(b)) - new Date(splitArrayDate(a))})\r\n        \r\n      stateCopy = {\r\n        ...state,\r\n        postsList: action.posts\r\n      }\r\n      return stateCopy;\r\n    case ADD_POST:\r\n      stateCopy = {\r\n        ...state,\r\n      }\r\n      stateCopy.postsList.unshift(action.newPost)\r\n      return stateCopy;\r\n    case DELETE_POST:\r\n      let arrDeleteItem = state.postsList.filter(item => {\r\n        if (item.id !== action.postId) return item\r\n      })\r\n      stateCopy = {\r\n        ...state,\r\n        postsList: arrDeleteItem,\r\n      }\r\n      return stateCopy;\r\n    case EDIT_POST:\r\n      let arrEdit = state.postsList.map(item => {\r\n        if (item.id == action.postId) {\r\n          item.title = action.postTittle\r\n          item.body = action.postBody\r\n          item.datePublisher.edit = true\r\n        }\r\n        return item\r\n      })\r\n      stateCopy = {\r\n        ...state,\r\n        postsList: arrEdit,\r\n      }\r\n      return stateCopy;\r\n    case LOADING:\r\n      stateCopy = {\r\n        ...state,\r\n        loadingProcess: !state.loadingProcess\r\n      }\r\n      return stateCopy\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getPostsTC = () => {\r\n  return (\r\n    async (dispatch) => {\r\n      let response = await apiGetPosts();\r\n      dispatch(getPostsAC(response));\r\n    }\r\n  )\r\n}\r\nexport const deletePostTC = (idPost) => {\r\n  return (\r\n    async (dispatch) => {\r\n      dispatch(loadingAC())\r\n      await apiDeletPost(idPost); // Delete to server posts\r\n      dispatch(deletePostAC(idPost));\r\n      dispatch(loadingAC())\r\n    }\r\n  )\r\n}\r\nexport const editPostTC = (idPost, postTittle, postBody) => {\r\n  return (\r\n    async (dispatch) => {\r\n      dispatch(loadingAC())\r\n      await apiEditPost(idPost, postTittle, postBody);\r\n      dispatch(editPostAC(idPost, postTittle, postBody))\r\n      dispatch(loadingAC())\r\n    }\r\n  )\r\n}\r\n\r\nexport const addPostTC = (postTittle, postBody) => {\r\n  return (\r\n    async (dispatch) => {\r\n      dispatch(loadingAC())\r\n      let response = await apiAddPost(postTittle, postBody);\r\n      dispatch(addPostAC(response.data))\r\n      dispatch(loadingAC())\r\n    }\r\n  )\r\n}\r\nexport default requestReducer","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Redux\\usersReducer.js",["234","235"],"import { apiGetUserInfo, apiGetUsers, apiEditUsers } from \"../../api/api\";\r\nimport { loadingAC } from \"./requestReducer\";\r\n\r\n\r\nconst GET_USERS = 'GET_USERS'\r\nconst EDIT_USERS = 'EDIT_USERS'\r\n\r\nexport const getUsersAC = (users) => ({ type: GET_USERS, users })\r\nexport const editUsersAC = (newUsersList) => ({ type: EDIT_USERS, newUsersList })\r\n\r\n\r\nlet initialState = {\r\n    usersList: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n            stateCopy = {\r\n                ...state,\r\n                usersList: action.users\r\n            }\r\n            return stateCopy\r\n        case EDIT_USERS:\r\n            let arrNewUserLits = state.usersList.map(item => {\r\n                if (item.id == action.newUsersList.id) {\r\n                    item = {\r\n                        ...item,\r\n                        ...action.newUsersList\r\n                    }\r\n                }\r\n                return item\r\n            })\r\n            stateCopy = {\r\n                ...state,\r\n                usersList: arrNewUserLits\r\n            }\r\n            return stateCopy\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getUsersTC = () => {\r\n    return (\r\n        async (dispatch) => {\r\n            let response = await apiGetUsers();\r\n            dispatch(getUsersAC(response));\r\n        }\r\n    )\r\n}\r\nexport const editUsersTC = (newInfoUser) => {\r\n\r\n    return (\r\n        async (dispatch) => {\r\n            dispatch(loadingAC());\r\n            await apiEditUsers(newInfoUser)\r\n            dispatch(editUsersAC(newInfoUser));\r\n            dispatch(loadingAC());\r\n        }\r\n    )\r\n}\r\n\r\nexport default usersReducer","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\RequestContainer.jsx",["236","237","238","239"],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\api\\api.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Practice\\Staff\\Staff.jsx",["240","241","242","243"],"import { faCheckCircle, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react'\r\nimport Collaborator from './Collaborator/Collaborator';\r\nimport styles from './Staff.module.css'\r\n\r\n\r\nconst Staff = ({staffList, ...props}) => {\r\n    let allSalary = 0;\r\n    let staffListArr = staffList.map((item) => {\r\n        allSalary += item.daysWorked * item.rate\r\n        return <Collaborator key={item.id} id={item.id} name={item.name} daysWorked={item.daysWorked} rate={item.rate} editValue={props.editValue}/>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h3>Задание № 1 (Посчет ЗП работников)</h3>\r\n            <div className={styles.contaiter}>\r\n                <table >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Имя</th>\r\n                            <th>Кол-во Дней</th>\r\n                            <th>Ставка</th>\r\n                            <th>Зарплата</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {staffListArr}\r\n                        <tr>\r\n                            <th>Общая зп</th>\r\n                            <td colSpan='3'>{allSalary}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Staff","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Practice\\Test\\Test.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\toDoList\\ToDoList.jsx",["244","245","246","247","248","249"],"import React, { useState } from 'react'\r\nimport styles from './ToDoList.module.css'\r\nimport Task from './task/Task'\r\nimport { Field } from 'redux-form'\r\nimport { required } from '../fieldLevelValidation/validation';\r\n\r\nexport const renderField = ({ input, type, meta: { submitFailed, error, warning },} ) => {\r\n    return (\r\n        <div className={styles.inputForm_container}>\r\n            <div>\r\n                <textarea {...input} type={type} className={styles.inputForm} placeholder='Напишите новую задачу' />\r\n            </div>\r\n            <div className={styles.inputForm_error}>\r\n                {submitFailed && ((error && <span >{error}</span>) ||\r\n                    (warning && <span className={styles.inputForm_error}>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ToDoList = (props) => {\r\n    const [filterMode, setFilterMode] = useState(1);\r\n    const [inProp, setInProp] = useState(true);\r\n\r\n    let changeFilter = (filterNumber) => {\r\n        setFilterMode(filterNumber);\r\n        setInProp(!inProp);\r\n    }\r\n\r\n    let undoneTask = props.taskList.filter(item => !item.done)\r\n    let doneTask = props.taskList.filter(item => item.done)\r\n    let allTask = undoneTask.concat(doneTask)\r\n    let resultAllTask = allTask.map((item) => {\r\n        return <Task key={item.id} text={item.text} done={item.done} edit={item.edit}\r\n            stageOfDone={props.stageOfDone} id={item.id}\r\n            deleteTask={props.deleteTask} editTextTask={props.editTextTask} \r\n            date={item.createDateTask.date} time={item.createDateTask.time} />\r\n    })\r\n\r\n    let resultDoneTask = resultAllTask.filter((item) => item.props.done);\r\n    let resultUnDoneTask = resultAllTask.filter((item) => !item.props.done);\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.wrapper}>\r\n                <h3 className={styles.tittle}>Лист задач:</h3>\r\n                <div className={styles.filter}>\r\n                    <p className={filterMode == 1 ? styles.filter_active : ''} onClick={() => { changeFilter(1) }}>Все задачи</p>\r\n                    <p className={filterMode == 2 ? styles.filter_active : ''} onClick={() => { changeFilter(2) }} >Активные задачи</p>\r\n                    <p className={filterMode == 3 ? styles.filter_active : ''} onClick={() => { changeFilter(3) }}>Выполненные задачи</p>\r\n                </div>\r\n                <div className={styles.todolist}>\r\n                    <div className={styles.info}>\r\n                        <p className={styles.info_undone}>Активные задачи: <span>{undoneTask.length}</span> </p>\r\n                        <p className={styles.info_done}>Выполненные задачи: <span>{doneTask.length}</span> </p>\r\n                    </div>\r\n                    <form onSubmit={props.handleSubmit} className={styles.formControl}>\r\n                        <Field className={styles.input} name='newTask'\r\n                            component={renderField} validate={[required]} />\r\n                        <button className={styles.addTask}>Добавить</button>\r\n                    </form>\r\n                            <div className={styles.hhh}>\r\n                                {filterMode == 1 ? resultAllTask : ''}\r\n                                {filterMode == 2 ? resultUnDoneTask : ''}\r\n                                {filterMode == 3 ? resultDoneTask : ''}\r\n                            </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ToDoList","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\api\\fakeApi.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Practice\\TestTwo\\TestTwo.jsx",["250"],"import React, { useState } from 'react'\r\nimport Slider from 'react-slick';\r\nimport QuestionTwo from './QuestionTwo/QuestionTwo';\r\nimport styles from './TestTwo.module.css'\r\n\r\nconst TestTwo = ({ test, answersGivenTwo, selectedAnswer, correctAnswers }) => {\r\n    const [testDone, setTestDone] = useState(false)\r\n\r\n    const customeSlider = React.createRef();\r\n    const [sliderSettings, setSliderSettings] = useState({\r\n        infinite: false,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        arrows: false,\r\n    })\r\n\r\n    const gotoNext = () => {\r\n        customeSlider.current.slickNext()\r\n    }\r\n\r\n    const gotoPrev = () => {\r\n        customeSlider.current.slickPrev()\r\n    }\r\n\r\n    let questions = test.map(item => {\r\n        return <QuestionTwo key={item.id} id={item.id} question={item.question}\r\n            answer={item.answer} answerUser={item.answerUser} selectedAnswer={selectedAnswer}\r\n            testDone={testDone} gotoNext={gotoNext} />\r\n    })\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.container}>\r\n                <h3>Задание № 3 (Тест)</h3>\r\n                {!testDone ?\r\n                    <div>\r\n                        <Slider {...sliderSettings} ref={customeSlider}>\r\n                            {questions}\r\n                        </Slider>\r\n                        <div className={styles.navigation_container}>\r\n                            <button className={styles.buttonNavigation} onClick={() => gotoPrev()}>Предыдущий <br/> вопрос</button>\r\n                            <button className={styles.buttonNavigation} onClick={() => gotoNext()}>Следующий <br/> вопрос</button>\r\n                        </div>\r\n                        <div className={styles.button_container}>\r\n                            <button onClick={() => { setTestDone(!testDone) }} disabled={answersGivenTwo !== test.length}\r\n                                className={styles.button}> Сдать тест</button>\r\n                        </div>\r\n                    </div> :\r\n                    <div>\r\n                        <div className={styles.doneContainer}>\r\n                            {questions}\r\n                        </div>\r\n                        <p className={styles.doneInfo}>Колличество Ваших правильных ответов - <span>{correctAnswers}</span></p>\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestTwo","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Photos\\Photos.jsx",["251"],"import React, { useState } from 'react'\r\nimport AllPhotosAlbums from './AllPhotosAlbums/AllPhotosAlbums';\r\nimport styles from './Photos.module.css'\r\n\r\nconst Photos = ({ photosList }) => {\r\n    let [viewAlbm, setViewAlbm] = useState(3)\r\n\r\n    let photosListFilter = photosList.filter((item, index) => {\r\n        if (index < viewAlbm) return item\r\n    })\r\n\r\n    let arrAllPhotosAlbums = photosListFilter.map((item, index) => {\r\n        return <AllPhotosAlbums photosList={item} id={index} />\r\n    })\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.wrapper}>\r\n                <h3 className={styles.tittle}>Gallery</h3>\r\n                <div className={styles.photosAlbum}>\r\n                    {arrAllPhotosAlbums}\r\n                </div>\r\n                <div className={styles.navigations}>\r\n                    <button className={styles.moreAlbum} onClick={() => { setViewAlbm(viewAlbm + 3) }}>\r\n                        More albms\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Photos","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Users\\Users.jsx",["252","253"],"import React from 'react'\r\nimport { useState } from 'react/cjs/react.development'\r\nimport UserCard from './UserCard/UserCard'\r\nimport styles from './Users.module.css'\r\n\r\nconst Users = ({ users, editUsers }) => {\r\n    let [visibleUsers, setVisibleUsers] = useState(3)\r\n\r\n    let userList = users.map((item, index) => {\r\n\r\n\r\n        if (index < visibleUsers) return <UserCard key={item.id} id={item.id} name={item.name} userName={item.username}\r\n            phone={item.phone} website={item.website} email={item.email}\r\n            address={item.address} company={item.company} editUsers={editUsers}/>\r\n    })\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.wrapperUserList}>\r\n                <div className={styles.userList}>\r\n                    {userList}\r\n                </div>\r\n                <div className={styles.buttonMoreUsers__wrapper}>\r\n                    { userList[userList.length-1] == undefined && \r\n                    <button className={styles.buttonMoreUsers} onClick={() => {setVisibleUsers(visibleUsers + 3)}}>More</button>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Menu\\Menu.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\common\\Loader.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Photos\\PhotoGallery\\PhotoGallery.jsx",["254","255"],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Posts\\Posts.jsx",["256","257"],"import React from 'react'\r\nimport { useState } from 'react/cjs/react.development'\r\nimport PostsModalWindow from './PostsModalWindow/PostsModalWindow'\r\nimport Post from './Post/Post'\r\nimport styles from './Posts.module.css'\r\n\r\nconst Posts = ({ postsList, deletPost, editPost, addPost }) => {\r\n\r\n    let [cardSizeBig, setCardSizeBig] = useState(false)\r\n    let [amountPosts, setAmountPosts] = useState(3)\r\n\r\n    let сheckingForPosts = postsList.length !== 0;\r\n\r\n    let [viewPost, setViewPost] = useState({\r\n        title: '',\r\n        body: '',\r\n        postId: null,\r\n        trigger: '',\r\n        messages: '',\r\n        show: false,\r\n    })\r\n\r\n    const onShowMore = () => {\r\n        setAmountPosts(amountPosts + (cardSizeBig ? 4 : 3))\r\n    }\r\n    const onViewPost = (title, body, postId, trigger, messages) => {\r\n\r\n        setViewPost({\r\n            ...viewPost,\r\n            title,\r\n            body,\r\n            postId,\r\n            trigger,\r\n            messages,\r\n            show: true\r\n        })\r\n    }\r\n    const onAddPost = () => {\r\n        setViewPost({\r\n            trigger: 'ADD',\r\n            messages: 'gegegf',\r\n            show: true\r\n        })\r\n    }\r\n    const onCloseViewPost = () => {\r\n        setViewPost({\r\n            ...viewPost,\r\n            show: false\r\n        })\r\n    }\r\n    const onBigCard = () => {\r\n        setCardSizeBig(true)\r\n    }\r\n    const onSmallCard = () => {\r\n        setCardSizeBig(false)\r\n    }\r\n    const onePost = postsList.map((item, index) => {\r\n        if (index < amountPosts) return <Post key={item.id} id={item.id} postBody={item.body}\r\n            postTitle={item.title} datePublisher={item.datePublisher} onViewPost={onViewPost} cardSizeBig={cardSizeBig} />\r\n    })\r\n\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.main_navigationSizeCards }>\r\n                <div>\r\n                    <button className={styles.addPost} onClick={onAddPost}>Add post</button>\r\n                </div>\r\n                {сheckingForPosts && <div className={styles.hide_navigationResize}>\r\n                    <button className={cardSizeBig && styles.main_buttonActive} onClick={onBigCard}>Make big cards</button>\r\n                    <button className={!cardSizeBig && styles.main_buttonActive} onClick={onSmallCard}>Make small cards</button>\r\n                </div>}\r\n            </div>\r\n            <div className={styles.main_container + ' ' + (cardSizeBig && styles.main_containerBigCard)}>\r\n                { сheckingForPosts ? onePost : <p>There are no posts, add a new post</p>}\r\n            </div>\r\n            <div className={onePost[onePost.length - 1] == undefined && сheckingForPosts ? styles.main_showMoreContainer : styles.hide}>\r\n                <button className={styles.main_showMore} onClick={onShowMore}>Show more</button>\r\n            </div>\r\n            {viewPost.show && <PostsModalWindow viewPost={viewPost} onCloseViewPost={onCloseViewPost} deletPost={deletPost} editPost={editPost} addPost={addPost}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\TicTacToe\\TicTac\\TicTacToe.jsx",["258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288"],"import React, { useEffect, useState } from 'react'\r\nimport styles from './TicTacToe.module.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChild, faDesktop, faSmileBeam, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { Transition } from 'react-spring/renderprops'\r\nimport Counter from '../TicTacToe_Counter/Counter'\r\n\r\nlet times = <FontAwesomeIcon className={styles.times} icon={faTimes} />\r\nlet circle = <div className={styles.circle}></div>\r\nlet child = <FontAwesomeIcon className={styles.child} icon={faChild} />\r\nlet desktop = <FontAwesomeIcon className={styles.desktop} icon={faDesktop} />\r\nlet smille = <FontAwesomeIcon className={styles.smille} icon={faSmileBeam} />\r\n\r\nlet winningCombination = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [1, 4, 7], [2, 5, 8], [3, 6, 9], [1, 5, 9], [3, 5, 7]]\r\n\r\nconst TikTakToe = () => {\r\n    let stateArr = [{ id: 1, times: false, circle: false },\r\n    { id: 2, times: false, circle: false },\r\n    { id: 3, times: false, circle: false },\r\n    { id: 4, times: false, circle: false },\r\n    { id: 5, times: false, circle: false },\r\n    { id: 6, times: false, circle: false },\r\n    { id: 7, times: false, circle: false },\r\n    { id: 8, times: false, circle: false },\r\n    { id: 9, times: false, circle: false }]\r\n\r\n    let countValue = { times: 0, circle: 0, draw: 0 }\r\n\r\n    let [state, setState] = useState(stateArr);\r\n    let [priorityCircle, setPriorityCircle] = useState(false);\r\n    let [combinationX, setCombinationX] = useState([]);\r\n    let [combinationO, setCombinationO] = useState([]);\r\n    let [winnerIndicator, setWinnerIndicator] = useState(false);\r\n    let [winnerIndicatorTwo, setWinnerIndicatorTwo] = useState(false);\r\n    let [drawIndicator, setDrawIndicator] = useState(false);\r\n    let [winnerID, setWinnerID] = useState(null);\r\n    let [winnerForm, setWinnerForm] = useState('');\r\n    let [count, setCount] = useState(countValue);\r\n    let [opponentChoosingDisplay, setOpponentChoosingDisplay] = useState(true)\r\n    let [opponentDesktop, setOpponentDesktop] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (combinationX.length >= 3) victoryCheck()\r\n    }, [combinationX])\r\n\r\n    useEffect(() => {\r\n        if (combinationO.length >= 3) victoryCheck()\r\n    }, [combinationO])\r\n\r\n    const courseBot = () => {\r\n        if (priorityCircle) {\r\n            let whileValue = true;\r\n            while (whileValue) {\r\n                console.log('1')\r\n                let randomId = Math.floor(1 + Math.random() * (9 + 1 - 1)) + \"\"\r\n                state.map(item => {\r\n                    if (randomId == item.id && item.times == false && item.circle == false) {\r\n                        item.circle = true\r\n                        setCombinationO([...combinationO, item.id])\r\n                        setPriorityCircle(false)\r\n                        whileValue = false;\r\n                        return\r\n                    }\r\n                    if (combinationO.length + combinationX.length == 8) whileValue = false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    let clearFild = () => {\r\n        setTimeout(() => {\r\n            setWinnerIndicatorTwo(true)\r\n            setTimeout(() => {\r\n                setState(stateArr);\r\n                setWinnerIndicator(false);\r\n                setWinnerIndicatorTwo(false)\r\n                setCombinationX([]);\r\n                setCombinationO([]);\r\n                setWinnerID(null);\r\n                setDrawIndicator(false)\r\n                setPriorityCircle(false);\r\n                setWinnerForm('')\r\n            }, 3000);\r\n        }, 3000);\r\n    }\r\n    const victoryCheck = () => {\r\n        let finish = false\r\n\r\n        winningCombination.forEach((itemWinArr, index) => {\r\n            let winnerX = 0\r\n            let winnerO = 0\r\n            itemWinArr.forEach(itemWin => {\r\n                if (combinationX.includes(itemWin)) winnerX++\r\n                if (combinationO.includes(itemWin)) winnerO++\r\n            })\r\n            if (winnerX == 3 || winnerO == 3) {\r\n                setWinnerIndicator(true)\r\n                setWinnerID(index)\r\n                clearFild()\r\n                setWinnerForm(priorityCircle ? 'times' : 'circle')\r\n                priorityCircle ? setCount({ ...count, times: count.times + 1 }) :\r\n                    setCount({ ...count, circle: count.circle + 1 })\r\n                finish = true\r\n            }\r\n            winnerX = 0;\r\n            winnerO = 0;\r\n        })\r\n        if ((combinationO.length + combinationX.length) == 9 && !finish) {\r\n            clearFild()\r\n            setWinnerIndicator(true)\r\n            setDrawIndicator(true)\r\n            setCount({ ...count, draw: count.draw + 1 })\r\n        }\r\n    }\r\n\r\n    let onClickZone = (e) => {\r\n        if (winnerIndicator) return\r\n        state.map(item => {\r\n            if (e.target.id == item.id && item.times == false && item.circle == false) {\r\n                if (priorityCircle) {\r\n                    item.circle = true\r\n                    setCombinationO([...combinationO, item.id])\r\n                    setPriorityCircle(false)\r\n                } else {\r\n                    item.times = true\r\n                    setCombinationX([...combinationX, item.id])\r\n                    setPriorityCircle(true)\r\n                }\r\n            }\r\n            return item\r\n        })\r\n    }\r\n    let onClickZoneVSDesktop = (e) => {\r\n        if (winnerIndicator) return\r\n        if (priorityCircle) {\r\n            courseBot()\r\n        } else {\r\n            state.map(item => {\r\n                if (e.target.id == item.id && item.times == false && item.circle == false) {\r\n                    item.times = true\r\n                    setCombinationX([...combinationX, item.id])\r\n                    setPriorityCircle(true)\r\n                }\r\n                return item\r\n            })\r\n        }\r\n    }\r\n\r\n    const onOpponentChoosing = (e) => {\r\n        if (e.currentTarget.dataset.opponent == 'desktop') setOpponentDesktop(true)\r\n        setOpponentChoosingDisplay(false)\r\n    }\r\n\r\n    let renderState = state.map(item => {\r\n        return (\r\n            <div className={styles.zone + \" \" + (winnerIndicator && styles.zoneWiner)} id={item.id}\r\n                key={item.id} onClick={opponentDesktop ? onClickZoneVSDesktop : onClickZone}>\r\n                {item.times && times}\r\n                {item.circle && circle}\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            <div className={styles.container}>\r\n                <div className={styles.priorityInfo_wrapper}>\r\n                    <div className={styles.priorityInfo}>\r\n                        {!winnerIndicator ?\r\n                            !opponentChoosingDisplay ? <div className={styles.priorityInfo_unWinner}>\r\n                                <div className={styles.priorityInfo_title}>Ход:</div>\r\n                                <div className={styles.priorityInfo_icon}>{priorityCircle ? circle : times}</div>\r\n                            </div> : <div className={styles.priorityInfo_titleVS}> ? vs ?</div>\r\n                            : smille}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.tikTakToe_wrapper}>\r\n                    <p className={styles.tikTakToe_tittleOpponent}>{!opponentChoosingDisplay && (opponentDesktop ? <span>{child} vs {desktop}</span> : <span>{child} vs {child}</span>)} </p>\r\n                    <Transition\r\n                        items={!winnerIndicatorTwo}\r\n                        from={{ position: 'absolute', opacity: 0 }}\r\n                        enter={{ opacity: 1 }}\r\n                        leave={{ opacity: 0 }}>\r\n                        {toggle =>\r\n                            toggle\r\n                                ? props => <div style={props} className={styles.tikTakToe}>\r\n                                    {renderState}\r\n                                    <div className={styles.allLineWrapper + \" \" + (winnerID == null && styles.allLineHide)}>\r\n                                        <div className={styles.winLineHorizontal_wrapper}>\r\n                                            <div className={styles.lineHorizontal + \" \" + (winnerID == 0 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                            <div className={styles.lineHorizontal + \" \" + (winnerID == 1 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                            <div className={styles.lineHorizontal + \" \" + (winnerID == 2 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                        </div>\r\n                                        <div className={styles.winLineVertical_wrapper}>\r\n                                            <div className={styles.lineVertical + \" \" + (winnerID == 3 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                            <div className={styles.lineVertical + \" \" + (winnerID == 4 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                            <div className={styles.lineVertical + \" \" + (winnerID == 5 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                        </div>\r\n                                        <div className={styles.winLineDiagonal_wrapper}>\r\n                                            <div className={styles.lineDiagonal_left + \" \" + (winnerID == 6 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                            <div className={styles.lineDiagonal_right + \" \" + (winnerID == 7 && (priorityCircle ? styles.lineHideBlue : styles.lineHideYellow))}></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                : props => <div style={props} className={styles.winner_container}>\r\n                                    {!drawIndicator ?\r\n                                        <div>\r\n                                            <div className={styles.winner_icon}>{(winnerForm == 'times' && times) || (winnerForm == 'circle' && circle)}</div>\r\n                                            <p className={(winnerForm == 'times' && styles.winner_textTimes) || (winnerForm == 'circle' && styles.winner_textCircle)}>{winnerForm !== '' && \"ПОБЕДИТЕЛЬ!\"}</p>\r\n                                        </div> :\r\n                                        <div>\r\n                                            <div className={styles.draw_icon} >\r\n                                                {times} {circle}\r\n                                            </div>\r\n                                            <p className={styles.draw_text}>НИЧЬЯ!</p>\r\n                                        </div>\r\n                                    }\r\n                                </div>}\r\n                    </Transition>\r\n                </div>\r\n            </div>\r\n            <Counter times={times} circle={circle} count={count} />\r\n            {opponentChoosingDisplay && <div className={styles.choosingOpponent_wrapper}>\r\n                <div className={styles.choosingOpponent_container}>\r\n                    <p className={styles.choosingOpponent_info}>Выберете оппонента :</p>\r\n                    <div className={styles.choosingOpponent}>\r\n                        <button className={styles.choosingOpponent_buttonChild} onClick={onOpponentChoosing} data-opponent={'child'}>{child} vs {child}</button>\r\n                        <button className={styles.choosingOpponent_buttonDesktop} onClick={onOpponentChoosing} data-opponent={'desktop'}>{child} vs {desktop}</button>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TikTakToe","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\fieldLevelValidation\\validation.js",["289"],"\r\nexport const required = value =>\r\n  value || typeof value === 'number' ? undefined : 'The field cannot be empty'\r\n\r\nexport const onlySpaces = value =>\r\n  value.trim() == '' ? 'The string cannot contain only spaces' : undefined\r\n\r\nexport const email = value =>\r\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n    ? 'Invalid email address'\r\n    : undefined\r\n\r\nexport const phoneNumber = value =>\r\n  value && !/^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/.test(value)\r\n    ? 'Enter a valid phone number'\r\n    : undefined\r\n\r\nconst maxLength = max => value =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n\r\nexport const maxLength20 = maxLength(20)\r\nexport const maxLength25 = maxLength(25)\r\n\r\nconst minLength = min => value =>\r\n  value && value.length < min ? `Must be ${min} characters or more` : undefined\r\n\r\nexport const minLength2 = minLength(2)\r\n","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Practice\\TestTwo\\QuestionTwo\\QuestionTwo.jsx",["290","291","292","293","294","295"],"import React, { useState } from 'react'\r\nimport styles from './QuestionTwo.module.css'\r\n\r\nconst QuestionTwo = ({ id, question, answer, answerUser, testDone, selectedAnswer, gotoNext }) => {\r\n\r\n    const onSelectedAnswer = (id, itemId) => {\r\n        selectedAnswer(id, itemId);\r\n        gotoNext();\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.question}>\r\n                {question}\r\n            </div>\r\n\r\n            <div className={styles.navigation}>\r\n                <div className={styles.answerOptions}>\r\n                    {!testDone ? answer.map(item => {\r\n                        return <button className={styles.possibleAnswer + \" \" + ((answerUser == item.possible) ? styles.possibleAnswerOk : '')}\r\n                            onClick={() => { onSelectedAnswer(id, item.id) }} disabled={answerUser}>{item.possible}</button>\r\n                    }) : answer.map(item => {\r\n                        console.log(item.possible == answerUser, item.correct)\r\n                        return <button\r\n                            className={styles.possibleAnswer + \" \" + (item.correct && styles.done_correct) + \" \" +\r\n                                (item.possible == answerUser && item.correct && styles.done_correct) + \" \" + (item.possible == answerUser && !item.correct && styles.done_unCorrect)}\r\n                            disabled={true}>\r\n                            {item.possible}\r\n                            {item.correct && <p className={styles.done_info} >Верный ответ</p>}\r\n                            {(item.possible == answerUser && !item.correct && <p className={styles.done_info} >Вы ответили</p>)}\r\n                        </button>\r\n                    })}\r\n                </div>\r\n                {!testDone ? answerUser ? 'Ответ принят' : null : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionTwo","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Practice\\Staff\\Collaborator\\Collaborator.jsx",["296","297","298","299","300","301","302","303","304"],"import { faCheckCircle, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react'\r\nimport styles from './Collaborator.module.css'\r\n\r\n\r\nconst Collaborator = (props) => {\r\n    let [editModeDays, setEditModeDays] = useState(false);\r\n    let [editModeRate, setEditModeRate] = useState(false);\r\n\r\n    const onEditDays = () => {\r\n        setEditModeDays(!editModeDays)\r\n    }\r\n    const onEditRate = () => {\r\n        setEditModeRate(!editModeRate)\r\n    }\r\n    const onEditDaysKeyDown = (e) => {\r\n        if (e.code == 'Enter' || e.code == 'NumpadEnter') setEditModeDays(!editModeDays)\r\n    }\r\n    const onEditRateKeyDown = (e) => {\r\n        if (e.code == 'Enter' || e.code == 'NumpadEnter') setEditModeRate(!editModeRate)\r\n    }\r\n    const onChangeRate = (targetValue, trigger) => {\r\n        let value = targetValue.replace(/\\D/g, '')\r\n        if (value.length == 2 && value[0] == 0) value = value.substring(1)\r\n        if (value == '') value = 0;\r\n        if (trigger == 'RATE') props.editValue(props.id, value, trigger)\r\n        if (trigger == 'DAYS') props.editValue(props.id, value, trigger)\r\n    }\r\n    return (\r\n        <tr key={props.id}>\r\n            <td>{props.name}</td>\r\n            <td className={styles.days}>{!editModeDays ?\r\n                <div>{props.daysWorked} <FontAwesomeIcon icon={faPencilAlt} className={styles.edit} onClick={onEditDays} /></div> :\r\n                <div><input type='text' min='0' value={props.daysWorked} className={styles.days_input} autoFocus={true} onChange={(e) => { onChangeRate(e.target.value, 'DAYS') }} onKeyDown={onEditDaysKeyDown} />\r\n                    <FontAwesomeIcon icon={faCheckCircle} className={styles.edit} onClick={onEditDays} /></div>}</td>\r\n            <td className={styles.rate}>{!editModeRate ?\r\n                <div>{props.rate}<FontAwesomeIcon icon={faPencilAlt} className={styles.edit} onClick={onEditRate} /></div> :\r\n                <div><input type='text' min='0' value={props.rate} autoFocus={true} className={styles.rate_input} onChange={(e) => { onChangeRate(e.target.value, 'RATE') }} onKeyDown={onEditRateKeyDown} />\r\n                    <FontAwesomeIcon icon={faCheckCircle} className={styles.edit} onClick={onEditRate} /></div>}</td>\r\n            <td>{props.daysWorked * props.rate}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Collaborator","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Practice\\Test\\Question\\Question.jsx",["305","306","307","308","309"],"import React, { useState } from 'react'\r\nimport styles from './Question.module.css'\r\n\r\nconst Question = ({ id, question, answer, answerUser, chekingAnswer, testDone }) => {\r\n\r\n    const [answerValue, setAnswerValue] = useState('');\r\n    const [error, setError] = useState(false)\r\n\r\n    const onAnswer = (e) => {\r\n        if (/^\\s+$/.test(e.target.value) || e.target.value == '') {\r\n            setError(true)\r\n        } else {\r\n            setAnswerValue(e.target.value.toLowerCase().trim())\r\n            setError(false)\r\n        }\r\n    }\r\n\r\n    const onChekingAnswer = () => {\r\n        if (/^\\s+$/.test(answerValue) || answerValue == '') {\r\n            setError(true)\r\n        } else {\r\n            chekingAnswer(id, answerValue)\r\n            setError(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.question}>\r\n                {question}\r\n            </div>\r\n\r\n            <div className={styles.navigation}>\r\n                {testDone ?\r\n                    <div>\r\n                        <p>{answer == answerUser ?\r\n                            <p className={styles.correctAnswer}>Ваш ответ: <span>{answerUser}</span> - правильно! </p> :\r\n                            <p className={styles.unCorrectAnswer}>Ваш ответ: <span>{answerUser}</span> - не верно! Верный ответ: <span>{answer}</span> </p>}</p>\r\n                    </div> :\r\n                    <div className={styles.dataInput}>\r\n                        <input type=\"text\" name=\"\" id=\"\" className={styles.answer} onChange={onAnswer} disabled={answerUser == '' ? false : true} />\r\n                        <div className={`${styles.error} ${error ? styles.showError : ''}`}> Это поле не может быть пустым </div>\r\n                        {answerUser == '' ?\r\n                            <button onClick={onChekingAnswer} className={styles.button} disabled={error ? true : false}>Ответить</button> :\r\n                            <span className={styles.recd}>Ответ принят</span>}\r\n                    </div>}\r\n                <div className={styles.border}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\toDoList\\task\\Task.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Users\\UserCard\\UserCard.jsx",["310"],"import React, { useState } from 'react'\r\nimport styles from './UserCard.module.css'\r\nimport avatarNone from '../../../../img/users/userNoneAvatar.png'\r\nimport companyLogo from '../../../../img/users/logo-business.png'\r\nimport addressLogo from '../../../../img/users/addressLogo.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faUserEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport UsersModalWindow from '../UsersModalWindow/UsersModalWindow'\r\n\r\n\r\nconst UserCard = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    const editInfo = <FontAwesomeIcon icon={faUserEdit} className={styles.iconEdit} />\r\n    const onEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.wrapper}>\r\n                <div className={styles.card}>\r\n                    <div className={styles.topInfo}>\r\n                        <div className={styles.avatar}>\r\n                            <img src={avatarNone} alt=\"\" />\r\n                        </div>\r\n                        <div className={styles.topInfo_main}>\r\n                            <h3 className={styles.userName}>{props.userName}</h3>\r\n                            <p className={styles.name}>{props.name}</p>\r\n                            <p className={styles.email}><span>Email: </span> {props.email}</p>\r\n                            <p className={styles.phone}><span>Phone: </span> {props.phone}</p>\r\n                            <p className={styles.website}> <span>Site: </span> {props.website}</p>\r\n                        </div>\r\n                        <div className={styles.editInfo}>\r\n                            <button onClick={onEditMode}> {editInfo} </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.dividingStrip}></div>\r\n                    <div className={styles.bottomInfo}>\r\n                        <div className={styles.company}>\r\n                            <div className={styles.leftLogo}>\r\n                                <img src={companyLogo} alt=\"\" />\r\n                                <div className={styles.leftLogo__dividingStrip}></div>\r\n                            </div>\r\n                            <div>\r\n                                <p className={styles.company__item}>{props.company.bs}</p>\r\n                                <p className={styles.company__item}>{props.company.catchPhrase}</p>\r\n                                <p className={styles.company__item}>{props.company.name}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.address}>\r\n                            <div className={styles.leftLogo}>\r\n                                <img src={addressLogo} alt=\"\" />\r\n                                <div className={styles.leftLogo__dividingStrip}></div>\r\n                            </div>\r\n                            <div>\r\n                                <p className={styles.address__item}>{props.address.street}</p>\r\n                                <p className={styles.address__item}>{props.address.suite}</p>\r\n                                <p className={styles.address__item}>{props.address.city}</p>\r\n                                <p className={styles.address__item}>{props.address.zipcode}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {editMode && <UsersModalWindow name={props.name} userName={props.userName} email={props.email}\r\n                                        phone={props.phone} site={props.website} editUsers={props.editUsers}\r\n                                        id={props.id} setEditMode={setEditMode}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Photos\\AllPhotosAlbums\\AllPhotosAlbums.jsx",["311","312"],"import React, { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './AllPhotosAlbums.module.css'\r\n\r\nconst AllPhotosAlbums = ({ id, photosList }) => {\r\n    let arr = photosList\r\n        .filter((item, index) => {\r\n            if (index < 4) return item\r\n        })\r\n        .map(item => {\r\n            let backgroundImageStyle = {\r\n                backgroundImage: 'url(' + item.url + ')',\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center'\r\n            }\r\n            return <div className={styles.preview} style={backgroundImageStyle}>  </div>\r\n\r\n        })\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.wrapper}>\r\n                <NavLink to={`/request_axios/photos/${id}`}>\r\n                    <div className={styles.albumCard} id={id}>\r\n                        {arr}\r\n                    </div>\r\n                </NavLink>\r\n                <p className={styles.description}>Album № {id + 1}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllPhotosAlbums","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\TicTacToe\\TicTacToe_Counter\\Counter.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Posts\\Post\\Post.jsx",["313","314","315","316"],"import { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, { useState } from 'react'\r\nimport styles from './Post.module.css'\r\n\r\nconst Post = ({ id, postBody, postTitle, onViewPost, cardSizeBig, datePublisher }) => {\r\n\r\n    let [backgroundColor, setBackgroundColor] = useState(0)\r\n\r\n    const onSetBackgroundColor = () => {\r\n        setBackgroundColor(backgroundColor = backgroundColor + 1)\r\n        if (backgroundColor == 4) setBackgroundColor(0)\r\n    }\r\n\r\n    const editPost = <FontAwesomeIcon icon={faEdit} className={styles.iconEdit}\r\n        onClick={() => onViewPost(postTitle, postBody, id, 'EDIT', 'Editing a post')} />\r\n    const deletePost = <FontAwesomeIcon icon={faTrash} className={styles.iconDelete}\r\n        onClick={() => onViewPost(postTitle, postBody, id, 'DELETE', 'Are you sure you want to delete this post?')} />\r\n\r\n    return (\r\n        <div className={styles.blockInfo\r\n            + ' ' + (backgroundColor == 1 && styles.backgroundRed)\r\n            + ' ' + (backgroundColor == 2 && styles.backgroundGreen)\r\n            + ' ' + (backgroundColor == 3 && styles.backgroundBlue)\r\n            + ' ' + (cardSizeBig && styles.blockInfoBigCard)}>\r\n            <div className={styles.blockInfo_container}>\r\n                <div className={styles.blockInfo_wrapper}>\r\n                    <div className={styles.blockInfo_tittleWrapper}>\r\n                        <h3 className={styles.blockInfo_tittle}>{postTitle}</h3>\r\n                        <div className={styles.blockInfo_tittleChangeIcon}>\r\n                            {editPost}\r\n                            {deletePost}\r\n                        </div>\r\n                    </div>\r\n                    <p className={styles.blockInfo_info}>{postBody}</p>\r\n                </div>\r\n                <div className={styles.blockInfo_datePublisher}>\r\n                    <p>\r\n                        {datePublisher.time} {datePublisher.edit && <span>Edit</span>}\r\n                    </p>\r\n                    <p>\r\n                        {datePublisher.date}\r\n                    </p>\r\n                </div>\r\n                <div className={styles.blockInfo_navigation}>\r\n                    <button onClick={() => onViewPost(postTitle, postBody, id, 'VIEW')}>More...</button>\r\n                    <button onClick={onSetBackgroundColor}>Colors</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Photos\\PhotoGallery\\BigPhoto\\BigPhoto.jsx",["317","318","319","320"],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Users\\UsersModalWindow\\UsersModalWindow.jsx",["321"],"import { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, { useState } from 'react'\r\nimport { reduxForm } from 'redux-form'\r\nimport EditUserModal from './EditUserModal'\r\nimport styles from './UsersModalWindow.module.css'\r\n\r\nconst UsersModalWindow = (props) => {\r\n\r\n    let infoUserObj = {\r\n        id: props.id,\r\n        name: props.name,\r\n        username: props.userName,\r\n        email: props.email,\r\n        website: props.site,\r\n        phone: props.phone,\r\n    }\r\n\r\n    const deletePost = <FontAwesomeIcon icon={faTimes} className={styles.iconDelete} onClick={()=> {props.setEditMode(false)}} />\r\n\r\n    const onSubmit = (values) => {\r\n        props.editUsers(values)\r\n        props.setEditMode(false)\r\n    }\r\n\r\n    const UserEditForm = reduxForm({\r\n        form: 'UserEditForm'\r\n    }) (EditUserModal)\r\n\r\n    return (\r\n        <div className={styles.viewModal}>\r\n            <div className={styles.viewModal_wrapper}>\r\n                {deletePost}\r\n                <UserEditForm initialValues={infoUserObj} onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersModalWindow","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Posts\\PostsModalWindow\\PostsModalWindow.jsx",["322","323","324","325"],"import { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React from 'react'\r\nimport { reduxForm } from 'redux-form'\r\nimport AddPostModal from './AddPostModal'\r\nimport EditPostModal from './EditPostModal'\r\nimport styles from './PostsModalWindow.module.css'\r\n\r\nconst PostsModalWindow = ({ viewPost, onCloseViewPost, deletPost, editPost, addPost }) => {\r\n    const deletePost = <FontAwesomeIcon icon={faTimes} className={styles.iconDelete} onClick={onCloseViewPost} />\r\n\r\n    const EditPostForm = reduxForm({\r\n        form: 'EditPostForm'\r\n    })(EditPostModal);\r\n\r\n    const AddPostForm = reduxForm({\r\n        form: 'AddPostForm'\r\n    })(AddPostModal);\r\n\r\n    const onDeletePost = () => {\r\n        deletPost(viewPost.postId);\r\n        onCloseViewPost();\r\n    }\r\n\r\n    const onSubmitEditPost = (formData) => {\r\n        console.log(formData)\r\n        editPost(viewPost.postId, formData.title, formData.body);\r\n        onCloseViewPost();\r\n    }\r\n    const onSubmitAddPost = (formData) => {\r\n        addPost(formData.title, formData.body)\r\n        onCloseViewPost();\r\n    }\r\n\r\n    return (\r\n        <div className={viewPost.show ? styles.viewModal : styles.hide}>\r\n            <div className={styles.viewModal_wrapper}>\r\n                {viewPost.trigger == 'VIEW' && <div>\r\n                    {deletePost}\r\n                    <h3>{viewPost.title}</h3>\r\n                    <p>{viewPost.body}</p>\r\n                </div>}\r\n                {viewPost.trigger == 'DELETE' &&\r\n                    <div>\r\n                        <h3>{viewPost.messages}</h3>\r\n                        <div>\r\n                            <h3>{viewPost.title}</h3>\r\n                            <p>{viewPost.body}</p>\r\n                        </div>\r\n                        <div className={styles.viewModal_navigation}>\r\n                            <button className={styles.viewModal_button} onClick={onDeletePost}>Yes</button>\r\n                            <button className={styles.viewModal_button} onClick={onCloseViewPost}>No</button>\r\n                        </div>\r\n                    </div>}\r\n                {viewPost.trigger == 'EDIT' &&\r\n                    <EditPostForm initialValues={{title: viewPost.title, body: viewPost.body}} onSubmit={onSubmitEditPost} onCloseViewPost={onCloseViewPost} />}\r\n                {viewPost.trigger == 'ADD' &&\r\n                    <AddPostForm onSubmit={onSubmitAddPost} onCloseViewPost={onCloseViewPost}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostsModalWindow","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Posts\\PostsModalWindow\\EditPostModal.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Posts\\PostsModalWindow\\AddPostModal.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Users\\UsersModalWindow\\EditUserModal.jsx",["326","327"],"\r\nimport React, { useState } from 'react'\r\nimport { Field } from 'redux-form'\r\nimport styles from './UsersModalWindow.module.css'\r\nimport { InputField } from '../../../common/forms/formsControl'\r\nimport { required, email, phoneNumber, maxLength20, maxLength25 } from '../../../fieldLevelValidation/validation'\r\n\r\nconst EditUserModal = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <h3 className={styles.tittle}>Edit profile</h3>\r\n            <div className={styles.editItem}>\r\n                <p>User Name:</p>\r\n                <div className={styles.wrapperInput}>\r\n                    <Field className={styles.input} name='username' component={InputField} validate={[required, maxLength20]} />\r\n                </div>\r\n            </div>\r\n            <div className={styles.editItem}>\r\n                <p>Name:</p>\r\n                <div className={styles.wrapperInput}>\r\n                    <Field className={styles.input} name='name' component={InputField} validate={[required, maxLength20]} />\r\n                </div>\r\n            </div>\r\n            <div className={styles.editItem}>\r\n                <p>Email:</p>\r\n                <div className={styles.wrapperInput}>\r\n                    <Field className={styles.input} name='email' component={InputField} validate={[required, email, maxLength20]} />\r\n                </div>\r\n            </div>\r\n            <div className={styles.editItem}>\r\n                <p>Website:</p>\r\n                <div className={styles.wrapperInput}>\r\n                    <Field className={styles.input} name='website' component={InputField} validate={[required, maxLength20]} />\r\n                </div>\r\n            </div>\r\n            <div className={styles.editItem}>\r\n                <p>Phone:</p>\r\n                <div className={styles.wrapperInput}>\r\n                    <Field className={styles.input} name='phone' component={InputField} validate={[required, phoneNumber]} />\r\n                </div>\r\n            </div>\r\n            <div className={styles.submit_wrapper}>\r\n                <button className={styles.submit} disabled={!props.valid} >Save</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EditUserModal","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\common\\forms\\formsControl.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\react-practice\\src\\components\\Request\\Photos\\PhotoGallery\\BigPhoto\\ModalWindowPhoto.jsx",["328","329","330"],{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","severity":1,"message":"336","line":17,"column":17,"nodeType":"337","messageId":"338","endLine":17,"endColumn":20},{"ruleId":"339","severity":1,"message":"340","line":18,"column":36,"nodeType":"341","messageId":"342","endLine":18,"endColumn":38},{"ruleId":"339","severity":1,"message":"340","line":19,"column":33,"nodeType":"341","messageId":"342","endLine":19,"endColumn":35},{"ruleId":"339","severity":1,"message":"340","line":21,"column":36,"nodeType":"341","messageId":"342","endLine":21,"endColumn":38},{"ruleId":"339","severity":1,"message":"340","line":22,"column":33,"nodeType":"341","messageId":"342","endLine":22,"endColumn":35},{"ruleId":"339","severity":1,"message":"340","line":18,"column":31,"nodeType":"341","messageId":"342","endLine":18,"endColumn":33},{"ruleId":"339","severity":1,"message":"340","line":21,"column":33,"nodeType":"341","messageId":"342","endLine":21,"endColumn":35},{"ruleId":"335","severity":1,"message":"343","line":1,"column":10,"nodeType":"337","messageId":"338","endLine":1,"endColumn":13},{"ruleId":"344","severity":1,"message":"345","line":24,"column":19,"nodeType":"346","messageId":"347","endLine":26,"endColumn":12},{"ruleId":"348","severity":1,"message":"349","line":24,"column":24,"nodeType":"346","messageId":"350","endLine":24,"endColumn":26},{"ruleId":"339","severity":1,"message":"340","line":25,"column":30,"nodeType":"341","messageId":"342","endLine":25,"endColumn":32},{"ruleId":"339","severity":1,"message":"340","line":40,"column":24,"nodeType":"341","messageId":"342","endLine":40,"endColumn":26},{"ruleId":"335","severity":1,"message":"351","line":68,"column":11,"nodeType":"337","messageId":"338","endLine":68,"endColumn":19},{"ruleId":"339","severity":1,"message":"340","line":43,"column":29,"nodeType":"341","messageId":"342","endLine":43,"endColumn":31},{"ruleId":"339","severity":1,"message":"340","line":57,"column":29,"nodeType":"341","messageId":"342","endLine":57,"endColumn":31},{"ruleId":"339","severity":1,"message":"340","line":51,"column":29,"nodeType":"341","messageId":"342","endLine":51,"endColumn":31},{"ruleId":"348","severity":1,"message":"352","line":52,"column":48,"nodeType":"346","messageId":"353","endLine":52,"endColumn":50},{"ruleId":"339","severity":1,"message":"340","line":53,"column":43,"nodeType":"341","messageId":"342","endLine":53,"endColumn":45},{"ruleId":"335","severity":1,"message":"343","line":1,"column":10,"nodeType":"337","messageId":"338","endLine":1,"endColumn":13},{"ruleId":"335","severity":1,"message":"354","line":3,"column":10,"nodeType":"337","messageId":"338","endLine":3,"endColumn":17},{"ruleId":"348","severity":1,"message":"349","line":48,"column":55,"nodeType":"346","messageId":"350","endLine":48,"endColumn":57},{"ruleId":"339","severity":1,"message":"340","line":58,"column":21,"nodeType":"341","messageId":"342","endLine":58,"endColumn":23},{"ruleId":"335","severity":1,"message":"355","line":1,"column":10,"nodeType":"337","messageId":"338","endLine":1,"endColumn":24},{"ruleId":"339","severity":1,"message":"340","line":28,"column":29,"nodeType":"341","messageId":"342","endLine":28,"endColumn":31},{"ruleId":"339","severity":1,"message":"340","line":19,"column":44,"nodeType":"341","messageId":"342","endLine":19,"endColumn":46},{"ruleId":"339","severity":1,"message":"340","line":19,"column":76,"nodeType":"341","messageId":"342","endLine":19,"endColumn":78},{"ruleId":"356","severity":1,"message":"357","line":27,"column":8,"nodeType":"358","endLine":27,"endColumn":10,"suggestions":"359"},{"ruleId":"339","severity":1,"message":"340","line":42,"column":35,"nodeType":"341","messageId":"342","endLine":42,"endColumn":37},{"ruleId":"335","severity":1,"message":"360","line":1,"column":10,"nodeType":"337","messageId":"338","endLine":1,"endColumn":23},{"ruleId":"335","severity":1,"message":"361","line":1,"column":25,"nodeType":"337","messageId":"338","endLine":1,"endColumn":36},{"ruleId":"335","severity":1,"message":"362","line":2,"column":10,"nodeType":"337","messageId":"338","endLine":2,"endColumn":25},{"ruleId":"335","severity":1,"message":"363","line":3,"column":17,"nodeType":"337","messageId":"338","endLine":3,"endColumn":25},{"ruleId":"339","severity":1,"message":"340","line":47,"column":46,"nodeType":"341","messageId":"342","endLine":47,"endColumn":48},{"ruleId":"339","severity":1,"message":"340","line":48,"column":46,"nodeType":"341","messageId":"342","endLine":48,"endColumn":48},{"ruleId":"339","severity":1,"message":"340","line":49,"column":46,"nodeType":"341","messageId":"342","endLine":49,"endColumn":48},{"ruleId":"339","severity":1,"message":"340","line":62,"column":45,"nodeType":"341","messageId":"342","endLine":62,"endColumn":47},{"ruleId":"339","severity":1,"message":"340","line":63,"column":45,"nodeType":"341","messageId":"342","endLine":63,"endColumn":47},{"ruleId":"339","severity":1,"message":"340","line":64,"column":45,"nodeType":"341","messageId":"342","endLine":64,"endColumn":47},{"ruleId":"335","severity":1,"message":"364","line":10,"column":28,"nodeType":"337","messageId":"338","endLine":10,"endColumn":45},{"ruleId":"348","severity":1,"message":"349","line":8,"column":60,"nodeType":"346","messageId":"350","endLine":8,"endColumn":62},{"ruleId":"348","severity":1,"message":"365","line":9,"column":44,"nodeType":"346","messageId":"350","endLine":9,"endColumn":46},{"ruleId":"339","severity":1,"message":"340","line":23,"column":51,"nodeType":"341","messageId":"342","endLine":23,"endColumn":53},{"ruleId":"335","severity":1,"message":"363","line":1,"column":17,"nodeType":"337","messageId":"338","endLine":1,"endColumn":25},{"ruleId":"366","severity":1,"message":"367","line":26,"column":45,"nodeType":"368","endLine":26,"endColumn":68},{"ruleId":"348","severity":1,"message":"365","line":57,"column":49,"nodeType":"346","messageId":"350","endLine":57,"endColumn":51},{"ruleId":"339","severity":1,"message":"340","line":76,"column":57,"nodeType":"341","messageId":"342","endLine":76,"endColumn":59},{"ruleId":"356","severity":1,"message":"369","line":44,"column":8,"nodeType":"358","endLine":44,"endColumn":22,"suggestions":"370"},{"ruleId":"356","severity":1,"message":"369","line":48,"column":8,"nodeType":"358","endLine":48,"endColumn":22,"suggestions":"371"},{"ruleId":"344","severity":1,"message":"372","line":56,"column":27,"nodeType":"346","messageId":"347","endLine":65,"endColumn":18},{"ruleId":"348","severity":1,"message":"365","line":56,"column":32,"nodeType":"346","messageId":"350","endLine":56,"endColumn":34},{"ruleId":"339","severity":1,"message":"340","line":57,"column":34,"nodeType":"341","messageId":"342","endLine":57,"endColumn":36},{"ruleId":"339","severity":1,"message":"340","line":57,"column":59,"nodeType":"341","messageId":"342","endLine":57,"endColumn":61},{"ruleId":"339","severity":1,"message":"340","line":57,"column":83,"nodeType":"341","messageId":"342","endLine":57,"endColumn":85},{"ruleId":"348","severity":1,"message":"352","line":62,"column":25,"nodeType":"373","messageId":"374","endLine":62,"endColumn":31},{"ruleId":"339","severity":1,"message":"340","line":64,"column":67,"nodeType":"341","messageId":"342","endLine":64,"endColumn":69},{"ruleId":"339","severity":1,"message":"340","line":96,"column":25,"nodeType":"341","messageId":"342","endLine":96,"endColumn":27},{"ruleId":"339","severity":1,"message":"340","line":96,"column":41,"nodeType":"341","messageId":"342","endLine":96,"endColumn":43},{"ruleId":"339","severity":1,"message":"340","line":108,"column":57,"nodeType":"341","messageId":"342","endLine":108,"endColumn":59},{"ruleId":"339","severity":1,"message":"340","line":119,"column":29,"nodeType":"341","messageId":"342","endLine":119,"endColumn":31},{"ruleId":"339","severity":1,"message":"340","line":119,"column":54,"nodeType":"341","messageId":"342","endLine":119,"endColumn":56},{"ruleId":"339","severity":1,"message":"340","line":119,"column":78,"nodeType":"341","messageId":"342","endLine":119,"endColumn":80},{"ruleId":"339","severity":1,"message":"340","line":139,"column":33,"nodeType":"341","messageId":"342","endLine":139,"endColumn":35},{"ruleId":"339","severity":1,"message":"340","line":139,"column":58,"nodeType":"341","messageId":"342","endLine":139,"endColumn":60},{"ruleId":"339","severity":1,"message":"340","line":139,"column":82,"nodeType":"341","messageId":"342","endLine":139,"endColumn":84},{"ruleId":"339","severity":1,"message":"340","line":150,"column":46,"nodeType":"341","messageId":"342","endLine":150,"endColumn":48},{"ruleId":"339","severity":1,"message":"340","line":189,"column":101,"nodeType":"341","messageId":"342","endLine":189,"endColumn":103},{"ruleId":"339","severity":1,"message":"340","line":190,"column":101,"nodeType":"341","messageId":"342","endLine":190,"endColumn":103},{"ruleId":"339","severity":1,"message":"340","line":191,"column":101,"nodeType":"341","messageId":"342","endLine":191,"endColumn":103},{"ruleId":"339","severity":1,"message":"340","line":194,"column":99,"nodeType":"341","messageId":"342","endLine":194,"endColumn":101},{"ruleId":"339","severity":1,"message":"340","line":195,"column":99,"nodeType":"341","messageId":"342","endLine":195,"endColumn":101},{"ruleId":"339","severity":1,"message":"340","line":196,"column":99,"nodeType":"341","messageId":"342","endLine":196,"endColumn":101},{"ruleId":"339","severity":1,"message":"340","line":199,"column":104,"nodeType":"341","messageId":"342","endLine":199,"endColumn":106},{"ruleId":"339","severity":1,"message":"340","line":200,"column":105,"nodeType":"341","messageId":"342","endLine":200,"endColumn":107},{"ruleId":"339","severity":1,"message":"340","line":207,"column":94,"nodeType":"341","messageId":"342","endLine":207,"endColumn":96},{"ruleId":"339","severity":1,"message":"340","line":207,"column":130,"nodeType":"341","messageId":"342","endLine":207,"endColumn":132},{"ruleId":"339","severity":1,"message":"340","line":208,"column":71,"nodeType":"341","messageId":"342","endLine":208,"endColumn":73},{"ruleId":"339","severity":1,"message":"340","line":208,"column":125,"nodeType":"341","messageId":"342","endLine":208,"endColumn":127},{"ruleId":"339","severity":1,"message":"340","line":6,"column":16,"nodeType":"341","messageId":"342","endLine":6,"endColumn":18},{"ruleId":"335","severity":1,"message":"363","line":1,"column":17,"nodeType":"337","messageId":"338","endLine":1,"endColumn":25},{"ruleId":"339","severity":1,"message":"340","line":20,"column":94,"nodeType":"341","messageId":"342","endLine":20,"endColumn":96},{"ruleId":"339","severity":1,"message":"340","line":23,"column":51,"nodeType":"341","messageId":"342","endLine":23,"endColumn":53},{"ruleId":"339","severity":1,"message":"340","line":26,"column":48,"nodeType":"341","messageId":"342","endLine":26,"endColumn":50},{"ruleId":"339","severity":1,"message":"340","line":26,"column":125,"nodeType":"341","messageId":"342","endLine":26,"endColumn":127},{"ruleId":"339","severity":1,"message":"340","line":30,"column":45,"nodeType":"341","messageId":"342","endLine":30,"endColumn":47},{"ruleId":"339","severity":1,"message":"340","line":18,"column":20,"nodeType":"341","messageId":"342","endLine":18,"endColumn":22},{"ruleId":"339","severity":1,"message":"340","line":18,"column":41,"nodeType":"341","messageId":"342","endLine":18,"endColumn":43},{"ruleId":"339","severity":1,"message":"340","line":21,"column":20,"nodeType":"341","messageId":"342","endLine":21,"endColumn":22},{"ruleId":"339","severity":1,"message":"340","line":21,"column":41,"nodeType":"341","messageId":"342","endLine":21,"endColumn":43},{"ruleId":"339","severity":1,"message":"340","line":25,"column":26,"nodeType":"341","messageId":"342","endLine":25,"endColumn":28},{"ruleId":"339","severity":1,"message":"340","line":25,"column":43,"nodeType":"341","messageId":"342","endLine":25,"endColumn":45},{"ruleId":"339","severity":1,"message":"340","line":26,"column":19,"nodeType":"341","messageId":"342","endLine":26,"endColumn":21},{"ruleId":"339","severity":1,"message":"340","line":27,"column":21,"nodeType":"341","messageId":"342","endLine":27,"endColumn":23},{"ruleId":"339","severity":1,"message":"340","line":28,"column":21,"nodeType":"341","messageId":"342","endLine":28,"endColumn":23},{"ruleId":"339","severity":1,"message":"340","line":10,"column":60,"nodeType":"341","messageId":"342","endLine":10,"endColumn":62},{"ruleId":"339","severity":1,"message":"340","line":19,"column":54,"nodeType":"341","messageId":"342","endLine":19,"endColumn":56},{"ruleId":"339","severity":1,"message":"340","line":36,"column":36,"nodeType":"341","messageId":"342","endLine":36,"endColumn":38},{"ruleId":"339","severity":1,"message":"340","line":41,"column":125,"nodeType":"341","messageId":"342","endLine":41,"endColumn":127},{"ruleId":"339","severity":1,"message":"340","line":43,"column":37,"nodeType":"341","messageId":"342","endLine":43,"endColumn":39},{"ruleId":"335","severity":1,"message":"375","line":7,"column":10,"nodeType":"337","messageId":"338","endLine":7,"endColumn":16},{"ruleId":"335","severity":1,"message":"376","line":1,"column":17,"nodeType":"337","messageId":"338","endLine":1,"endColumn":26},{"ruleId":"348","severity":1,"message":"349","line":7,"column":31,"nodeType":"346","messageId":"350","endLine":7,"endColumn":33},{"ruleId":"339","severity":1,"message":"340","line":12,"column":29,"nodeType":"341","messageId":"342","endLine":12,"endColumn":31},{"ruleId":"339","severity":1,"message":"340","line":22,"column":38,"nodeType":"341","messageId":"342","endLine":22,"endColumn":40},{"ruleId":"339","severity":1,"message":"340","line":23,"column":38,"nodeType":"341","messageId":"342","endLine":23,"endColumn":40},{"ruleId":"339","severity":1,"message":"340","line":24,"column":38,"nodeType":"341","messageId":"342","endLine":24,"endColumn":40},{"ruleId":"339","severity":1,"message":"340","line":13,"column":55,"nodeType":"341","messageId":"342","endLine":13,"endColumn":57},{"ruleId":"339","severity":1,"message":"340","line":15,"column":22,"nodeType":"341","messageId":"342","endLine":15,"endColumn":24},{"ruleId":"339","severity":1,"message":"340","line":17,"column":23,"nodeType":"341","messageId":"342","endLine":17,"endColumn":25},{"ruleId":"339","severity":1,"message":"340","line":17,"column":41,"nodeType":"341","messageId":"342","endLine":17,"endColumn":43},{"ruleId":"335","severity":1,"message":"363","line":3,"column":17,"nodeType":"337","messageId":"338","endLine":3,"endColumn":25},{"ruleId":"339","severity":1,"message":"340","line":38,"column":35,"nodeType":"341","messageId":"342","endLine":38,"endColumn":37},{"ruleId":"339","severity":1,"message":"340","line":43,"column":35,"nodeType":"341","messageId":"342","endLine":43,"endColumn":37},{"ruleId":"339","severity":1,"message":"340","line":55,"column":35,"nodeType":"341","messageId":"342","endLine":55,"endColumn":37},{"ruleId":"339","severity":1,"message":"340","line":57,"column":35,"nodeType":"341","messageId":"342","endLine":57,"endColumn":37},{"ruleId":"335","severity":1,"message":"363","line":2,"column":17,"nodeType":"337","messageId":"338","endLine":2,"endColumn":25},{"ruleId":"335","severity":1,"message":"377","line":6,"column":53,"nodeType":"337","messageId":"338","endLine":6,"endColumn":64},{"ruleId":"335","severity":1,"message":"378","line":1,"column":8,"nodeType":"337","messageId":"338","endLine":1,"endColumn":13},{"ruleId":"339","severity":1,"message":"340","line":40,"column":32,"nodeType":"341","messageId":"342","endLine":40,"endColumn":34},{"ruleId":"339","severity":1,"message":"340","line":41,"column":32,"nodeType":"341","messageId":"342","endLine":41,"endColumn":34},"no-native-reassign",["379"],"no-negated-in-lhs",["380"],"no-unused-vars","'arr' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'act' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'counter'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'response' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'compose' is defined but never used.","'apiGetUserInfo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["381"],"'faCheckCircle' is defined but never used.","'faPencilAlt' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'useState' is defined but never used.","'setSliderSettings' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'victoryCheck'. Either include it or remove the dependency array.",["382"],["383"],"Function declared in a loop contains unsafe references to variable(s) 'whileValue', 'whileValue'.","ReturnStatement","expectedReturnValue","'faEdit' is defined but never used.","'useEffect' is defined but never used.","'maxLength25' is defined but never used.","'react' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},"Update the dependencies array to be: [props]",{"range":"390","text":"391"},"Update the dependencies array to be: [combinationX, victoryCheck]",{"range":"392","text":"393"},"Update the dependencies array to be: [combinationO, victoryCheck]",{"range":"394","text":"395"},[1104,1106],"[props]",[2161,2175],"[combinationX, victoryCheck]",[2264,2278],"[combinationO, victoryCheck]"]
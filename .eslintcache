[{"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\index.js":"1","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\reportWebVitals.js":"2","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\App.js":"3","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\store.js":"4","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\staffReducer.js":"5","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\toDoListReducer.js":"6","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Header\\Header.jsx":"7","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDiListContainer.jsx":"8","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\PracticeContainer.jsx":"9","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDoList.jsx":"10","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Staff\\Staff.jsx":"11","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\fieldLevelValidation\\validation.js":"12","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\task\\Task.jsx":"13","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Staff\\Collaborator\\Collaborator.jsx":"14","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Test\\Test.jsx":"15","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\testReducer.js":"16","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Test\\Question\\Question.jsx":"17","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\TestTwo\\TestTwo.jsx":"18","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\TestTwo\\QuestionTwo\\QuestionTwo.jsx":"19","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\testTwoReducer.js":"20","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\TicTacToe\\TikTakToeContainer.jsx":"21","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\TicTacToe\\TicTac\\TicTacToe.jsx":"22","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\TicTacToe\\TicTacToe_Counter\\Counter.jsx":"23"},{"size":792,"mtime":1610347274195,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1607330653219,"results":"26","hashOfConfig":"25"},{"size":841,"mtime":1611216291183,"results":"27","hashOfConfig":"25"},{"size":541,"mtime":1610528504703,"results":"28","hashOfConfig":"25"},{"size":1095,"mtime":1610434624632,"results":"29","hashOfConfig":"25"},{"size":3262,"mtime":1610347274155,"results":"30","hashOfConfig":"25"},{"size":762,"mtime":1611214358018,"results":"31","hashOfConfig":"25"},{"size":894,"mtime":1610347274165,"results":"32","hashOfConfig":"25"},{"size":1374,"mtime":1611212057936,"results":"33","hashOfConfig":"25"},{"size":3615,"mtime":1612186075627,"results":"34","hashOfConfig":"25"},{"size":1506,"mtime":1610374532585,"results":"35","hashOfConfig":"25"},{"size":532,"mtime":1610347274165,"results":"36","hashOfConfig":"25"},{"size":3331,"mtime":1610347274175,"results":"37","hashOfConfig":"25"},{"size":2199,"mtime":1610435923182,"results":"38","hashOfConfig":"25"},{"size":1089,"mtime":1610460736142,"results":"39","hashOfConfig":"25"},{"size":1491,"mtime":1610530104868,"results":"40","hashOfConfig":"25"},{"size":2251,"mtime":1610533060249,"results":"41","hashOfConfig":"25"},{"size":2533,"mtime":1611213970405,"results":"42","hashOfConfig":"25"},{"size":1941,"mtime":1611211969902,"results":"43","hashOfConfig":"25"},{"size":5429,"mtime":1611213442111,"results":"44","hashOfConfig":"25"},{"size":173,"mtime":1611216352877,"results":"45","hashOfConfig":"25"},{"size":10822,"mtime":1612446515239,"results":"46","hashOfConfig":"25"},{"size":773,"mtime":1612354443890,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1y3b5hp",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\index.js",[],["106","107"],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\reportWebVitals.js",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\App.js",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\store.js",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\staffReducer.js",["108","109","110","111"],"const EDIT_VALUE = 'EDIT_VALUE';\r\n\r\n\r\nexport const editValueAC = (id, value, trigger) => ({ type: EDIT_VALUE, id, value, trigger });\r\n\r\n\r\nlet initialState = {\r\n    staffList: [{ id: '1', name: 'Андрей', daysWorked: 2, rate: 1000 },\r\n    { id: '2', name: 'Кирилл', daysWorked: 3, rate: 1100 }]\r\n}\r\n\r\nconst staffReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n\r\n    switch (action.type) {\r\n        case EDIT_VALUE:\r\n            let arr = state.staffList.map(item => {\r\n                if (action.trigger == 'DAYS') {\r\n                    if (item.id == action.id) item.daysWorked = action.value\r\n                }\r\n                if (action.trigger == 'RATE') {\r\n                    if (item.id == action.id) item.rate = action.value\r\n                }\r\n                return item\r\n            })\r\n            console.log(arr)\r\n            stateCopy = {\r\n                ...state,\r\n                staffList: [...state.staffList],\r\n            }\r\n            return stateCopy;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default staffReducer","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\toDoListReducer.js",["112","113"],"const ADD_NEW_TASK = 'ADD_NEW_TASK';\r\nconst STAGE_OF_DONE = 'STAGE_OF_DONE';\r\nconst EDIT_TEXT_TASK = 'EDIT_TEXT_TASK';\r\nconst DELETE_TASK = 'DELETE_TASK';\r\n\r\nexport const addTaskAC = (task) => ({ type: ADD_NEW_TASK, task });\r\nexport const stageOfDoneAC = (idTask) => ({ type: STAGE_OF_DONE, idTask });\r\nexport const editTextTaskAC = (idTask, textTask) => ({ type: EDIT_TEXT_TASK, idTask, textTask })\r\nexport const deleteTaskAC = (idTask) => ({ type: DELETE_TASK, idTask });\r\n\r\nlet localBaseTask = JSON.parse(localStorage.getItem('taskList')) || []\r\n\r\nlet initialState = {\r\n    taskList: [...localBaseTask]\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    let date = new Date();\r\n\r\n    let getDate = (date.getDate() < 10) ? '0' + date.getDate(): date.getDate();\r\n    let getMonth = (date.getMonth() < 10) ? '0' + (date.getMonth() + 1): date.getMonth() + 1;\r\n    let createDate = `${getDate}.${getMonth}.${date.getFullYear()}`\r\n\r\n    let getHours = (date.getHours() < 10) ? '0' + date.getHours(): date.getHours();\r\n    let getMinutes = (date.getMinutes() < 10) ? '0' + date.getMinutes(): date.getMinutes();\r\n    let createTime = `${getHours}:${getMinutes}`;\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_TASK:\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...state.taskList]\r\n            }\r\n            const idTask = `f${(~~(Math.random() * 1e8)).toString(16)}`;\r\n            stateCopy.taskList.unshift({ id: idTask, text: action.task, done: false, createDateTask: {date: createDate, time: createTime}});\r\n\r\n            localStorage.setItem('taskList', JSON.stringify(stateCopy.taskList))\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n        case STAGE_OF_DONE:\r\n            let arr = state.taskList.map((item) => {\r\n                if (item.id == action.idTask) {\r\n                    item.done = !item.done\r\n                }\r\n                return item\r\n            })\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arr]\r\n            }\r\n            localStorage.setItem('taskList', JSON.stringify(arr))\r\n            return stateCopy;\r\n        case EDIT_TEXT_TASK:\r\n\r\n            let arrEditText = state.taskList.map((item) => {\r\n                if (item.id == action.idTask) {\r\n                    item.text = action.textTask;\r\n                    item.createDateTask.time = `ред. ${createTime}`;\r\n                    item.createDateTask.date = createDate;\r\n                }\r\n                return item\r\n            })\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arrEditText]\r\n            }\r\n            localStorage.setItem('taskList', JSON.stringify(arrEditText))\r\n            return stateCopy;\r\n        case DELETE_TASK:\r\n            let arrfilter = state.taskList.filter((item) => {\r\n                return (item.id !== action.idTask) ? true : false\r\n            });\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arrfilter]\r\n            }\r\n\r\n            localStorage.setItem('taskList', JSON.stringify(arrfilter))\r\n\r\n            return stateCopy;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default appReducer","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDiListContainer.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\PracticeContainer.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDoList.jsx",["114","115","116","117","118","119"],"import React, { useState } from 'react'\r\nimport styles from './ToDoList.module.css'\r\nimport Task from './task/Task'\r\nimport { Field } from 'redux-form'\r\nimport { required } from '../fieldLevelValidation/validation';\r\n\r\nexport const renderField = ({ input, type, meta: { submitFailed, error, warning },} ) => {\r\n    return (\r\n        <div className={styles.inputForm_container}>\r\n            <div>\r\n                <textarea {...input} type={type} className={styles.inputForm} placeholder='Напишите новую задачу' />\r\n            </div>\r\n            <div className={styles.inputForm_error}>\r\n                {submitFailed && ((error && <span >{error}</span>) ||\r\n                    (warning && <span className={styles.inputForm_error}>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ToDoList = (props) => {\r\n    const [filterMode, setFilterMode] = useState(1);\r\n    const [inProp, setInProp] = useState(true);\r\n\r\n    let changeFilter = (filterNumber) => {\r\n        setFilterMode(filterNumber);\r\n        setInProp(!inProp);\r\n    }\r\n\r\n    let undoneTask = props.taskList.filter(item => !item.done)\r\n    let doneTask = props.taskList.filter(item => item.done)\r\n    let allTask = undoneTask.concat(doneTask)\r\n    let resultAllTask = allTask.map((item) => {\r\n        return <Task key={item.id} text={item.text} done={item.done} edit={item.edit}\r\n            stageOfDone={props.stageOfDone} id={item.id}\r\n            deleteTask={props.deleteTask} editTextTask={props.editTextTask} \r\n            date={item.createDateTask.date} time={item.createDateTask.time} />\r\n    })\r\n\r\n    let resultDoneTask = resultAllTask.filter((item) => item.props.done);\r\n    let resultUnDoneTask = resultAllTask.filter((item) => !item.props.done);\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.wrapper}>\r\n                <h3 className={styles.tittle}>Лист задач:</h3>\r\n                <div className={styles.filter}>\r\n                    <p className={filterMode == 1 ? styles.filter_active : ''} onClick={() => { changeFilter(1) }}>Все задачи</p>\r\n                    <p className={filterMode == 2 ? styles.filter_active : ''} onClick={() => { changeFilter(2) }} >Активные задачи</p>\r\n                    <p className={filterMode == 3 ? styles.filter_active : ''} onClick={() => { changeFilter(3) }}>Выполненные задачи</p>\r\n                </div>\r\n                <div className={styles.todolist}>\r\n                    <div className={styles.info}>\r\n                        <p className={styles.info_undone}>Активные задачи: <span>{undoneTask.length}</span> </p>\r\n                        <p className={styles.info_done}>Выполненные задачи: <span>{doneTask.length}</span> </p>\r\n                    </div>\r\n                    <form onSubmit={props.handleSubmit} className={styles.formControl}>\r\n                        <Field className={styles.input} name='newTask'\r\n                            component={renderField} validate={[required]} />\r\n                        <button className={styles.addTask}>Добавить</button>\r\n                    </form>\r\n                            <div className={styles.hhh}>\r\n                                {filterMode == 1 ? resultAllTask : ''}\r\n                                {filterMode == 2 ? resultUnDoneTask : ''}\r\n                                {filterMode == 3 ? resultDoneTask : ''}\r\n                            </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ToDoList","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Staff\\Staff.jsx",["120","121","122","123"],"import { faCheckCircle, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react'\r\nimport Collaborator from './Collaborator/Collaborator';\r\nimport styles from './Staff.module.css'\r\n\r\n\r\nconst Staff = ({staffList, ...props}) => {\r\n    let allSalary = 0;\r\n    let staffListArr = staffList.map((item) => {\r\n        allSalary += item.daysWorked * item.rate\r\n        return <Collaborator key={item.id} id={item.id} name={item.name} daysWorked={item.daysWorked} rate={item.rate} editValue={props.editValue}/>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h3>Задание № 1 (Посчет ЗП работников)</h3>\r\n            <div className={styles.contaiter}>\r\n                <table >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Имя</th>\r\n                            <th>Кол-во Дней</th>\r\n                            <th>Ставка</th>\r\n                            <th>Зарплата</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {staffListArr}\r\n                        <tr>\r\n                            <th>Общая зп</th>\r\n                            <td colSpan='3'>{allSalary}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Staff","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\fieldLevelValidation\\validation.js",["124","125","126","127"],"import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nexport const required = value => (value || typeof value === 'number' ? undefined : 'Поле не может быть пустым')\r\n\r\nconst maxLength = max => value =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n  \r\nconst maxLength15 = maxLength(15)\r\n\r\nexport const minLength = min => value =>\r\n  value && value.length < min ? `Must be ${min} characters or more` : undefined\r\n\r\nexport const minLength2 = minLength(2)","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\task\\Task.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Staff\\Collaborator\\Collaborator.jsx",["128","129","130","131"],"import { faCheckCircle, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react'\r\nimport styles from './Collaborator.module.css'\r\n\r\n\r\nconst Collaborator = (props) => {\r\n    let [editModeDays, setEditModeDays] = useState(false);\r\n    let [editModeRate, setEditModeRate] = useState(false);\r\n\r\n    const onEditDays = () => {\r\n        setEditModeDays(!editModeDays)\r\n    }\r\n    const onEditRate = () => {\r\n        setEditModeRate(!editModeRate)\r\n    }\r\n    const onEditDaysKeyDown = (e) => {\r\n        if (e.code == 'Enter' || e.code == 'NumpadEnter') setEditModeDays(!editModeDays)\r\n    }\r\n    const onEditRateKeyDown = (e) => {\r\n        if (e.code == 'Enter' || e.code == 'NumpadEnter') setEditModeRate(!editModeRate)\r\n    }\r\n    const onChangeRate = (e) => {\r\n        props.editValue(props.id, +e.target.value || '', 'RATE')\r\n    }\r\n    const onChangeDays = (e) => {\r\n        props.editValue(props.id, +e.target.value || '', 'DAYS')\r\n    }\r\n    return (\r\n        <tr key={props.id}>\r\n            <td>{props.name}</td>\r\n            <td className={styles.days}>{!editModeDays ?\r\n                <div>{props.daysWorked} <FontAwesomeIcon icon={faPencilAlt} className={styles.edit} onClick={onEditDays} /></div> :\r\n                <div><input type='number' min='0' value={props.daysWorked} className={styles.days_input} autoFocus={true} onChange={onChangeDays} onKeyDown={onEditDaysKeyDown} />\r\n                    <FontAwesomeIcon icon={faCheckCircle} className={styles.edit} onClick={onEditDays} /></div>}</td>\r\n            <td className={styles.rate}>{!editModeRate ?\r\n                <div>{props.rate}<FontAwesomeIcon icon={faPencilAlt} className={styles.edit} onClick={onEditRate} /></div> :\r\n                <div><input type='number' min='0' value={props.rate} autoFocus={true} className={styles.rate_input} onChange={onChangeRate} onKeyDown={onEditRateKeyDown} />\r\n                    <FontAwesomeIcon icon={faCheckCircle} className={styles.edit} onClick={onEditRate} /></div>}</td>\r\n            <td>{props.daysWorked * props.rate}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Collaborator","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Test\\Test.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\testReducer.js",["132","133"],"const CHECKING_ANSWER = 'CHECKING_ANSWER'\r\n\r\nexport const ChekingAnswerAC = (id, answer) => ({ type: CHECKING_ANSWER, id, answer })\r\n\r\nlet initialState = {\r\n    questions: [{ id: 1, question: 'Чем меньше воды, тем больше глубина. Что это?', answer: 'литература', answerUser: '' },\r\n    { id: 2, question: 'Накормишь – живет, напоишь – умрет. О чем речь?', answer: 'огонь', answerUser: '' },\r\n    { id: 3, question: 'Вам дали, вам принадлежит. Вы не продавали, а пользуются все знакомые.', answer: 'имя', answerUser: '' }],\r\n    answersGiven: false\r\n}\r\n\r\nconst testReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type) {\r\n        case CHECKING_ANSWER:\r\n            let testAnswersGiven;\r\n            let arr = state.questions.map(item => {\r\n                if (action.id == item.id) {\r\n                    item.answerUser = action.answer\r\n                }\r\n                item.answerUser == '' ? testAnswersGiven = false : testAnswersGiven = true;\r\n                return item\r\n            })\r\n            console.log(arr)\r\n            stateCopy = {\r\n                ...state,\r\n                questions: [...state.questions],\r\n                answersGiven: testAnswersGiven\r\n            }\r\n            return stateCopy\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default testReducer","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\Test\\Question\\Question.jsx",["134","135","136","137","138"],"import React, { useState } from 'react'\r\nimport styles from './Question.module.css'\r\n\r\nconst Question = ({ id, question, answer, answerUser, chekingAnswer, testDone }) => {\r\n\r\n    const [answerValue, setAnswerValue] = useState('');\r\n    const [error, setError] = useState(false)\r\n\r\n    const onAnswer = (e) => {\r\n        if (/^\\s+$/.test(e.target.value) || e.target.value == '') {\r\n            setError(true)\r\n        } else {\r\n            setAnswerValue(e.target.value.toLowerCase().trim())\r\n            setError(false)\r\n        }\r\n    }\r\n\r\n    const onChekingAnswer = () => {\r\n        if (/^\\s+$/.test(answerValue) || answerValue == '') {\r\n            setError(true)\r\n        } else {\r\n            chekingAnswer(id, answerValue)\r\n            setError(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.question}>\r\n                {question}\r\n            </div>\r\n\r\n            <div className={styles.navigation}>\r\n                {testDone ?\r\n                    <div>\r\n                        <p>{answer == answerUser ?\r\n                            <p className={styles.correctAnswer}>Ваш ответ: <span>{answerUser}</span> - правильно! </p> :\r\n                            <p className={styles.unCorrectAnswer}>Ваш ответ: <span>{answerUser}</span> - не верно! Верный ответ: <span>{answer}</span> </p>}</p>\r\n                    </div> :\r\n                    <div className={styles.dataInput}>\r\n                        <input type=\"text\" name=\"\" id=\"\" className={styles.answer} onChange={onAnswer} disabled={answerUser == '' ? false : true} />\r\n                        <div className={`${styles.error} ${error ? styles.showError : ''}`}> Это поле не может быть пустым </div>\r\n                        {answerUser == '' ?\r\n                            <button onClick={onChekingAnswer} className={styles.button} disabled={error ? true : false}>Ответить</button> :\r\n                            <span className={styles.recd}>Ответ принят</span>}\r\n                    </div>}\r\n                <div className={styles.border}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\TestTwo\\TestTwo.jsx",["139"],"import React, { useState } from 'react'\r\nimport Slider from 'react-slick';\r\nimport QuestionTwo from './QuestionTwo/QuestionTwo';\r\nimport styles from './TestTwo.module.css'\r\n\r\nconst TestTwo = ({ test, answersGivenTwo, selectedAnswer, correctAnswers }) => {\r\n    const [testDone, setTestDone] = useState(false)\r\n\r\n    const customeSlider = React.createRef();\r\n    const [sliderSettings, setSliderSettings] = useState({\r\n        infinite: false,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        arrows: false,\r\n    })\r\n\r\n    const gotoNext = () => {\r\n        customeSlider.current.slickNext()\r\n    }\r\n\r\n    const gotoPrev = () => {\r\n        customeSlider.current.slickPrev()\r\n    }\r\n\r\n    let questions = test.map(item => {\r\n        return <QuestionTwo key={item.id} id={item.id} question={item.question}\r\n            answer={item.answer} answerUser={item.answerUser} selectedAnswer={selectedAnswer}\r\n            testDone={testDone} gotoNext={gotoNext} />\r\n    })\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.container}>\r\n                <h3>Задание № 3 (Тест)</h3>\r\n                {!testDone ?\r\n                    <div>\r\n                        <Slider {...sliderSettings} ref={customeSlider}>\r\n                            {questions}\r\n                        </Slider>\r\n                        <div className={styles.navigation_container}>\r\n                            <button className={styles.buttonNavigation} onClick={() => gotoPrev()}>Предыдущий <br/> вопрос</button>\r\n                            <button className={styles.buttonNavigation} onClick={() => gotoNext()}>Следующий <br/> вопрос</button>\r\n                        </div>\r\n                        <div className={styles.button_container}>\r\n                            <button onClick={() => { setTestDone(!testDone) }} disabled={answersGivenTwo !== test.length}\r\n                                className={styles.button}> Сдать тест</button>\r\n                        </div>\r\n                    </div> :\r\n                    <div>\r\n                        <div className={styles.doneContainer}>\r\n                            {questions}\r\n                        </div>\r\n                        <p className={styles.doneInfo}>Колличество Ваших правильных ответов - <span>{correctAnswers}</span></p>\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestTwo","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Practice\\TestTwo\\QuestionTwo\\QuestionTwo.jsx",["140","141","142","143","144","145"],"import React, { useState } from 'react'\r\nimport styles from './QuestionTwo.module.css'\r\n\r\nconst QuestionTwo = ({ id, question, answer, answerUser, testDone, selectedAnswer, gotoNext }) => {\r\n\r\n    const onSelectedAnswer = (id, itemId) => {\r\n        selectedAnswer(id, itemId);\r\n        gotoNext();\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.question}>\r\n                {question}\r\n            </div>\r\n\r\n            <div className={styles.navigation}>\r\n                <div className={styles.answerOptions}>\r\n                    {!testDone ? answer.map(item => {\r\n                        return <button className={styles.possibleAnswer + \" \" + ((answerUser == item.possible) ? styles.possibleAnswerOk : '')}\r\n                            onClick={() => { onSelectedAnswer(id, item.id) }} disabled={answerUser}>{item.possible}</button>\r\n                    }) : answer.map(item => {\r\n                        console.log(item.possible == answerUser, item.correct)\r\n                        return <button\r\n                            className={styles.possibleAnswer + \" \" + (item.correct && styles.done_correct) + \" \" +\r\n                                (item.possible == answerUser && item.correct && styles.done_correct) + \" \" + (item.possible == answerUser && !item.correct && styles.done_unCorrect)}\r\n                            disabled={true}>\r\n                            {item.possible}\r\n                            {item.correct && <p className={styles.done_info} >Верный ответ</p>}\r\n                            {(item.possible == answerUser && !item.correct && <p className={styles.done_info} >Вы ответили</p>)}\r\n                        </button>\r\n                    })}\r\n                </div>\r\n                {!testDone ? answerUser ? 'Ответ принят' : null : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionTwo","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\testTwoReducer.js",["146","147","148"],"const SELECTED_ANSWER = 'SELECTED_ANSWER'\r\n\r\nexport const selectedAnswerACTWO = (questionId, answerId) => ({ type: SELECTED_ANSWER, questionId, answerId })\r\n\r\nlet initialState = {\r\n    questions: \r\n    [{id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Чем меньше воды, тем больше глубина. Что это?',\r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Литература', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Впадина', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Вулкан', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Знания', correct: false }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Накормишь – живет, напоишь – умрет. О чем речь?', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Память', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Жажда', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Огонь', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Муж', correct: false }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Вам дали, вам принадлежит. Вы не продавали, а пользуются все.', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Умения', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Машина', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Щедрость', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Имя', correct: true }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Чего боятся люди, которые страдают алекторофобией?', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Cобак', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Кур', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Бороды', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Чеснок', correct: false }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Какого газа в атмосфере Земли больше всего?', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Кислород', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Угл. газ', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Азот', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Водород', correct: false }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Назовите столицу Европейского Союза?', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Вена', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Брюсель', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Кельн', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: 'Париж', correct: false }], answerUser: ''},\r\n    { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, question: 'Как далеко находится Земля от Солнца?', \r\n        answer: [{ id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: '149 000 000 км', correct: true },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: '14 900 км', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: '257 800 000 км', correct: false },\r\n        { id: `f${(~~(Math.random() * 1e8)).toString(16)}`, possible: '190 000 000 км', correct: false }], answerUser: ''}],\r\n    answersGiven: 0,\r\n    correctAnswers: 0,\r\n}\r\n\r\nconst testReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type) {\r\n        case SELECTED_ANSWER:\r\n            let arr = state.questions.map(item => {\r\n                if (item.id == action.questionId) {\r\n                    item.answer.map(answerItem =>{\r\n                        if (answerItem.id == action.answerId) {\r\n                            item.answerUser = answerItem.possible\r\n                            state.answersGiven++;\r\n                            if (answerItem.correct) state.correctAnswers++\r\n                        }\r\n                    })\r\n                    return item    \r\n                }\r\n                return item \r\n            })\r\n            console.log(state.correctAnswers)\r\n            stateCopy = {\r\n                ...state,\r\n                questions: [...arr],\r\n            }\r\n            return stateCopy\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default testReducer","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\TicTacToe\\TikTakToeContainer.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\TicTacToe\\TicTac\\TicTacToe.jsx",["149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178"],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\TicTacToe\\TicTacToe_Counter\\Counter.jsx",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":18,"column":36,"nodeType":"185","messageId":"186","endLine":18,"endColumn":38},{"ruleId":"183","severity":1,"message":"184","line":19,"column":33,"nodeType":"185","messageId":"186","endLine":19,"endColumn":35},{"ruleId":"183","severity":1,"message":"184","line":21,"column":36,"nodeType":"185","messageId":"186","endLine":21,"endColumn":38},{"ruleId":"183","severity":1,"message":"184","line":22,"column":33,"nodeType":"185","messageId":"186","endLine":22,"endColumn":35},{"ruleId":"183","severity":1,"message":"184","line":43,"column":29,"nodeType":"185","messageId":"186","endLine":43,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":57,"column":29,"nodeType":"185","messageId":"186","endLine":57,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":47,"column":46,"nodeType":"185","messageId":"186","endLine":47,"endColumn":48},{"ruleId":"183","severity":1,"message":"184","line":48,"column":46,"nodeType":"185","messageId":"186","endLine":48,"endColumn":48},{"ruleId":"183","severity":1,"message":"184","line":49,"column":46,"nodeType":"185","messageId":"186","endLine":49,"endColumn":48},{"ruleId":"183","severity":1,"message":"184","line":62,"column":45,"nodeType":"185","messageId":"186","endLine":62,"endColumn":47},{"ruleId":"183","severity":1,"message":"184","line":63,"column":45,"nodeType":"185","messageId":"186","endLine":63,"endColumn":47},{"ruleId":"183","severity":1,"message":"184","line":64,"column":45,"nodeType":"185","messageId":"186","endLine":64,"endColumn":47},{"ruleId":"187","severity":1,"message":"188","line":1,"column":10,"nodeType":"189","messageId":"190","endLine":1,"endColumn":23},{"ruleId":"187","severity":1,"message":"191","line":1,"column":25,"nodeType":"189","messageId":"190","endLine":1,"endColumn":36},{"ruleId":"187","severity":1,"message":"192","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":25},{"ruleId":"187","severity":1,"message":"193","line":3,"column":17,"nodeType":"189","messageId":"190","endLine":3,"endColumn":25},{"ruleId":"187","severity":1,"message":"194","line":1,"column":8,"nodeType":"189","messageId":"190","endLine":1,"endColumn":13},{"ruleId":"187","severity":1,"message":"195","line":2,"column":10,"nodeType":"189","messageId":"190","endLine":2,"endColumn":15},{"ruleId":"187","severity":1,"message":"196","line":2,"column":17,"nodeType":"189","messageId":"190","endLine":2,"endColumn":26},{"ruleId":"187","severity":1,"message":"197","line":9,"column":7,"nodeType":"189","messageId":"190","endLine":9,"endColumn":18},{"ruleId":"183","severity":1,"message":"184","line":18,"column":20,"nodeType":"185","messageId":"186","endLine":18,"endColumn":22},{"ruleId":"183","severity":1,"message":"184","line":18,"column":41,"nodeType":"185","messageId":"186","endLine":18,"endColumn":43},{"ruleId":"183","severity":1,"message":"184","line":21,"column":20,"nodeType":"185","messageId":"186","endLine":21,"endColumn":22},{"ruleId":"183","severity":1,"message":"184","line":21,"column":41,"nodeType":"185","messageId":"186","endLine":21,"endColumn":43},{"ruleId":"183","severity":1,"message":"184","line":18,"column":31,"nodeType":"185","messageId":"186","endLine":18,"endColumn":33},{"ruleId":"183","severity":1,"message":"184","line":21,"column":33,"nodeType":"185","messageId":"186","endLine":21,"endColumn":35},{"ruleId":"183","severity":1,"message":"184","line":10,"column":60,"nodeType":"185","messageId":"186","endLine":10,"endColumn":62},{"ruleId":"183","severity":1,"message":"184","line":19,"column":54,"nodeType":"185","messageId":"186","endLine":19,"endColumn":56},{"ruleId":"183","severity":1,"message":"184","line":36,"column":36,"nodeType":"185","messageId":"186","endLine":36,"endColumn":38},{"ruleId":"183","severity":1,"message":"184","line":41,"column":125,"nodeType":"185","messageId":"186","endLine":41,"endColumn":127},{"ruleId":"183","severity":1,"message":"184","line":43,"column":37,"nodeType":"185","messageId":"186","endLine":43,"endColumn":39},{"ruleId":"187","severity":1,"message":"198","line":10,"column":28,"nodeType":"189","messageId":"190","endLine":10,"endColumn":45},{"ruleId":"187","severity":1,"message":"193","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"184","line":20,"column":94,"nodeType":"185","messageId":"186","endLine":20,"endColumn":96},{"ruleId":"183","severity":1,"message":"184","line":23,"column":51,"nodeType":"185","messageId":"186","endLine":23,"endColumn":53},{"ruleId":"183","severity":1,"message":"184","line":26,"column":48,"nodeType":"185","messageId":"186","endLine":26,"endColumn":50},{"ruleId":"183","severity":1,"message":"184","line":26,"column":125,"nodeType":"185","messageId":"186","endLine":26,"endColumn":127},{"ruleId":"183","severity":1,"message":"184","line":30,"column":45,"nodeType":"185","messageId":"186","endLine":30,"endColumn":47},{"ruleId":"183","severity":1,"message":"184","line":51,"column":29,"nodeType":"185","messageId":"186","endLine":51,"endColumn":31},{"ruleId":"199","severity":1,"message":"200","line":52,"column":48,"nodeType":"201","messageId":"202","endLine":52,"endColumn":50},{"ruleId":"183","severity":1,"message":"184","line":53,"column":43,"nodeType":"185","messageId":"186","endLine":53,"endColumn":45},{"ruleId":"203","severity":1,"message":"204","line":44,"column":8,"nodeType":"205","endLine":44,"endColumn":22,"suggestions":"206"},{"ruleId":"203","severity":1,"message":"204","line":47,"column":8,"nodeType":"205","endLine":47,"endColumn":22,"suggestions":"207"},{"ruleId":"183","severity":1,"message":"184","line":77,"column":25,"nodeType":"185","messageId":"186","endLine":77,"endColumn":27},{"ruleId":"183","severity":1,"message":"184","line":77,"column":41,"nodeType":"185","messageId":"186","endLine":77,"endColumn":43},{"ruleId":"183","severity":1,"message":"184","line":90,"column":57,"nodeType":"185","messageId":"186","endLine":90,"endColumn":59},{"ruleId":"183","severity":1,"message":"184","line":103,"column":29,"nodeType":"185","messageId":"186","endLine":103,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":103,"column":54,"nodeType":"185","messageId":"186","endLine":103,"endColumn":56},{"ruleId":"183","severity":1,"message":"184","line":103,"column":78,"nodeType":"185","messageId":"186","endLine":103,"endColumn":80},{"ruleId":"183","severity":1,"message":"184","line":122,"column":29,"nodeType":"185","messageId":"186","endLine":122,"endColumn":31},{"ruleId":"183","severity":1,"message":"184","line":122,"column":54,"nodeType":"185","messageId":"186","endLine":122,"endColumn":56},{"ruleId":"183","severity":1,"message":"184","line":122,"column":78,"nodeType":"185","messageId":"186","endLine":122,"endColumn":80},{"ruleId":"208","severity":1,"message":"209","line":129,"column":31,"nodeType":"201","messageId":"210","endLine":137,"endColumn":22},{"ruleId":"199","severity":1,"message":"200","line":129,"column":36,"nodeType":"201","messageId":"202","endLine":129,"endColumn":38},{"ruleId":"183","severity":1,"message":"184","line":130,"column":38,"nodeType":"185","messageId":"186","endLine":130,"endColumn":40},{"ruleId":"183","severity":1,"message":"184","line":130,"column":63,"nodeType":"185","messageId":"186","endLine":130,"endColumn":65},{"ruleId":"183","severity":1,"message":"184","line":130,"column":87,"nodeType":"185","messageId":"186","endLine":130,"endColumn":89},{"ruleId":"183","severity":1,"message":"184","line":136,"column":71,"nodeType":"185","messageId":"186","endLine":136,"endColumn":73},{"ruleId":"183","severity":1,"message":"184","line":144,"column":46,"nodeType":"185","messageId":"186","endLine":144,"endColumn":48},{"ruleId":"183","severity":1,"message":"184","line":172,"column":101,"nodeType":"185","messageId":"186","endLine":172,"endColumn":103},{"ruleId":"183","severity":1,"message":"184","line":173,"column":101,"nodeType":"185","messageId":"186","endLine":173,"endColumn":103},{"ruleId":"183","severity":1,"message":"184","line":174,"column":101,"nodeType":"185","messageId":"186","endLine":174,"endColumn":103},{"ruleId":"183","severity":1,"message":"184","line":177,"column":99,"nodeType":"185","messageId":"186","endLine":177,"endColumn":101},{"ruleId":"183","severity":1,"message":"184","line":178,"column":99,"nodeType":"185","messageId":"186","endLine":178,"endColumn":101},{"ruleId":"183","severity":1,"message":"184","line":179,"column":99,"nodeType":"185","messageId":"186","endLine":179,"endColumn":101},{"ruleId":"183","severity":1,"message":"184","line":182,"column":104,"nodeType":"185","messageId":"186","endLine":182,"endColumn":106},{"ruleId":"183","severity":1,"message":"184","line":183,"column":105,"nodeType":"185","messageId":"186","endLine":183,"endColumn":107},{"ruleId":"183","severity":1,"message":"184","line":190,"column":94,"nodeType":"185","messageId":"186","endLine":190,"endColumn":96},{"ruleId":"183","severity":1,"message":"184","line":190,"column":130,"nodeType":"185","messageId":"186","endLine":190,"endColumn":132},{"ruleId":"183","severity":1,"message":"184","line":191,"column":71,"nodeType":"185","messageId":"186","endLine":191,"endColumn":73},{"ruleId":"183","severity":1,"message":"184","line":191,"column":125,"nodeType":"185","messageId":"186","endLine":191,"endColumn":127},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'faCheckCircle' is defined but never used.","Identifier","unusedVar","'faPencilAlt' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'useState' is defined but never used.","'React' is defined but never used.","'Field' is defined but never used.","'reduxForm' is defined but never used.","'maxLength15' is assigned a value but never used.","'setSliderSettings' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'victoryCheck'. Either include it or remove the dependency array.","ArrayExpression",["213"],["214"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'whileValue', 'whileValue'.","unsafeRefs","no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},"Update the dependencies array to be: [combinationX, victoryCheck]",{"range":"219","text":"220"},"Update the dependencies array to be: [combinationO, victoryCheck]",{"range":"221","text":"222"},[2071,2085],"[combinationX, victoryCheck]",[2172,2186],"[combinationO, victoryCheck]"]
[{"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\index.js":"1","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\App.js":"2","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\reportWebVitals.js":"3","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Header\\Header.jsx":"4","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDiListContainer.jsx":"5","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDoList.jsx":"6","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\task\\Task.jsx":"7","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\store.js":"8","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\fieldLevelValidation\\validation.js":"9"},{"size":656,"mtime":1608554136445,"results":"10","hashOfConfig":"11"},{"size":335,"mtime":1608027271779,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1607330653219,"results":"13","hashOfConfig":"11"},{"size":234,"mtime":1607350094799,"results":"14","hashOfConfig":"11"},{"size":923,"mtime":1608713633501,"results":"15","hashOfConfig":"11"},{"size":4372,"mtime":1608888125296,"results":"16","hashOfConfig":"11"},{"size":2670,"mtime":1608890389098,"results":"17","hashOfConfig":"11"},{"size":4092,"mtime":1608805160821,"results":"18","hashOfConfig":"11"},{"size":532,"mtime":1608813037546,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1y3b5hp",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\index.js",[],["42","43"],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\App.js",["44"],"import React from 'react'\r\nimport Header from './components/Header/Header';\r\nimport ToDoListContainer from './components/toDoList/ToDiListContainer';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n          <ToDoListContainer />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\reportWebVitals.js",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDiListContainer.jsx",[],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\ToDoList.jsx",["45","46","47","48","49","50"],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\toDoList\\task\\Task.jsx",["51"],"C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\Redux\\store.js",["52","53","54"],"import { combineReducers, createStore } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nconst ADD_NEW_TASK = 'ADD_NEW_TASK';\r\nconst STAGE_OF_DONE = 'STAGE_OF_DONE';\r\nconst TOGGLE_EDIT_MODE = 'TOGGLE_EDIT_MODE';\r\nconst EDIT_TEXT_TASK = 'EDIT_TEXT_TASK';\r\nconst DELETE_TASK = 'DELETE_TASK';\r\n\r\nexport const addTaskAC = (task) => ({ type: ADD_NEW_TASK, task });\r\nexport const stageOfDoneAC = (idTask) => ({ type: STAGE_OF_DONE, idTask });\r\nexport const editTaskAC = (idTask) => ({ type: TOGGLE_EDIT_MODE, idTask })\r\nexport const editTextTaskAC = (idTask, textTask) => ({ type: EDIT_TEXT_TASK, idTask, textTask })\r\nexport const deleteTaskAC = (idTask) => ({ type: DELETE_TASK, idTask });\r\n\r\nlet localBaseTask = JSON.parse(localStorage.getItem('taskList'))\r\n\r\nlet initialState = {\r\n    taskList: [...localBaseTask]\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    let stateCopy;\r\n    let date = new Date();\r\n\r\n    let getDate = (date.getDate() < 10) ? '0' + date.getDate(): date.getDate();\r\n    let getMonth = (date.getMonth() < 10) ? '0' + date.getMonth(): date.getMonth();\r\n    let createDate = `${getDate}.${getMonth}.${date.getFullYear()}`\r\n\r\n    let getHours = (date.getHours() < 10) ? '0' + date.getHours(): date.getHours();\r\n    let getMinutes = (date.getMinutes() < 10) ? '0' + date.getMinutes(): date.getMinutes();\r\n    let createTime = `${getHours}:${getMinutes}`;\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_TASK:\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...state.taskList]\r\n            }\r\n            const idTask = `f${(~~(Math.random() * 1e8)).toString(16)}`;\r\n            stateCopy.taskList.unshift({ id: idTask, text: action.task, done: false, edit: false, createDateTask: {date: createDate, time: createTime}});\r\n\r\n            localStorage.setItem('taskList', JSON.stringify(stateCopy.taskList))\r\n            console.log(stateCopy)\r\n            return stateCopy;\r\n        case STAGE_OF_DONE:\r\n            let arr = state.taskList.map((item) => {\r\n                if (item.id == action.idTask) {\r\n                    item.done = !item.done\r\n                }\r\n                return item\r\n            })\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arr]\r\n            }\r\n            localStorage.setItem('taskList', JSON.stringify(arr))\r\n            return stateCopy;\r\n        case TOGGLE_EDIT_MODE:\r\n            let arrEdit = state.taskList.map((item) => {\r\n                if (item.id == action.idTask) {\r\n                    item.edit = !item.edit\r\n                }\r\n                return item\r\n            })\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arrEdit]\r\n            }\r\n            localStorage.setItem('taskList', JSON.stringify(arrEdit))\r\n            return stateCopy;\r\n        case EDIT_TEXT_TASK:\r\n\r\n            let arrEditText = state.taskList.map((item) => {\r\n                if (item.id == action.idTask) {\r\n                    item.text = action.textTask;\r\n                    item.createDateTask.time = `ред. ${createTime}`;\r\n                    item.createDateTask.date = createDate;\r\n                }\r\n                return item\r\n            })\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arrEditText]\r\n            }\r\n            localStorage.setItem('taskList', JSON.stringify(arrEditText))\r\n            return stateCopy;\r\n        case DELETE_TASK:\r\n            let arrfilter = state.taskList.filter((item) => {\r\n                return (item.id !== action.idTask) ? true : false\r\n            });\r\n            stateCopy = {\r\n                ...state,\r\n                taskList: [...arrfilter]\r\n            }\r\n\r\n            localStorage.setItem('taskList', JSON.stringify(arrfilter))\r\n\r\n            return stateCopy;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nlet rootReducer = combineReducers({\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer);\r\n\r\n\r\nexport default appReducer","C:\\Users\\Tor\\Desktop\\Web\\to-do-list\\toDoList\\src\\components\\fieldLevelValidation\\validation.js",["55","56","57","58"],"import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nexport const required = value => (value || typeof value === 'number' ? undefined : 'Поле не может быть пустым')\r\n\r\nconst maxLength = max => value =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n  \r\nconst maxLength15 = maxLength(15)\r\n\r\nexport const minLength = min => value =>\r\n  value && value.length < min ? `Must be ${min} characters or more` : undefined\r\n\r\nexport const minLength2 = minLength(2)",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":50,"column":46,"nodeType":"69","messageId":"70","endLine":50,"endColumn":48},{"ruleId":"67","severity":1,"message":"68","line":51,"column":46,"nodeType":"69","messageId":"70","endLine":51,"endColumn":48},{"ruleId":"67","severity":1,"message":"68","line":52,"column":46,"nodeType":"69","messageId":"70","endLine":52,"endColumn":48},{"ruleId":"67","severity":1,"message":"68","line":75,"column":45,"nodeType":"69","messageId":"70","endLine":75,"endColumn":47},{"ruleId":"67","severity":1,"message":"68","line":76,"column":45,"nodeType":"69","messageId":"70","endLine":76,"endColumn":47},{"ruleId":"67","severity":1,"message":"68","line":77,"column":45,"nodeType":"69","messageId":"70","endLine":77,"endColumn":47},{"ruleId":"63","severity":1,"message":"71","line":29,"column":11,"nodeType":"65","messageId":"66","endLine":29,"endColumn":28},{"ruleId":"67","severity":1,"message":"68","line":48,"column":29,"nodeType":"69","messageId":"70","endLine":48,"endColumn":31},{"ruleId":"67","severity":1,"message":"68","line":61,"column":29,"nodeType":"69","messageId":"70","endLine":61,"endColumn":31},{"ruleId":"67","severity":1,"message":"68","line":75,"column":29,"nodeType":"69","messageId":"70","endLine":75,"endColumn":31},{"ruleId":"63","severity":1,"message":"72","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":13},{"ruleId":"63","severity":1,"message":"73","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":15},{"ruleId":"63","severity":1,"message":"74","line":2,"column":17,"nodeType":"65","messageId":"66","endLine":2,"endColumn":26},{"ruleId":"63","severity":1,"message":"75","line":9,"column":7,"nodeType":"65","messageId":"66","endLine":9,"endColumn":18},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'onNotEditTextTask' is assigned a value but never used.","'React' is defined but never used.","'Field' is defined but never used.","'reduxForm' is defined but never used.","'maxLength15' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]